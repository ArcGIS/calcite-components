name: Deploy Latest
on:
  workflow_dispatch:
  push:
    branches: [main, hotfix]
permissions:
  contents: write
  pull-requests: write
jobs:
  release-please:
    runs-on: ubuntu-20.04
    steps:
      - uses: google-github-actions/release-please-action@v3.7.13
        id: release
        with:
          command: manifest
          token: ${{ secrets.ADMIN_TOKEN }}
          default-branch: ${{ github.ref_name }}
          extra-files: |
            packages/calcite-components/readme.md
      - name: Checkout Repository
        if: ${{ steps.release.outputs.releases_created }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.ADMIN_TOKEN }}
      - name: Setup Node
        if: ${{ steps.release.outputs.releases_created }}
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          registry-url: "https://registry.npmjs.org"
      - name: Build Packages and Publish to NPM
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          npm install
          npm run build

          # These git commands can be removed once we stop tracking components.d.ts
          # For more info, see: https://github.com/Esri/calcite-design-system/pull/9011
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

          # The "|| true" prevents failure if there are no changes
          git add packages/calcite-components/src/components.d.ts package-lock.json || true

          # The release-please PR only updates when there are new deployable
          # commits, e.g., fixes, features, or breaking changes. This is fine
          # but it means autogenerated files can become outdated.
          #
          # Lerna will only publish when the working tree is clean, so changes
          # to autogenerated files cause the release to fail.
          #
          # The workaround is to commit the files before releasing so everything
          # will be up to date in the dists. The commit will be discarded once
          # the container is destroyed, and then the autogenerated files will be
          # updated in a subsequent PR.
          git commit -m "build: update types and package-lock" || true

          npm run publish:latest
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
