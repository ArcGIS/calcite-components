name: PR Bot
on:
  pull_request:
    types: [opened]
    branches: [master]
jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        id: my-script
        with:
          result-encoding: string
          script: |
            const {
              repo: { owner, repo },
              payload: {
                issue: { title, number: issue_number }
              }
            } = context;

            const conventionalCommitRegex =
              /^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)(\([\w ,-]+\))?(!?:\s+)([\w ]+[\s\S]*)/i;

            const match = title.match(conventionalCommitRegex);
            const commitType = match[1]; // first match group

            if (commitType) {
              const labels = [getLabelName(commitType)];

              await octokit.rest.issues.addLabels({
                owner,
                repo,
                issue_number,
                labels
              });
            }

            function getLabelName(type) {
              switch (type) {
                case "feat":
                  return "enhancement";
                case "fix":
                  return "bug";
                case "docs":
                  return "docs";
                case "test":
                  return "testing";
                case "refactor":
                  return "refactor";
                case "tooling":
                  return "tooling";
                default:
                  return "chore";
              }
            };
