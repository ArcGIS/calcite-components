name: Sync from Airtable

on:
  # publish blog using webhook
  repository_dispatch:
    types: [airtable-update]

env:
  DATA: ${{ toJSON(github.event.client_payload.data) }}
  NUMBER: ${{ github.event.client_payload.number }}
  TITLE: ${{ github.event.client_payload.title }}
  OWNER: 'Esri'
  REPO: 'calcite-design-tokens'

jobs:
  existing_issue:
    name: Find Existing Issue
    runs-on: ubuntu-latest
    outputs:
      github_issue: ${{ steps.find-existing-issue.outputs.result }}
    steps:
     - uses: actions/github-script@v6
       id: find-existing-issue
       env:
          NUMBER: '${{env.NUMBER}}'
          OWNER: '${{env.OWNER}}'
          REPO: '${{env.REPO}}'
       with:
         script: |
           const { NUMBER, OWNER, REPO } = process.env;
           return github.rest.issues.get({
             issue_number: NUMBER,
             owner: OWNER,
             repo: REPO,
           });
  debugger:
    name: Test for data
    needs: existing_issue
    runs-on: ubuntu-latest
    steps:
     - uses: actions/github-script@v6
       env:
          DATA: env.DATA
          ISSUE: needs.existing-issue.outputs.github_issue
       with:
          script: |
              core.info(process.env.ISSUE)
              core.info(process.env.DATA)
    
  assigned_unassigned:
    name: Assign or Unassign
    needs: existing_issue
    if: needs.existing-issue.outputs.github_issue.status == 200 && github.event.client_payload.action == 'assigned/unassigned'
    runs-on: ubuntu-latest
    steps:
     - uses: actions/github-script@v6
       with:
          script: |
              core.info(process.env.ACTION)
  labeled_unlabeled:
    name: Label or UnLabel
    needs: existing_issue
    if: needs.existing-issue.outputs.github_issue.status == 200 && github.event.client_payload.action == 'labeled/unlabeled'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
            script: |
              core.info(process.env.ACTION)
  milestoned_demilestoned:
    name: Milestone or DeMilestone
    needs: existing_issue
    if: needs.existing-issue.outputs.github_issue.status == 200 && github.event.client_payload.action == 'milestoned/demilestoned'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
            script: |
              console.log(process.env.ACTION)
  open_closed:
    name: Opened, ReOpened, or Closed
    needs: existing_issue
    if: needs.existing-issue.outputs.github_issue.status == 200 && github.event.client_payload.action == 'opened/closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
            script: |
              core.info(process.env.ACTION)
  edited:
    name: Edited
    needs: existing_issue
    if: needs.existing-issue.outputs.github_issue.status == 200 && github.event.client_payload.action == 'edited'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
            script: |
              core.info(process.env.ACTION)
  new_issue:
    name: Create New Issue
    needs: existing_issue
    if: needs.existing-issue.outputs.github_issue.status != 200
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
            script: |
              core.info(process.env.ACTION)
