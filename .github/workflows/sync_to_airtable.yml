name: Sync to Airtable

on:
  issues:
    types: [opened, edited, closed, reopened, assigned, unassigned, labeled, unlabeled, milestoned, demilestoned]

jobs:
  send_opened:
    if: | 
      github.event.action == 'test'
    runs-on: ubuntu-latest
    steps:
      - run: echo "send opened"
  send_edited:
    if: | 
      github.event.action == 'test'
    runs-on: ubuntu-latest
    steps:
      - run: echo "send edited"
  send_closed:
    if: | 
      github.event.action == 'test'
    runs-on: ubuntu-latest
    steps:
      - run: echo "send closed"
  send_reopened:
    if: | 
      github.event.action == 'test'
    runs-on: ubuntu-latest
    steps:
      - run: echo "send reopened"
  send_assigned:
    if: | 
      github.event.action == 'test'
    runs-on: ubuntu-latest
    steps:
      - run: echo "send assigned"
  send_unassigned:
    if: | 
      github.event.action == 'test'
    runs-on: ubuntu-latest
    steps:
      - run: echo "send unassigned"
  send_labeled:
    if: | 
      github.event.action == 'test'
    runs-on: ubuntu-latest
    steps:
      - run: echo "send labeled"
  send_unlabeled:
    if: | 
      github.event.action == 'test'
    runs-on: ubuntu-latest
    steps:
      - run: echo "send unlabeled"
  send_milestoned:
    if: | 
      github.event.action == 'test'
    runs-on: ubuntu-latest
    steps:
      - run: echo "send milestoned"
  send_demilestoned:
    if: | 
      github.event.action == 'test'
    runs-on: ubuntu-latest
    steps:
      - run: echo "send demilestoned"
  get_data:
    runs-on: ubuntu-latest
    steps:
      - name: Set Data
        id: set-data
        uses: actions/github-script@v6
        env:
          SECRET: ${{ secrets.AIRTABLE_KEY }}
          ISSUE: ${{ toJSON(github.event.issue) }}
          WEBHOOK: ${{ secrets.AIRTABLE_WEBHOOK }}
        with:
          script: |
            const { title, body, assignees, closed_at, created_at, id, labels, milestone, number, state, updated_at } = process.env.ISSUE;
            const test = JSON.parse(body)
            return test;
          result-encoding: string
      - name: Log Result
        run: |
            echo "${{steps.set-data.outputs.result}}" | echo "${{ github.event }}"
