@import "~@esri/calcite-colors/dist/colors";
@import "~@esri/calcite-base/dist/index";
@import "~@esri/calcite-design-tokens/dist/scss/index";
@import "~@esri/calcite-design-tokens/dist/scss/core";

/* mixins & extensions */
@import "animation";
@import "focus";
@import "host";
@import "floating-ui";
@import "sortable";
@import "x-button";

@mixin slotted($selector, $tag, $scope: "") {
  #{$scope} slot[name="#{$selector}"]::slotted(#{$tag}),
  #{$scope} #{$tag}::slotted([slot="#{$selector}"]) {
    @content;
  }
}

@mixin word-break() {
  word-wrap: break-word;
  word-break: break-word;
}

// mixin to hide inputs from form-associated components
@mixin hidden-form-input() {
  ::slotted(input[slot="hidden-form-input"]) {
    margin: 0 !important;
    opacity: 0 !important;
    outline: none !important;
    padding: 0 !important;
    position: absolute !important;
    inset: 0 !important;
    transform: none !important;
    -webkit-appearance: none !important;
    z-index: -1 !important;
  }
}

// mixin for the container of validation messages displayed below form-associated components
@mixin form-validation-message() {
  .validation-container {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    align-self: stretch;
  }

  :host([scale="m"]) .validation-container,
  :host([scale="l"]) .validation-container {
    padding-block-start: 0.5rem;
  }

  :host([scale="s"]) .validation-container {
    padding-block-start: 0.25rem;
  }
}

// mixin to provide base disabled styles for interactive components
// additional styling can be passed via @content
@mixin disabled() {
  :host([disabled]) {
    @extend %disabled-host-only;
    @content;

    ::slotted([calcite-hydrated][disabled]),
    [calcite-hydrated][disabled] {
      /* prevent opacity stacking */
      opacity: 1;
    }
  }

  .interaction-container {
    display: contents;
  }
}

// used for host-specific styling when the `disabled` mixin cannot be applied on the host (e.g., `display: contents`)
%disabled-host-only {
  opacity: var(--calcite-opacity-disabled);
  cursor: default;
  user-select: none;
  @extend %non-interactive-host-contents;
}

%non-interactive-host-contents {
  *,
  ::slotted(*) {
    pointer-events: none;
  }
}

// mixin to provide default invisibility and disabling of pointer events for components.
@mixin calciteHydratedHidden() {
  :host([calcite-hydrated-hidden]) {
    visibility: hidden !important; // 'important' is being used here to temporarily handle precendence of visibility set with calcite-hydrated. Do not follow this pattern. See #991.
    pointer-events: none;
  }
}

@mixin base-component() {
  :host([hidden]) {
    display: none;
  }

  [hidden] {
    display: none;
  }
}
