/**
 * CSS Custom Properties
 *
 * These properties can be overridden
 *
 * @prop --calcite-accordion-item-background: Specifies the background color of the accordion item.
 * @prop --calcite-accordion-item-space: Specifies the base spacing multiplier for padding and margin of the accordion item.
 * @prop --calcite-accordion-item-header-background: Specifies the background color of the accordion item header.
 * @prop --calcite-accordion-item-size: Specifies a base size for the accordion item.
 * @prop --calcite-accordion-item-header-color: Specifies a font color used in the accordion item header.
 * @prop --calcite-accordion-item-description-color: Specifies a font color used in the accordion item description.
 * @prop --calcite-accordion-item-content-color: Specifies a font color used in the accordion item content.
 * @prop --calcite-accordion-item-icon-color: Specifies a color used for accordion item icons.
 * @prop --calcite-accordion-item-border-color: Specifies the color used for the accordion item borders.
 *
 */

/*
  * Local props
  * These properties are intended for internal component use only. It is not recommended that these properties be overwritten.
  *
  * --calcite-internal-accordion-item-icon-rotation
  * --calcite-internal-accordion-item-flex-direction
  * --calcite-internal-accordion-item-icon-spacing-start
  * --calcite-internal-accordion-item-icon-spacing-end
  * --calcite-internal-accordion-item-header-outline-color
  * --calcite-internal-accordion-item-content-display
*/

%icon-position {
  /* icon rotation variables */
  --calcite-accordion-item-icon-rotation: calc(theme("rotate.90") * -1);
  --calcite-accordion-item-active-icon-rotation: theme("rotate.0");
  --calcite-accordion-item-icon-rotation-rtl: theme("rotate.90");
  --calcite-accordion-item-active-icon-rotation-rtl: theme("rotate.0");
}

// icon position variants for child
.icon-position--start {
  @extend %icon-position;
  --calcite-accordion-item-flex-direction: row-reverse;
  --calcite-accordion-item-icon-spacing-start: 0;
  --calcite-accordion-item-icon-spacing-end: theme("spacing.4");
}

.icon-position--end {
  @extend %icon-position;
  --calcite-accordion-item-flex-direction: row;
  --calcite-accordion-item-icon-spacing-start: var(--calcite-accordion-icon-margin);
  --calcite-accordion-item-icon-spacing-end: 0;
}

.icon-position--end:not(.icon-type--plus-minus) {
  --calcite-accordion-item-icon-rotation: theme("rotate.0");
  --calcite-accordion-item-active-icon-rotation: theme("rotate.180");
  --calcite-accordion-item-icon-rotation-rtl: theme("rotate.0");
  --calcite-accordion-item-active-icon-rotation-rtl: calc(theme("rotate.180") * -1);
}

:host {
  --calcite-internal-accordion-item-header-outline-color: var(--calcite-color-transparent);
  --calcite-internal-accordion-item-border-block-start-color: var(--calcite-accordion-item-border-color);
  --calcite-internal-accordion-item-border-block-end-color: var(--calcite-accordion-item-border-color);
  --calcite-internal-accordion-item-border-inline-start-color: var(--calcite-accordion-item-border-color);
  --calcite-internal-accordion-item-border-inline-end-color: var(--calcite-accordion-item-border-color);

  position: relative;
  display: flex;
  flex-direction: column;
  text-decoration-line: none;
  background: var(--calcite-accordion-item-background);
}

:host(:focus) {
  --calcite-internal-accordion-item-header-outline-color: var(--calcite-color-brand);
}

:host([expanded]) {
  --calcite-internal-accordion-item-content-display: block;
  --calcite-internal-accordion-item-border-block-end-color: transparent;
}

:host(:focus),
:host(:hover),
:host([expanded]) {
  .heading,
  .icon--end,
  .icon--start,
  .expand-icon {
    --calcite-accordion-item-color: var(--calcite-color-text-1);
  }
  .description {
    --calcite-accordion-item-color: var(--calcite-color-text-2);
  }
}

.header {
  display: flex;
  align-items: stretch;
  // outline styles used to be applied to header-content. may need updates.
  outline: 2px solid var(--calcite-internal-accordion-item-header-outline-color, transparent);
  outline-offset: calc(-2px * calc(1 - 2 * clamp(0, var(--calcite-offset-invert-focus), 1)));
  outline-color: var(--calcite-internal-accordion-item-header-outline-color, transparent);
  background: var(--calcite-accordion-item-header-background, var(--calcite-accordion-item-background));
  color: var(--calcite-accordion-item-header-color, var(--calcite-accordion-color));
  border-style: solid;
  border-width: var(--calcite-border-width-sm);
  border-block-start-color: var(
    --calcite-internal-accordion-item-border-block-start-color,
    var(--calcite-color-transparent)
  );
  border-block-end-color: var(
    --calcite-internal-accordion-item-border-block-end-color,
    var(--calcite-color-transparent)
  );
  border-inline-start-color: var(
    --calcite-internal-accordion-item-border-inline-start-color,
    var(--calcite-color-transparent)
  );
  border-inline-end-color: var(
    --calcite-internal-accordion-item-border-inline-end-color,
    var(--calcite-color-transparent)
  );

  * {
    word-wrap: break-word;
    word-break: break-word;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
    align-items: center;
    display: inline-flex;
  }
}

.header-text {
  margin-block: 0px;
  text-align: initial;
  flex-grow: 1;
  flex-direction: column;
  margin-inline-end: auto;
  padding-block: 0px;
}

.header-content {
  flex-grow: 1;
  cursor: pointer;
  padding: var(--calcite-accordion-item-space);
  flex-direction: var(--calcite-accordion-item-flex-direction);
}

.heading,
.description,
.header-container {
  inline-size: 100%;
}

.heading {
  font-weight: var(--calcite-font-weight-medium);
}

.description {
  margin-block-start: 0.25rem /* 4px */;
  color: var(--calcite-accordion-item-description-color, var(--calcite-accordion-color));
}

.content {
  text-align: initial;
  padding: var(--calcite-accordion-item-space);
  padding-block-start: 0px;
  display: var(--calcite-internal-accordion-item-content-display, none);
  color: var(--calcite-accordion-item-content-color, var(--calcite-accordion-color));
}

.expand-icon,
.icon--start,
.icon--end {
  color: var(--calcite-accordion-item-icon-color, var(--calcite-accordion-color));
}

.icon--start,
.icon--end {
  display: flex;
  align-items: center;
}

.icon--start {
  margin-inline-end: var(--calcite-accordion-icon-space);
}

.icon--end {
  margin-inline-end: var(--calcite-accordion-icon-space);
  margin-inline-start: var(--calcite-accordion-icon-space);
}

.expand-icon {
  margin-inline-start: var(--calcite-accordion-item-icon-spacing-start);
  margin-inline-end: var(--calcite-accordion-item-icon-spacing-end);
  transform: rotate(var(--calcite-accordion-item-icon-rotation));
}

.calcite--rtl .expand-icon {
  transform: rotate(var(--calcite-accordion-item-icon-rotation-rtl));
}

:host([expanded]) .expand-icon {
  transform: rotate(var(--calcite-accordion-item-active-icon-rotation));
}

:host([expanded]) .calcite--rtl .expand-icon {
  transform: rotate(var(--calcite-accordion-item-active-icon-rotation-rtl));
}

@media (forced-colors: active) {
  :host([expanded]) {
    .header {
      border-block-end: none;
    }
    .heading {
      /** give visual indicator of expanded state since subtle color changes can't be done **/
      font-weight: bolder;
    }
  }
  :host(:hover),
  :host(:focus) {
    .heading {
      /** give visual indicator of expandability/click-ability since subtle color changes can't be done **/
      text-decoration: underline;
    }
  }
}

@include base-component();
