/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-accordion-item-background-color: defines the background color for the component.
 * @prop --calcite-accordion-item-border-color: defines the border color for the component.
 * @prop --calcite-accordion-item-description-text-color: defines the text color of the description in the component.
 * @prop --calcite-accordion-item-heading-text-color: defines the text color of the heading in the component.
 * @prop --calcite-accordion-item-icon-color: defines the icon color for the component.
 * @prop --calcite-accordion-item-expand-icon-color: defines the icon color for the component.
 * @prop --calcite-accordion-item-text-color: defines the text color for the component.
 */

%icon-position {
  /* icon rotation variables */
  --calcite-internal-accordion-item-icon-rotation: calc(theme("rotate.90") * -1);
  --calcite-internal-accordion-item-active-icon-rotation: theme("rotate.0");
  --calcite-internal-accordion-item-icon-rotation-rtl: theme("rotate.90");
  --calcite-internal-accordion-item-active-icon-rotation-rtl: theme("rotate.0");
}

// icon position variants for child
.icon-position--start {
  @extend %icon-position;
  --calcite-internal-accordion-item-flex-direction: row-reverse;
  --calcite-internal-accordion-item-icon-space-x-start: 0;
  --calcite-internal-accordion-item-icon-space-x-end: var(--calcite-internal-accordion-item-icon-space);
}

.icon-position--end {
  @extend %icon-position;
  --calcite-internal-accordion-item-flex-direction: row;
  --calcite-internal-accordion-item-icon-space-x-start: var(--calcite-internal-accordion-item-icon-space);
  --calcite-internal-accordion-item-icon-space-x-end: 0;
}

.icon-position--end:not(.icon-type--plus-minus) {
  --calcite-internal-accordion-item-icon-rotation: theme("rotate.0");
  --calcite-internal-accordion-item-active-icon-rotation: theme("rotate.180");
  --calcite-internal-accordion-item-icon-rotation-rtl: theme("rotate.0");
  --calcite-internal-accordion-item-active-icon-rotation-rtl: calc(theme("rotate.180") * -1);
}

:host {
  @apply relative
    flex
    flex-col
    no-underline;
  color: var(--calcite-accordion-item-text-color, var(--calcite-color-text-3));
  background-color: var(--calcite-accordion-item-background-color, var(--calcite-color-foreground-1));
}

// focus styles
:host .header-content {
  @apply focus-base;
}

:host(:focus) .header-content {
  @apply focus-inset outline-none;
}

:host([expanded]) {
  color: var(--calcite-accordion-item-text-color, var(--calcite-color-text-1));

  & .content {
    @apply block;
  }
  & .header {
    border-block-end-color: var(--calcite-color-transparent);
  }
}

// .header / content
:host .header {
  @apply flex items-stretch;
}

:host .icon {
  @apply relative
    m-0
    inline-flex
    duration-150
    ease-in-out;
  color: var(
    --calcite-accordion-item-icon-color,
    var(--calcite-accordion-item-text-color, var(--calcite-color-text-3))
  );
  margin-inline-end: var(--calcite-internal-accordion-item-icon-space-x-start);
  margin-inline-start: var(--calcite-internal-accordion-item-icon-space-x-end);
}

.icon--start {
  @apply flex items-center;
  margin-inline-end: var(--calcite-internal-accordion-item-icon-space);
}

.icon--end {
  @apply flex items-center;
  margin-inline-end: var(--calcite-internal-accordion-item-icon-space);
  margin-inline-start: var(--calcite-internal-accordion-item-icon-space);
}

.header-container {
  inline-size: var(--calcite-container-size-content-fluid);
}

.content {
  padding: var(--calcite-internal-accordion-item-content-space);
}

:host .content,
:host .header {
  border-block-end-width: var(--calcite-border-width-sm);
  border-block-end-style: solid;
  border-block-end-color: var(--calcite-accordion-item-border-color, var(--calcite-color-border-2));
}

:host .header * {
  @apply inline-flex
    items-center
    duration-150
    ease-in-out;
  @include word-break();
}

:host .content {
  @apply hidden pt-0;
  text-align: initial;
}

// accordion item icon
:host .expand-icon {
  margin-inline-start: var(--calcite-internal-accordion-item-icon-space-x-start);
  margin-inline-end: var(--calcite-internal-accordion-item-icon-space-x-end);
  transform: rotate(var(--calcite-internal-accordion-item-icon-rotation));
}

.calcite--rtl .expand-icon {
  transform: rotate(var(--calcite-internal-accordion-item-icon-rotation-rtl));
}

:host([expanded]) .expand-icon {
  transform: rotate(var(--calcite-internal-accordion-item-active-icon-rotation));
}

:host([expanded]) .calcite--rtl .expand-icon {
  transform: rotate(var(--calcite-internal-accordion-item-active-icon-rotation-rtl));
}

// accordion item title
:host .header-text {
  @apply my-0 flex-grow flex-col py-0;
  text-align: initial;
  margin-inline-end: theme("margin.auto");
}

:host .heading,
:host .description {
  @apply flex;
  inline-size: var(--calcite-container-size-content-fluid);
}

:host .heading {
  @apply font-medium;
  color: var(
    --calcite-accordion-item-heading-text-color,
    var(--calcite-accordion-item-text-color, var(--calcite-color-text-2))
  );
}
:host .description {
  @apply mt-1;
  color: var(
    --calcite-accordion-item-description-text-color,
    var(--calcite-accordion-item-text-color, var(--calcite-color-text-3))
  );
}

:host(:focus),
:host(:hover),
:host(:active),
:host([expanded]) {
  & .heading {
    color: var(
      --calcite-accordion-item-heading-text-color,
      var(--calcite-accordion-item-text-color, var(--calcite-color-text-1))
    );
  }
  & .expand-icon,
  & .icon {
    color: var(
      --calcite-accordion-item-icon-color,
      var(--calcite-accordion-item-text-color, var(--calcite-color-text-1))
    );
  }

  & .description {
    color: var(
      --calcite-accordion-item-description-text-color,
      var(--calcite-accordion-item-text-color, var(--calcite-color-text-2))
    );
  }
}

:host([expanded]) {
  & .expand-icon {
    color: var(
      --calcite-accordion-item-expand-icon-color,
      var(--calcite-accordion-item-icon-color, var(--calcite-accordion-item-text-color, var(--calcite-color-text-3)))
    );
  }
}

.header-content {
  @apply flex-grow cursor-pointer;
  padding: var(--calcite-internal-accordion-item-content-space);
  flex-direction: var(--calcite-internal-accordion-item-flex-direction);
}

.actions-start,
.actions-end {
  @apply flex items-center;
}

@media (forced-colors: active) {
  :host([expanded]) {
    & .header {
      border-block-end: none;
    }
    & .heading {
      /** give visual indicator of expanded state since subtle color changes can't be done **/
      font-weight: bolder;
    }
  }
  :host(:hover),
  :host(:focus) {
    & .heading {
      /** give visual indicator of expandability/click-ability since subtle color changes can't be done **/
      text-decoration: underline;
    }
  }
}

@include base-component();
