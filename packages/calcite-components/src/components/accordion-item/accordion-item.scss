%icon-position {
  /* icon rotation variables */
  --calcite-internal-accordion-item-icon-rotation: calc(theme("rotate.90") * -1);
  --calcite-internal-accordion-item-active-icon-rotation: theme("rotate.0");
  --calcite-internal-accordion-item-icon-rotation-rtl: theme("rotate.90");
  --calcite-internal-accordion-item-active-icon-rotation-rtl: theme("rotate.0");
}

:host {
  @apply relative
    flex
    flex-col
    no-underline;

  color: var(--calcite-accordion-text-color, var(--calcite-color-text-3));
}

// icon position variants for child
.icon-position--start {
  @extend %icon-position;
  --calcite-internal-accordion-item-flex-direction: row-reverse;
}

.icon-position--end {
  @extend %icon-position;
  --calcite-internal-accordion-item-flex-direction: row;
}

.icon-position--end:not(.icon-type--plus-minus) {
  --calcite-internal-accordion-item-icon-rotation: theme("rotate.0");
  --calcite-internal-accordion-item-active-icon-rotation: theme("rotate.180");
  --calcite-internal-accordion-item-icon-rotation-rtl: theme("rotate.0");
  --calcite-internal-accordion-item-active-icon-rotation-rtl: calc(theme("rotate.180") * -1);
}

// .header / content
.content,
.header {
  border-block-end: var(--calcite-border-width-sm) solid
    var(--calcite-internal-accordion-item-border, theme("borderColor.color.2"));
}

.header {
  @apply flex items-stretch;

  * {
    @apply inline-flex
      items-center
      duration-150
      ease-in-out;
    @include word-break();
  }
}

.header-content {
  @apply focus-base flex-grow cursor-pointer;
  padding: var(--calcite-internal-accordion-item-padding);
  flex-direction: var(--calcite-internal-accordion-item-flex-direction);
}

.header-container {
  inline-size: 100%;
}

// accordion item title
.header-text {
  @apply my-0 flex-grow flex-col py-0;
  text-align: initial;
  margin-inline-end: theme("margin.auto");
}

.heading,
.description {
  @apply flex w-full;
}

.heading {
  @apply font-medium;
}

.actions-start,
.actions-end {
  @apply flex items-center;
}

.icon {
  @apply relative
    m-0
    inline-flex
    duration-150
    ease-in-out;
}

.icon--start {
  @apply flex items-center;
}

.icon--end {
  @apply flex items-center;
}

// accordion item icon
.expand-icon {
  transform: rotate(var(--calcite-internal-accordion-item-icon-rotation));
}

.calcite--rtl .expand-icon {
  transform: rotate(var(--calcite-internal-accordion-item-icon-rotation-rtl));
}

.description {
  @apply mt-1;
}

.content {
  @apply hidden pt-0;
  text-align: initial;
  padding: var(--calcite-internal-accordion-item-padding);
}

:host(:not(:focus):not(:hover):not([expanded])) {
  .heading {
    color: var(--calcite-accordion-heading-text-color, var(--calcite-color-text-2));
  }
}

:host(:focus) .header-content {
  @apply outline-none;
}

:host([expanded]) {
  color: var(--calcite-accordion-text-color-highlight, var(--calcite-color-text-1));

  .header {
    border-block-end-color: transparent;
  }

  .expand-icon {
    color: var(--calcite-accordion-heading-text-color, var(--calcite-color-text-2));
    transform: rotate(var(--calcite-internal-accordion-item-active-icon-rotation));
  }
  .calcite--rtl .expand-icon {
    transform: rotate(var(--calcite-internal-accordion-item-active-icon-rotation-rtl));
  }

  .description {
    color: var(--calcite-accordion-heading-text-color, var(--calcite-color-text-2));
  }

  .content {
    @apply block;
  }
}

:host(:focus),
:host(:hover) {
  color: var(--calcite-accordion-heading-text-color, var(--calcite-color-text-2));

  .expand-icon,
  .heading {
    color: var(--calcite-accordion-text-color-highlight, var(--calcite-color-text-1));
  }
}

@media (forced-colors: active) {
  :host([expanded]) {
    .header {
      border-block-end: none;
    }
    .heading {
      /** give visual indicator of expanded state since subtle color changes can't be done **/
      font-weight: bolder;
    }
  }
  :host(:hover),
  :host(:focus) {
    .heading {
      /** give visual indicator of expandability/click-ability since subtle color changes can't be done **/
      text-decoration: underline;
    }
  }
}

@include base-component();
