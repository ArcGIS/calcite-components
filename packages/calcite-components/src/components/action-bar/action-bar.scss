/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-action-bar-action-background-color: defines the background color of an action sub-component inside the component.
 * @prop --calcite-action-bar-action-indicator-color: defines the indicator color of an action sub-component inside the component.
 * @prop --calcite-action-bar-action-text-color: defines the text color of an action sub-component inside the component.
 * @prop --calcite-action-bar-action-background-color-hover: defines the background color of an action sub-component when hovered or focused inside the component.
 * @prop --calcite-action-bar-action-indicator-color-hover: defines the indicator color of an action sub-component when hovered or focused inside the component.
 * @prop --calcite-action-bar-action-text-color-hover: defines the text color of an action sub-component when hovered or focused inside the component.
 * @prop --calcite-action-bar-action-background-color-active: defines the background color of an action sub-component when active inside the component.
 * @prop --calcite-action-bar-action-indicator-color-active: defines the indicator color of an action sub-component when active inside the component.
 * @prop --calcite-action-bar-action-text-color-active: defines the text color of an action sub-component when active inside the component.
 * @prop --calcite-action-bar-expanded-max-width: When `layout` is `"vertical"`, specifies the expanded max width of the component.
 *
 */

:host {
  @extend %component-host;
  @apply pointer-events-auto
    inline-flex
    self-stretch;
  --calcite-action-bar-expanded-max-width: auto;
}

:host([layout="vertical"]) {
  @apply flex-col;
  .action-group--end {
    margin-block-start: auto;
  }
}

:host([layout="horizontal"]) {
  @apply flex-row;
  .action-group--end {
    @apply ms-auto;
  }
}

:host([layout="vertical"][overflow-actions-disabled]) {
  overflow-y: auto;
}

:host([layout="horizontal"][overflow-actions-disabled]) {
  overflow-x: auto;
}

:host([layout="vertical"][expanded]) {
  max-inline-size: var(--calcite-action-bar-expanded-max-width);
}

::slotted(calcite-action-group) {
  border-block-end: 1px solid var(--calcite-color-border-3);
}

:host([layout="horizontal"]) ::slotted(calcite-action-group) {
  border-block-end: 0;
  border-inline-end: 1px solid var(--calcite-color-border-3);
}

:host([layout="horizontal"][expand-disabled]) ::slotted(calcite-action-group:last-of-type) {
  border-inline-end: 0;
}

::slotted(calcite-action-group:last-child) {
  border-block-end: 0;
  border-inline-end: 0;
}

.action-group--end {
  @apply justify-end;
}

calcite-action {
  --calcite-action-indicator-color: var(--calcite-action-bar-action-indicator-color);
  --calcite-action-background-color: var(--calcite-action-bar-action-background-color);
  --calcite-action-text-color: var(--calcite-action-bar-action-text-color);

  &:hover,
  &:focus {
    --calcite-action-indicator-color: var(--calcite-action-bar-action-indicator-color-hover);
    --calcite-action-background-color: var(--calcite-action-bar-action-background-color-hover);
    --calcite-action-text-color: var(--calcite-action-bar-action-text-color-hover);
  }

  &:active {
    --calcite-action-indicator-color: var(--calcite-action-bar-action-indicator-color-active);
    --calcite-action-background-color: var(--calcite-action-bar-action-background-color-active);
    --calcite-action-text-color: var(--calcite-action-bar-action-text-color-active);
  }
}

@include base-component();
