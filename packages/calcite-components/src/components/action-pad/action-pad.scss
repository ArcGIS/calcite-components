/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-action-container-background-color: Specifies the background color of the component.
 * @prop --calcite-action-pad-corner-radius: Specifies the corner radius of the component.
 * @prop --calcite-action-pad-expanded-max-size-x: When `layout` is `"vertical"`, specifies the expanded max width of the component.
 * @prop --calcite-action-pad-shadow: Specifies the shadow of the component.
 */

:host {
  @extend %component-host;
  @apply animate-in block;

  background: transparent;
  border-radius: var(--calcite-action-pad-corner-radius, 0.125rem /* 2px */);
}

:host([expanded][layout="vertical"]) .container {
  max-inline-size: var(--calcite-action-pad-expanded-max-size-x, auto);
}

.container {
  @apply inline-flex
  flex-col
  overflow-y-auto;

  --tw-shadow: 0 6px 20px -4px rgba(0, 0, 0, 0.1), 0 4px 12px -2px rgba(0, 0, 0, 0.08);
  box-shadow: var(
    --calcite-action-pad-shadow,
    var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000),
    var(--tw-shadow)
  );
  background-color: var(--calcite-action-container-background-color, var(--calcite-color-background));
  border-radius: calc(var(--calcite-action-pad-corner-radius, 0.125rem) * 2);
}

.action-group--bottom {
  @apply flex-grow justify-end pb-0;
}

:host([layout="horizontal"]) {
  .container {
    @apply flex-row;

    .action-group--bottom {
      @apply p-0;
    }
    ::slotted(calcite-action-group) {
      @apply border-0
      p-0;
      border-inline-end-width: theme("borderWidth.DEFAULT");
    }
  }
}

@include base-component();
