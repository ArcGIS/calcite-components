/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-action-pad-background-color: Specifies the background color of the component.
 * @prop --calcite-action-pad-corner-radius: Specifies the corner radius of the component.
 * @prop --calcite-action-pad-expanded-max-width: When `layout` is `"vertical"`, specifies the expanded max width of the component.
 * @prop --calcite-action-pad-shadow: Specifies the shadow of the component.
 * @prop --calcite-action-pad-trigger-background-color-active: Specifies the background color of the nested trigger when active in the component.
 * @prop --calcite-action-pad-trigger-background-color-focus: Specifies the background color of the nested trigger when focused in the component.
 * @prop --calcite-action-pad-trigger-background-color-hover: Specifies the background color of the nested trigger when hovered in the component.
 * @prop --calcite-action-pad-trigger-background-color: Specifies the background color of the nested trigger in the component.
 * @prop --calcite-action-pad-trigger-icon-color-active: Specifies the icon color color of the nested trigger when active in the component
 * @prop --calcite-action-pad-trigger-icon-color-focus: Specifies the icon color of the nested trigger when focused in the component.
 * @prop --calcite-action-pad-trigger-icon-color-hover: Specifies the icon color of the nested trigger when hovered in the component.
 * @prop --calcite-action-pad-trigger-icon-color: Specifies the icon color of the nested trigger in the component.
 * @prop --calcite-action-pad-trigger-shadow-active: Specifies the shadow of the nested trigger when active in the component.
 * @prop --calcite-action-pad-trigger-shadow-focus: Specifies the shadow of the nested trigger when focused in the component.
 * @prop --calcite-action-pad-trigger-shadow-hover: Specifies the shadow of the nested trigger when hovered in the component.
 * @prop --calcite-action-pad-trigger-shadow: Specifies the shadow of the nested trigger in the component.
 * @prop --calcite-action-pad-trigger-text-color-active: Specifies the text color of the nested trigger when active in the component.
 * @prop --calcite-action-pad-trigger-text-color-focus: Specifies the text color of the nested trigger when focused in the component.
 * @prop --calcite-action-pad-trigger-text-color-hover: Specifies the text color of the nested trigger when hovered in the component.
 * @prop --calcite-action-pad-trigger-text-color: Specifies the text color of the nested trigger in the component.
 */

:host {
  @extend %component-host;
  @apply animate-in block rounded-sm;
  background: transparent;
}

calcite-action {
  --calcite-action-background-color: var(--calcite-action-pad-trigger-background-color);
  --calcite-action-text-color: var(--calcite-action-pad-trigger-text-color);
  --calcite-action-icon-color: var(--calcite-action-pad-trigger-icon-color);
  --calcite-action-shadow: var(--calcite-action-pad-trigger-shadow);

  &:hover {
    --calcite-action-background-color: var(--calcite-action-pad-trigger-background-color-hover);
    --calcite-action-text-color: var(--calcite-action-pad-trigger-text-color-hover);
    --calcite-action-icon-color: var(--calcite-action-pad-trigger-icon-color-hover);
    --calcite-action-shadow: var(--calcite-action-pad-trigger-shadow-hover);
  }
  &:focus {
    --calcite-action-background-color: var(--calcite-action-pad-trigger-background-color-focus);
    --calcite-action-text-color: var(--calcite-action-pad-trigger-text-color-focus);
    --calcite-action-icon-color: var(--calcite-action-pad-trigger-icon-color-focus);
    --calcite-action-shadow: var(--calcite-action-pad-trigger-shadow-focus);
  }
  &:active {
    --calcite-action-background-color: var(--calcite-action-pad-trigger-background-color-active);
    --calcite-action-text-color: var(--calcite-action-pad-trigger-text-color-active);
    --calcite-action-icon-color: var(--calcite-action-pad-trigger-icon-color-active);
    --calcite-action-shadow: var(--calcite-action-pad-trigger-shadow-active);
  }
}

:host([expanded][layout="vertical"]) .container {
  max-inline-size: var(--calcite-action-pad-expanded-max-width, auto);
}

::slotted(calcite-action-group) {
  padding-block: 0px;
}

.container {
  @apply inline-flex
  flex-col
  overflow-y-auto;
  border-radius: var(--calcite-action-pad-corner-radius, var(--calcite-corner-radius-round));
  background-color: var(--calcite-action-pad-background-color, var(--calcite-color-background));
  box-shadow: var(
    --calcite-action-pad-shadow,
    var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000),
    0 6px 20px -4px rgba(0, 0, 0, 0.1),
    0 4px 12px -2px rgba(0, 0, 0, 0.08)
  );
}

.action-group--bottom {
  @apply flex-grow justify-end;
  padding-block-end: 0px;
}

:host([layout="horizontal"]) {
  .container {
    @apply flex-row;

    .action-group--bottom {
      @apply p-0;
    }
  }
  ::slotted(calcite-action-group) {
    border-block-end-style: none;
    border-inline-end-style: solid;
  }
}

@include base-component();
