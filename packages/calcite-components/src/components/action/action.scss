/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-action-indicator-color: Specifies the color of the component's indicator.
 */
@include base-component();
@include disabled();

:host {
  // TODO: could this have button classes?
  @extend %component-host;
  @apply flex;
  background-color: var(--calcite-action-background-color, transparent);
}

.action-indicator {
  position: relative;
  &::after {
    content: "";
    @apply absolute
      h-2
      w-2
      rounded-full;
    inset-block-end: calc(-0.275rem);
    inset-inline-end: calc(-0.275rem);
    background-color: var(--calcite-action-indicator-color, var(--calcite-color-brand));
  }
}

button {
  @apply focus-base
    text-n2h
    relative
    m-0
    flex
    w-auto
    cursor-pointer
    items-center
    justify-start
    border-none
    font-sans
    font-medium;
  background-color: var(--calcite-action-background-color, var(--calcite-color-foreground-1));
  fill: var(--calcite-color-text-3);
  color: var(--calcite-color-text-3);
  text-align: unset;
  flex: 1 0 auto;

  &:hover,
  &:focus {
    @apply focus-inset;
    background-color: var(--calcite-action-background-color, var(--calcite-color-foreground-2));
    color: var(--calcite-action-text-color, var(--calcite-color-text-1));
  }

  &:active {
    background-color: var(--calcite-action-background-color, var(--calcite-color-foreground-3));
  }

  &.button--text-visible {
    inline-size: 100%;
  }

  .icon-container {
    @apply pointer-events-none
      m-0
      flex
      items-center
      justify-center;
    min-inline-size: theme("spacing.4");
    min-block-size: theme("spacing.4");
  }

  .text-container {
    @apply m-0
      w-0
      truncate
      leading-6
      opacity-0
      transition-opacity
      duration-150
      ease-in-out;
    transition-property: margin;
    transition-property: inline-size;
  }

  .text-container--visible {
    @apply w-auto flex-auto opacity-100;
  }

  .action-indicator {
    @apply w-4 mx-1;
  }
}

// Slotted Icon
::slotted(*:not([name="tooltip"])) {
  @apply flex;
}
:host([loading]) {
  ::slotted(:not([name="tooltip"])) {
    @apply hidden;
  }
}

:host([data-active]) button {
  @apply focus-inset;
}

// Scale
:host([scale="s"]) {
  button {
    @apply text-n2h px-2 py-1 font-normal;

    &.button--text-visible .icon-container {
      margin-inline-end: theme("spacing.2");
    }
  }
}
:host([scale="m"]) {
  button {
    @apply text-n1h px-4 py-3 font-normal;

    &.button--text-visible .icon-container {
      margin-inline-end: theme("spacing.3");
    }
  }
}
:host([scale="l"]) {
  button {
    @apply text-0h p-5 font-normal;

    &.button--text-visible .icon-container {
      margin-inline-end: theme("spacing.4");
    }
  }
}
// Compact
:host([scale="s"][compact]),
:host([scale="m"][compact]),
:host([scale="l"][compact]) {
  button {
    @apply px-0;
  }
}

// Alignment
:host([alignment="center"]),
:host([alignment="end"]) {
  button .text-container--visible {
    @apply flex-initial;
  }
}
:host([alignment="center"]) button {
  @apply justify-center;
}
:host([alignment="end"]) button {
  @apply justify-end;
}

:host(:is([active], [active][loading])) {
  button {
    &,
    &:hover,
    &:focus {
      color: var(--calcite-action-text-color, var(--calcite-color-text-1));

      background-color: var(--calcite-action-background-color, var(--calcite-color-foreground-3));
    }
  }
}

:host([active]) button:active {
  background-color: var(--calcite-action-background-color, var(--calcite-color-foreground-1));
}

:host([appearance="transparent"]) button,
:host([appearance="transparent"][disabled]) button {
  background-color: transparent;
}

:host([appearance="transparent"][active]) button,
:host([appearance="transparent"]) button:hover,
:host([appearance="transparent"]) button:focus {
  background-color: var(--calcite-action-background-color, var(--calcite-color-transparent-hover));
}

:host([appearance="transparent"]) button:active {
  background-color: var(--calcite-action-background-color, var(--calcite-color-transparent-press));
}

:host([loading][appearance="solid"]) button,
:host([loading][appearance="solid"]) button:hover,
:host([loading][appearance="solid"]) button:focus {
  background-color: var(--calcite-action-background-color, var(--calcite-color-foreground-1));
  .text-container {
    @apply opacity-disabled;
  }
}

:host([loading]) calcite-loader[inline] {
  color: var(--calcite-color-text-3);
  margin-inline-end: theme("spacing.0");
}

:host([disabled]),
:host([disabled]),
:host([disabled]) {
  button {
    &,
    &:hover,
    &:focus {
      @apply opacity-disabled cursor-default;
      background-color: var(--calcite-action-background-color, var(--calcite-color-foreground-1));
    }
  }
}

:host([disabled][active]) button,
:host([disabled][active]) button:hover,
:host([disabled][active]) button:focus {
  button {
    &,
    &:hover,
    &:focus {
      @apply opacity-disabled;
      background-color: var(--calcite-action-background-color, var(--calcite-color-foreground-3));
    }
  }
}

:host([appearance="transparent"]) button {
  @apply transition-shadow
    duration-150
    ease-in-out;
}

.indicator-text {
  @apply sr-only;
}

calcite-loader {
  //TODO: sub-component tokens
}

calcite-icon {
  //TODO: sub-component tokens
}
