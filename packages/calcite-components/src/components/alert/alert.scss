/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-alert-width: Specifies the width of the component.
 * @prop --calcite-alert-background-color: Specifies the background color of the component.
 * @prop --calcite-alert-border-color: Specifies the border color of the component.
 * @prop --calcite-alert-corner-radius: Specifies the corner radius of the component.
 * @prop --calcite-alert-shadow: Specifies the shadow of the component.
 * @prop --calcite-alert-text-color: Specifies the text color of the component.
 * @prop --calcite-alert-close-icon-color: Specifies the icon color of the component's `closable` element.
 * @prop --calcite-alert-close-background-color: Specifies the background color of the component's `closable` element.
 * @prop --calcite-alert-close-background-color-hover: Specifies the hover background color of the component's `closable` element when hovered.
 * @prop --calcite-alert-close-background-color-active: Specifies the active background color of the component's `closable` element when active.
 * @prop --calcite-alert-close-background-color-focus: Specifies the focus background color of the component's `closable` element when focused.
 * @prop --calcite-alert-close-focus-outline-color Specifies the focus outline color of the component's `closable` element.
 */

:host {
  --calcite-alert-edge-distance: theme("spacing.8");

  --calcite-alert-background-color: var(--calcite-color-foreground-1);
  --calcite-alert-border-color: var(--calcite-color-border-3);
  --calcite-alert-corner-radius: var(--calcite-border-radius);
  --calcite-alert-icon-color: var(--calcite-border-radius);
  --calcite-alert-shadow: var(--calcite-shadow-md);
  --calcite-alert-title-text-color: var(--calcite-color-text-1);
  --calcite-alert-message-text-color: var(--calcite-color-text-2);
  --calcite-alert-link-text-color: var(--calcite-color-text-link);
  --calcite-alert-close-icon-color: var(--calcite-color-text-3);
  --calcite-alert-close-icon-color-hover: var(--calcite-color-text-1);
  --calcite-alert-close-icon-color-active: var(--calcite-color-text-1);
  --calcite-alert-close-icon-color-focus: var(--calcite-color-text-1);
  --calcite-alert-close-background-color: var(--calcite-color-transparent);
  --calcite-alert-close-background-color-hover: var(--calcite-color-foreground-2);
  --calcite-alert-close-background-color-active: var(--calcite-color-foreground-3);
  --calcite-alert-close-background-color-focus: var(--calcite-color-foreground-2);
  --calcite-alert-queue-count-background-color: var(--calcite-color-foreground-1);
  --calcite-alert-queue-count-text-color: var(--calcite-color-text-2);
  --calcite-alert-dismiss-progress-background-color: var(
    --calcite-alert-dismiss-progress-background,
    var(--calcite-color-transparent-tint)
  );

  @apply block;
}

.container {
  @apply box-border
  fixed
  flex
  items-center
  justify-center
  min-w-min
  mx-auto
  my-0
  opacity-0
  pointer-events-none
  text-start
  w-full
  z-toast;

  border-radius: var(--calcite-alert-corner-radius);
  border-block-start: 0 solid transparent;
  border-inline: 1px solid var(--calcite-alert-border-color);
  border-block-start-color: var(--calcite-alert-icon-color);
  border-block-end: 1px solid var(--calcite-alert-border-color);
  inline-size: var(--calcite-alert-width);
  max-inline-size: calc(100% - (var(--calcite-alert-edge-distance) * 2));
  transition:
    var(--calcite-internal-animation-timing-slow) $easing-function,
    opacity var(--calcite-internal-animation-timing-slow) $easing-function,
    all var(--calcite-animation-timing) ease-in-out;

  &--bottom,
  &--top {
    inset-inline-end: 0;
    inset-inline-start: 0;
  }
  &[class*="bottom"] {
    transform: translate3d(0, var(--calcite-alert-edge-distance), 0);
    inset-block-end: var(--calcite-alert-edge-distance);
  }
  &[class*="top"] {
    transform: translate3d(0, calc(-1 * var(--calcite-alert-edge-distance)), 0);
    inset-block-start: var(--calcite-alert-edge-distance);
  }
  &[class*="start"] {
    inset-inline-start: var(--calcite-alert-edge-distance);
    inset-inline-end: auto;
  }
  &[class*="end"] {
    inset-inline-end: var(--calcite-alert-edge-distance);
    inset-inline-start: auto;
  }
}

.icon {
  @apply flex flex-col items-center justify-center p-0;
  margin-block: auto;
  margin-inline-end: auto;
  padding-inline-start: var(--calcite-alert-spacing-token-large);
  color: var(--calcite-alert-icon-color);
}

.close {
  @apply border-none cursor-pointer flex items-center justify-end outline-none self-stretch;
  -webkit-appearance: none;
  padding: var(--calcite-alert-spacing-token-large);

  background-color: var(--calcite-alert-close-background-color);
  color: var(--calcite-alert-close-icon-color);

  @apply focus-base;
  &:focus {
    @apply focus-inset;
  }

  &:hover {
    background-color: var(--calcite-alert-close-background-color-hover);
    color: var(--calcite-alert-close-icon-color-hover);
  }
  &:focus {
    background-color: var(--calcite-alert-close-background-color-focus);
    color: var(--calcite-alert-close-icon-color-focus);
  }
  &:active {
    background-color: var(--calcite-alert-close-background-color-active);
    color: var(--calcite-alert-close-icon-color-active);
  }
}

.queue-count {
  @apply cursor-default
  flex
  font-medium
  invisible
  items-center
  justify-around
  min-w-min
  opacity-0
  overflow-hidden
  self-stretch
  text-center
  transition-default;
  background-color: var(--calcite-alert-queue-count-background-color);
  border-inline: 0 solid transparent;
  border-start-end-radius: 0;
  color: var(--calcite-alert-queue-count-text-color);

  &--active {
    @apply visible opacity-100;
  }
}

.dismiss-progress {
  @apply absolute
  block
  w-full
  overflow-hidden;
  inset-inline: 0;
  inset-block-start: -2px;
  block-size: 2px;
  border-radius: var(--calcite-alert-corner-radius) var(--calcite-alert-corner-radius) 0 0;

  &:after {
    @apply absolute
    top-0
    block;
    block-size: 2px;
    content: "";
    background-color: var(--calcite-alert-dismiss-progress-background-color);
    inset-inline-end: 0;
  }
}

.actions-end {
  @apply flex self-stretch;
}

.text-container {
  @apply box-border flex flex-auto min-w-0 flex-col break-words;
  padding-block: var(--calcite-alert-spacing-token-small);
  padding-inline: var(--calcite-alert-spacing-token-large) var(--calcite-alert-spacing-token-small);
}

.footer {
  @apply flex justify-end pt-px relative self-stretch w-auto;
  block-size: inherit;
}

// scale variables
:host([scale="s"]) {
  --calcite-alert-width: 40em;
  --calcite-alert-spacing-token-small: theme("spacing.2");
  --calcite-alert-spacing-token-large: theme("spacing.3");
  --calcite-alert-footer-height: theme("height.8");
  --calcite-alert-footer-divider-gap: theme("spacing[0.5]");

  @include slotted("title", "*") {
    @apply text-n1-wrap;
  }
  @include slotted("message", "*") {
    @apply text-n2-wrap;
  }
  @include slotted("link", "*") {
    @apply text-n2-wrap;
  }
  .queue-count {
    @apply mx-2;
  }
  .container {
    --calcite-alert-min-height: 3.5rem;
  }
}

:host([scale="m"]) {
  --calcite-alert-width: 50em;
  --calcite-alert-spacing-token-small: theme("spacing.3");
  --calcite-alert-spacing-token-large: theme("spacing.4");
  --calcite-alert-footer-height: theme("height.12");
  --calcite-alert-footer-divider-gap: theme("spacing.1");

  @include slotted("title", "*") {
    @apply text-0-wrap;
  }
  @include slotted("message", "*") {
    @apply text-n1-wrap;
  }
  @include slotted("link", "*") {
    @apply text-n1-wrap;
  }
  .queue-count {
    @apply mx-3;
  }
  .container {
    --calcite-alert-min-height: 4.1875rem;
  }
}

:host([scale="l"]) {
  --calcite-alert-width: 60em;
  --calcite-alert-spacing-token-small: theme("spacing.4");
  --calcite-alert-spacing-token-large: theme("spacing.5");
  --calcite-alert-footer-height: theme("height.16");
  --calcite-alert-footer-divider-gap: theme("spacing.2");

  @include slotted("title", "*") {
    @apply text-1-wrap mb-1;
  }
  @include slotted("message", "*") {
    @apply text-0-wrap;
  }
  @include slotted("link", "*") {
    @apply text-0-wrap;
  }
  .queue-count {
    @apply mx-4;
  }
  .container {
    --calcite-alert-min-height: 5.625rem;
  }
}

:host([open]) {
  .container:not(.container--queued) {
    @apply border-t-2 opacity-100;
    pointer-events: initial;
    &[class*="bottom"] {
      transform: translate3d(0, calc(-1 * var(--calcite-alert-edge-distance)), inherit);
    }
    &[class*="top"] {
      transform: translate3d(0, var(--calcite-alert-edge-distance), inherit);
    }
  }
}

:host([auto-close]) > .queue-count {
  border-inline-end: 0 solid transparent;
}

@include slotted("title", "*") {
  color: var(--calcite-alert-title-text-color);

  @apply font-medium
    text-0-wrap;
}

@include slotted("message", "*") {
  color: var(--calcite-alert-message-text-color);

  @apply font-normal
    inline
    m-0
    text-n1-wrap;
  margin-inline-end: theme("margin.2");
}

@include slotted("link", "*") {
  color: var(--calcite-alert-link-text-color);

  @apply inline-flex;
}

$alertKinds:
  "brand" var(--calcite-color-brand),
  "info" var(--calcite-color-status-info),
  "danger" var(--calcite-color-status-danger),
  "success" var(--calcite-color-status-success),
  "warning" var(--calcite-color-status-warning);

@each $alertKind in $alertKinds {
  $name: nth($alertKind, 1);
  $kind: nth($alertKind, 2);

  :host([kind="#{$name}"]) {
    --calcite-alert-icon-color: #{$kind};
  }
}

$alertDurations:
  "fast" 6000ms,
  "medium" 10000ms,
  "slow" 14000ms;

@each $alertDuration in $alertDurations {
  $name: nth($alertDuration, 1);
  $duration: nth($alertDuration, 2);

  :host([auto-close-duration="#{$name}"]) .dismiss-progress:after {
    animation: dismissProgress $duration ease-out;
  }
  :host(:hover[auto-close-duration="#{$name}"]) .dismiss-progress:after {
    animation-play-state: paused;
  }
}

@keyframes dismissProgress {
  0% {
    @apply w-0 opacity-75;
  }
  100% {
    @apply w-full opacity-100;
  }
}

/**
 * Conditional styles for when Alert is slotted in Shell
 */
.container--slotted-in-shell {
  @apply absolute;
}

@include base-component();
@include calciteHydratedHidden();
