@import "../../assets/styles/animation";
@import "../../assets/styles/header";

/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-block-color-status: Specifies the color of the status icon.
 * @prop --calcite-block-handle-background-color-active: Specifies the background color of the block handle when active.
 * @prop --calcite-block-handle-background-color-hover: Specifies the background color of the block handle when hovered.
 * @prop --calcite-block-handle-color-hover: Specifies the color of the block handle when hovered.
 * @prop --calcite-block-handle-color: Specifies the color of the block handle.
 * @prop --calcite-block-heading-text-color-active: Specifies the text color of the block heading when active.
 * @prop --calcite-block-heading-text-color: Specifies the text color of the block heading.
 * @prop --calcite-block-padding: [Deprecated] Use --calcite-block-space-y and --calcite-block-space-x. Specifies the padding of the block `default` slot.
 * @prop --calcite-block-space-x: Specifies the horizontal padding of the component
 * @prop --calcite-block-space-y: Specifies the vertical padding of the component.
 * @prop --calcite-block-text-color-hover: Specifies the text color of the block when hovered.
 * @prop --calcite-block-text-color: Specifies the text color of the block.
 * @prop --calcite-block-toggle-background-color-hover: Specifies the background color of the block toggle when hovered.
 * @prop --calcite-block-toggle-background-color: Specifies the background color of the block toggle.
 */

:host {
  @extend %component-host;
  @apply transition-margin ease-cubic flex flex-shrink-0 flex-grow-0
    flex-col border-0 border-b border-solid p-0 duration-150;

  border-color: var(--calcite-color-border-3);
  flex-basis: auto;
}

@include disabled();

.header {
  @apply justify-start;
}

.header,
.toggle {
  grid-area: header;
}

.header-container {
  @apply grid items-stretch;
  grid-template: auto / auto 1fr auto auto;
  grid-template-areas: "handle header control menu actions-end";
  grid-column: header-start / actions-end;
  grid-row: 1 / 2;
}

.content-start,
.icon,
.icon--start,
.icon--end {
  margin-inline-end: var(--calcite-spacing-md);
}

.icon {
  calcite-loader {
    margin-inline-end: var(--calcite-spacing-xxxs);
  }
}

.icon--start,
.icon--end {
  color: var(--calcite-block-text-color, var(--calcite-color-text-3));
}

.actions-end {
  grid-area: actions-end;
}

.toggle {
  @apply font-sans
    focus-base
    m-0
    flex
    cursor-pointer
    flex-nowrap
    items-center
    justify-between
    border-none
    p-0;

  text-align: initial;
  background-color: var(--calcite-block-toggle-background-color, transparent);

  &:hover {
    background-color: var(--calcite-block-toggle-background-color-hover, var(--calcite-color-foreground-2));

    .toggle-icon {
      color: var(--calcite-block-text-color-hover, var(--calcite-color-text-3));
    }
  }
  &:focus {
    @apply focus-inset;
  }
}

calcite-loader[inline] {
  grid-area: control;
  @apply self-center;
}

calcite-handle {
  grid-area: handle;
}

.title {
  @apply m-0;
}

.header .title .heading {
  @apply text-n1
    word-break
    transition-color
    p-0
    font-medium
    leading-tight
    duration-150
    ease-in-out;

  color: var(--calcite-block-heading-text-color, var(--calcite-color-text-2));
}

.description {
  @apply text-n2-wrap
    word-break
    mt-0.5
    p-0;

  color: var(--calcite-block-text-color, var(--calcite-color-text-3));
}

.icon {
  @apply flex;
}

.status-icon.valid {
  color: var(--calcite-block-color-status, theme("colors.success"));
}

.status-icon.invalid {
  color: var(--calcite-block-color-status, theme("colors.danger"));
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.icon-end-container {
  @apply flex items-center;

  margin-inline-start: auto;
}

.toggle-icon {
  @apply transition-color
  self-center
  justify-self-end
  duration-150
  ease-in-out;

  color: var(--calcite-block-text-color, var(--calcite-color-text-3));
  margin-inline-end: var(--calcite-spacing-md);
}

.container {
  @apply flex flex-col h-full relative;
}

.content {
  @apply animate-in flex-1 relative min-h-0;
  padding-block: var(--calcite-block-space-y, var(--calcite-block-padding, var(--calcite-spacing-sm)));
  padding-inline: var(--calcite-block-space-x, var(--calcite-block-padding, var(--calcite-spacing-md)));
}

.content-start {
  @apply flex items-center;
  color: var(--calcite-block-text-color, var(--calcite-color-text-3));
}

.control-container {
  @apply m-0 flex;
  grid-area: control;
}

calcite-action-menu {
  grid-area: menu;
}

.actions-end {
  @apply flex items-stretch;
}

:host([open]) {
  @apply my-2;

  .header .title .heading {
    color: var(--calcite-block-heading-text-color-active, var(--calcite-color-text-1));
  }
}

:host([heading]),
:host([description]) {
  .header {
    padding: var(--calcite-spacing-md);
  }
}

@include base-component();
