/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-button-background-color: Specifies the background color of the component.
 * @prop --calcite-button-text-color: Specifies the text color of the component.
 * @prop --calcite-button-icon-color: Specifies the color of the component's start position icon.
 * @prop --calcite-button-shadow: Specifies the box shadow of the component.
 * @prop --calcite-button-border-color: Specifies border colors of the component.
 * @prop --calcite-button-border-color-hover: Specifies border colors of the component when in hover state.
 * @prop --calcite-button-border-color-focus: Specifies border colors of the component when in focus state.
 * @prop --calcite-button-border-color-active: Specifies border colors of the component when in active state.
 *
 * @prop --calcite-button-loader-color-one-third: defines the color of the loader when 1/3 complete.
 * @prop --calcite-button-loader-color-start: defines the color of the loader at start and end.
 * @prop --calcite-button-loader-color-two-thirds: defines the color of the loader when 2/3 complete.
 *
 */

:host {
  --calcite-button-background-color: var(--calcite-color-background);
  --calcite-button-shadow: var(--calcite-shadow-none);
  --calcite-button-border-color: var(--calcite-color-transparent);
  --calcite-button-corner-radius: var(--calcite-corner-radius-sharp);
  --calcite-button-icon-color: var(--calcite-color-text-inverse);

  @apply inline-block w-auto align-middle;
  border-radius: var(--calcite-button-corner-radius);
}

/* fab variants */
:host([round]) {
  --calcite-button-corner-radius: 50px;
}

.content {
  margin-inline: var(--calcite-internal-button-content-margin);
}

.icon-start-empty {
  .content {
    margin-inline-start: unset;
  }
}
.icon-end-empty {
  .content {
    margin-inline-end: unset;
  }
}

:host([scale="m"]) {
  button,
  a {
    --calcite-internal-button-content-margin: theme("margin.3");
  }
}
:host([scale="l"]) {
  button,
  a {
    --calcite-internal-button-content-margin: theme("margin.4");
  }
}

/* button width */
:host([width="auto"]) {
  @apply w-auto;
}

:host([width="half"]) {
  @apply w-2/4;
}

:host([width="full"]) {
  @apply w-full;
}

/* alignment */
:host([alignment="center"]:not([width="auto"])) {
  a,
  button {
    @apply justify-center;
  }
}
:host([alignment="start"]:not([width="auto"])) {
  a,
  button {
    @apply justify-start;
  }
}
:host([alignment="end"]:not([width="auto"])) {
  a,
  button {
    @apply justify-end;
  }
}
:host([alignment*="space-between"]:not([width="auto"])) {
  a,
  button {
    @apply justify-between;
  }
}
:host([alignment="icon-start-space-between"]:not([width="auto"])) {
  .icon--start {
    margin-inline-end: auto;
  }
  a,
  button {
    text-align: unset;
  }
}
:host([alignment="icon-end-space-between"]:not([width="auto"])) {
  .icon--end {
    margin-inline-start: auto;
  }
  a,
  button {
    text-align: unset;
  }
}

/* only two icons */
:host([alignment="center"]) {
  a:not(.content--slotted),
  button:not(.content--slotted) {
    .icon--start + .icon--end {
      margin-inline-start: var(--calcite-internal-button-content-margin);
    }
  }
}

.icon {
  @apply relative
    m-0
    inline-flex
    font-normal;
  line-height: inherit;
}

@include disabled();

@keyframes loader-in {
  0% {
    inline-size: 0;
    opacity: 0;
    transform: scale(0.5);
  }
  100% {
    inline-size: 1em;
    opacity: 1;
    transform: scale(1);
  }
}
@keyframes loader-out {
  0% {
    inline-size: 1em;
    opacity: 1;
    transform: scale(1);
  }
  100% {
    inline-size: 0;
    opacity: 0;
    transform: scale(0.5);
  }
}

.calcite-button--loader {
  @apply flex;
  calcite-loader {
    --calcite-internal-button-animation-timing: var(--calcite-internal-animation-timing-slow);

    @apply m-0;
    transition:
      inline-size var(--calcite-internal-button-animation-timing) ease-in-out,
      opacity var(--calcite-internal-button-animation-timing) ease-in-out,
      transform var(--calcite-internal-button-animation-timing) ease-in-out;
    &.loading-in {
      animation-name: loader-in;
      animation-duration: var(--calcite-internal-button-animation-timing);
    }
    &.loading-out {
      animation-name: loader-out;
      animation-duration: var(--calcite-internal-button-animation-timing);
    }
  }
}

:host([loading]) {
  /* center loading spinner when button has text */
  button.content--slotted,
  a.content--slotted {
    .calcite-button--loader calcite-loader {
      margin-inline-end: var(--calcite-internal-button-content-margin);
    }
  }
  /* hide icons when loading with no text */
  button:not(.content--slotted),
  a:not(.content--slotted) {
    .icon--start,
    .icon--end {
      @apply hidden;
    }
  }
}

/* button base */
button,
a {
  --calcite-internal-button-content-margin: theme("margin.2");
  --calcite-internal-button-padding-inline: 7px;
  --calcite-internal-button-padding-block: 3px;

  border-radius: var(--calcite-button-corner-radius);
  padding-block: var(--calcite-internal-button-padding-block);
  padding-inline: var(--calcite-internal-button-padding-inline);
  color: var(--calcite-button-text-color, var(--calcite-color-text-inverse));
  background-color: var(--calcite-button-background-color, var(--calcite-color-background));
  border: var(--calcite-border-width-sm) solid var(--calcite-button-border-color);
  box-shadow: var(--calcite-button-shadow, var(--calcite-shadow-none));

  @apply appearance-none
    box-border
    cursor-pointer
    flex
    /* focus styles */
    focus-base
    font-inherit
    font-normal
    items-center
    justify-center
    no-underline
    relative
    select-none
    text-center;
  /* include transition from focus */
  block-size: var(--calcite-container-size-content-fluid);
  inline-size: var(--calcite-container-size-content-fluid);
  transition:
    color var(--calcite-animation-timing) ease-in-out,
    background-color var(--calcite-animation-timing) ease-in-out,
    box-shadow var(--calcite-animation-timing) ease-in-out,
    outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;
  &:focus {
    @apply focus-outset;
  }
  &:hover {
    @apply no-underline;
  }
  & span {
    @apply truncate;
  }
}

.icon--start,
.icon--end {
  color: var(--calcite-button-icon-color);
}

/* button styles */
/* solid */
:host([kind="brand"]) {
  --calcite-button-text-color: var(--calcite-color-text-inverse);
  --calcite-button-background-color: var(--calcite-color-brand);
  --calcite-button-icon-color: var(--calcite-color-text-inverse);
}
:host([kind="brand"]:hover),
:host([kind="brand"]:focus) {
  --calcite-button-background-color: var(--calcite-color-brand-hover);
  --calcite-button-text-color: var(--calcite-color-text-inverse);
}
:host([kind="brand"]:active) {
  --calcite-button-background-color: var(--calcite-color-brand-press);
  --calcite-button-text-color: var(--calcite-color-text-inverse);
}

:host([kind="danger"]) {
  --calcite-button-text-color: var(--calcite-color-text-inverse);
  --calcite-button-background-color: var(--calcite-color-status-danger);
  --calcite-button-icon-color: var(--calcite-color-text-inverse);
}
:host([kind="danger"]:hover),
:host([kind="danger"]:focus) {
  --calcite-button-background-color: var(--calcite-color-status-danger-hover);
  --calcite-button-text-color: var(--calcite-color-text-inverse);
}
:host([kind="danger"]:active) {
  --calcite-button-background-color: var(--calcite-color-status-danger-press);
  --calcite-button-text-color: var(--calcite-color-text-inverse);
}

:host([kind="neutral"]) {
  --calcite-button-text-color: var(--calcite-color-text-1);
  --calcite-button-background-color: var(--calcite-color-foreground-3);
  --calcite-button-icon-color: var(--calcite-color-text-1);
}
:host([kind="neutral"]:hover),
:host([kind="neutral"]:focus) {
  --calcite-button-text-color: var(--calcite-color-text-1);
  --calcite-button-background-color: var(--calcite-color-foreground-2);
}
:host([kind="neutral"]:active) {
  --calcite-button-background-color: var(--calcite-color-foreground-1);
  --calcite-button-text-color: var(--calcite-color-text-1);
}

:host([kind="inverse"]) {
  --calcite-button-text-color: var(--calcite-color-text-inverse);
  --calcite-button-background-color: var(--calcite-color-inverse);
  --calcite-button-icon-color: var(--calcite-color-text-inverse);
}
:host([kind="inverse"]:hover),
:host([kind="inverse"]:focus) {
  --calcite-button-text-color: var(--calcite-color-text-inverse);
  --calcite-button-background-color: var(--calcite-color-inverse-hover);
}
:host([kind="inverse"]:active) {
  --calcite-button-background-color: var(--calcite-color-inverse-press);
  --calcite-button-text-color: var(--calcite-color-text-inverse);
}

/* outline background */
:host([appearance="outline"]) {
  --calcite-button-background-color: var(--calcite-color-transparent);
}
:host([appearance="outline"]:hover),
:host([appearance="outline"]:focus) {
  --calcite-button-background-color: var(--calcite-color-transparent);
}
/* outline-fill background */
:host([appearance="outline-fill"]) {
  --calcite-button-background-color: var(--calcite-color-foreground-1);
}
:host([appearance="outline-fill"]:hover),
:host([appearance="outline-fill"]:focus) {
  --calcite-button-background-color: var(--calcite-color-foreground-1);
}
:host([appearance="outline-fill"]:active) {
  --calcite-button-background-color: var(--calcite-color-transparent);
}

/* outline and outline-fill text, border, icon, and box-shadow colors */
:host([appearance="outline"][kind="brand"]),
:host([appearance="outline-fill"][kind="brand"]) {
  --calcite-button-text-color: var(--calcite-color-brand);
  --calcite-button-border-color: var(--calcite-color-brand);
  --calcite-button-icon-color: var(--calcite-color-brand);
}
:host([appearance="outline"][kind="brand"]:hover),
:host([appearance="outline-fill"][kind="brand"]:hover),
:host([appearance="outline"][kind="brand"]:focus),
:host([appearance="outline-fill"][kind="brand"]:focus) {
  --calcite-button-border-color: var(--calcite-color-brand-hover);
  --calcite-button-icon-color: var(--calcite-color-brand-hover);
}
:host([appearance="outline"][kind="brand"]:hover),
:host([appearance="outline-fill"][kind="brand"]:hover) {
  --calcite-button-text-color: var(--calcite-color-brand-hover);
  --calcite-button-shadow: inset 0 0 0 1px var(--calcite-color-brand-hover);
}

:host([appearance="outline"][kind="brand"]:focus),
:host([appearance="outline-fill"][kind="brand"]:focus) {
  --calcite-button-text-color: var(--calcite-color-brand);
  --calcite-button-shadow: inset 0 0 0 2px var(--calcite-color-brand);
}
:host([appearance="outline"][kind="brand"]:active),
:host([appearance="outline-fill"][kind="brand"]:active) {
  --calcite-button-text-color: var(--calcite-color-brand-press);
  --calcite-button-border-color: var(--calcite-color-brand-press);
  --calcite-button-icon-color: var(--calcite-color-brand-press);
  --calcite-button-shadow: inset 0 0 0 2px var(--calcite-color-brand-press);
}

:host([appearance="outline"][kind="danger"]),
:host([appearance="outline-fill"][kind="danger"]) {
  --calcite-button-text-color: var(--calcite-color-status-danger);
  --calcite-button-border-color: var(--calcite-color-status-danger);
  --calcite-button-icon-color: var(--calcite-color-status-danger);
}
:host([appearance="outline"][kind="danger"]:hover),
:host([appearance="outline-fill"][kind="danger"]:hover),
:host([appearance="outline"][kind="danger"]:focus),
:host([appearance="outline-fill"][kind="danger"]:focus) {
  --calcite-button-text-color: var(--calcite-color-status-danger-hover);
  --calcite-button-border-color: var(--calcite-color-status-danger-hover);
  --calcite-button-icon-color: var(--calcite-color-status-danger-hover);
}
:host([appearance="outline"][kind="danger"]:hover),
:host([appearance="outline-fill"][kind="danger"]:hover) {
  --calcite-button-shadow: inset 0 0 0 1px var(--calcite-color-status-danger-hover);
}
:host([appearance="outline"][kind="danger"]:focus),
:host([appearance="outline-fill"][kind="danger"]:focus) {
  --calcite-button-shadow: inset 0 0 0 2px var(--calcite-color-status-danger);
}
:host([appearance="outline"][kind="danger"]:active),
:host([appearance="outline-fill"][kind="danger"]:active) {
  --calcite-button-text-color: var(--calcite-color-status-danger-press);
  --calcite-button-border-color: var(--calcite-color-status-danger-press);
  --calcite-button-icon-color: var(--calcite-color-status-danger-press);
  --calcite-button-shadow: inset 0 0 0 2px var(--calcite-color-status-danger-press);
}

:host([appearance="outline"][kind="neutral"]),
:host([appearance="outline-fill"][kind="neutral"]) {
  --calcite-button-text-color: var(--calcite-color-text-1);
  --calcite-button-border-color: var(--calcite-color-border-1);
  --calcite-button-icon-color: var(--calcite-color-text-1);
}
:host([appearance="outline"][kind="neutral"]:hover),
:host([appearance="outline-fill"][kind="neutral"]:hover),
:host([appearance="outline"][kind="neutral"]:focus),
:host([appearance="outline-fill"][kind="neutral"]:focus) {
  --calcite-button-text-color: var(--calcite-color-text-1);
  --calcite-button-border-color: var(--calcite-color-border-1);
  --calcite-button-icon-color: var(--calcite-color-text-1);
}
:host([appearance="outline"][kind="neutral"]:hover),
:host([appearance="outline-fill"][kind="neutral"]:hover) {
  --calcite-button-shadow: inset 0 0 0 1px var(--calcite-color-foreground-3);
}
:host([appearance="outline"][kind="neutral"]:focus),
:host([appearance="outline-fill"][kind="neutral"]:focus) {
  --calcite-button-shadow: inset 0 0 0 2px var(--calcite-color-foreground-3);
}
:host([appearance="outline"][kind="neutral"]:active),
:host([appearance="outline-fill"][kind="neutral"]:active) {
  --calcite-button-text-color: var(--calcite-color-text-1);
  --calcite-button-border-color: var(--calcite-color-border-1);
  --calcite-button-icon-color: var(--calcite-color-text-1);
  --calcite-button-shadow: inset 0 0 0 2px var(--calcite-color-foreground-3);
}

:host([appearance="outline"][kind="inverse"]),
:host([appearance="outline-fill"][kind="inverse"]) {
  /* text */
  --calcite-button-text-color: var(--calcite-color-text-1);

  /* border */
  --calcite-button-border-color: var(--calcite-color-inverse);

  /* start icon */
  --calcite-button-icon-color: var(--calcite-color-text-1);
  /* end icon */
}
:host([appearance="outline"][kind="inverse"]:hover),
:host([appearance="outline-fill"][kind="inverse"]:hover),
:host([appearance="outline"][kind="inverse"]:focus),
:host([appearance="outline-fill"][kind="inverse"]:focus) {
  --calcite-button-text-color: var(--calcite-color-text-1);
  --calcite-button-border-color: var(--calcite-color-inverse-hover);
  --calcite-button-icon-color: var(--calcite-color-inverse-hover);
}
:host([appearance="outline"][kind="inverse"]:hover),
:host([appearance="outline-fill"][kind="inverse"]:hover) {
  --calcite-button-shadow: inset 0 0 0 1px var(--calcite-color-inverse-hover);
}
:host([appearance="outline"][kind="inverse"]:focus),
:host([appearance="outline-fill"][kind="inverse"]:focus) {
  --calcite-button-shadow: inset 0 0 0 2px var(--calcite-color-inverse-hover);
}
:host([appearance="outline"][kind="inverse"]:active),
:host([appearance="outline-fill"][kind="inverse"]:active) {
  --calcite-button-text-color: var(--calcite-color-text-1);
  --calcite-button-border-color: var(--calcite-color-inverse-press);
  --calcite-button-icon-color: var(--calcite-color-inverse-press);
  --calcite-button-shadow: inset 0 0 0 2px var(--calcite-color-inverse-press);
}

:host([appearance="outline-fill"][split-child="primary"]) button,
:host([appearance="outline"][split-child="primary"]) button {
  border-inline-end-width: 0;
  border-inline-start-width: theme("borderWidth.DEFAULT");
}

:host([appearance="outline-fill"][split-child="secondary"]) button,
:host([appearance="outline"][split-child="secondary"]) button {
  border-inline-start-width: 0;
  border-inline-end-width: theme("borderWidth.DEFAULT");
}

/* transparent */
:host([appearance="transparent"]:not(.enable-editing-button)) {
  --calcite-button-background-color: var(--calcite-color-transparent);
}
:host([appearance="transparent"]:not(.enable-editing-button):hover),
:host([appearance="transparent"]:not(.enable-editing-button):focus) {
  --calcite-button-background-color: var(--calcite-color-transparent-hover);
}
:host([appearance="transparent"]:not(.enable-editing-button):active) {
  --calcite-button-background-color: var(--calcite-color-transparent-press);
}

:host([appearance="transparent"][kind="brand"]) {
  /* text */
  --calcite-button-text-color: var(--calcite-color-brand);

  /* start icon */
  --calcite-button-icon-color: var(--calcite-color-brand);

  /* end icon */
}
:host([appearance="transparent"][kind="brand"]:hover),
:host([appearance="transparent"][kind="brand"]:focus) {
  --calcite-button-text-color: var(--calcite-color-brand-hover);
  --calcite-button-icon-color: var(--calcite-color-brand-hover);
}
:host([appearance="transparent"][kind="brand"]:active) {
  --calcite-button-text-color: var(--calcite-color-brand-press);
  --calcite-button-icon-color: var(--calcite-color-brand-press);
}

:host([appearance="transparent"][kind="danger"]) {
  --calcite-button-text-color: var(--calcite-color-status-danger);
  --calcite-button-icon-color: var(--calcite-color-status-danger);
}
:host([appearance="transparent"][kind="danger"]:hover),
:host([appearance="transparent"][kind="danger"]:focus) {
  --calcite-button-text-color: var(--calcite-color-status-danger-hover);
  --calcite-button-icon-color: var(--calcite-color-status-danger-hover);
}
:host([appearance="transparent"][kind="danger"]:active) {
  --calcite-button-text-color: var(--calcite-color-status-danger-press);
  --calcite-button-icon-color: var(--calcite-color-status-danger-press);
  --calcite-button-icon-color: var(--calcite-color-status-danger-press);
}

:host([appearance="transparent"][kind="neutral"]:not(.cancel-editing-button)) {
  --calcite-button-text-color: var(--calcite-color-text-1);
}

:host([appearance="transparent"][kind="neutral"].cancel-editing-button) {
  --calcite-button-text-color: var(--calcite-color-text-3);

  button {
    border-block-style: solid;
    border-block-width: var(--calcite-border-width-sm);
    border-block-color: var(--calcite-color-border-input);

    &:not(.content--slotted) {
      --calcite-internal-button-padding-block: 0;
    }
  }
}
:host([appearance="transparent"][kind="neutral"].cancel-editing-button:hover) {
  --calcite-button-text-color: var(--calcite-color-text-1);
  --calcite-button-text-color-hover: var(--calcite-color-text-1);
}

:host([appearance="transparent"][kind="neutral"].enable-editing-button) {
  --calcite-button-background-color: var(--calcite-color-transparent);
}

:host(.confirm-changes-button),
:host(.cancel-editing-button),
:host(.enable-editing-button) {
  button {
    &:focus {
      outline-offset: -2px; /* ensure focus outlines work in Safari */
    }
  }
}

:host([appearance="transparent"][kind="inverse"]) {
  --calcite-button-text-color: var(--calcite-color-text-inverse);
}

/* generate button scales (scenario: text exists) */
:host([scale="s"]) button.content--slotted,
:host([scale="s"]) a.content--slotted {
  @apply text-n2h;
}

/* accommodate for transparent buttons not having borders */
:host([scale="s"][appearance="transparent"]) button.content--slotted,
:host([scale="s"][appearance="transparent"]) a.content--slotted {
  --calcite-internal-button-padding-inline: theme("padding.2");
}

:host([scale="s"]) button,
:host([scale="s"]) a {
  --calcite-internal-button-padding-block: 3px;
}

:host([scale="m"]) button.content--slotted,
:host([scale="m"]) a.content--slotted {
  --calcite-internal-button-padding-inline: 11px;
  @apply text-n1h;
}

:host([scale="m"]) button,
:host([scale="m"]) a {
  --calcite-internal-button-padding-block: 7px;
}
/* accommodate for transparent buttons not having borders */
:host([scale="m"][appearance="transparent"]) button.content--slotted,
:host([scale="m"][appearance="transparent"]) a.content--slotted {
  --calcite-internal-button-padding-inline: theme("padding.3");
}

:host([scale="l"]) button.content--slotted,
:host([scale="l"]) a.content--slotted {
  --calcite-internal-button-padding-inline: 15px;
  @apply text-0h;
}

:host([scale="l"]) {
  .button-padding {
    --calcite-internal-button-padding-inline: theme("padding.4");
    --calcite-internal-button-padding-block: 11px;
  }
  /* shrink the padding if an icon is present to preserve the height */
  .button-padding--shrunk {
    --calcite-internal-button-padding-block: 9px;
  }
}

/* generate fab scales (scenario: 1 icon, ie., should be square) */
:host([scale="s"]) button:not(.content--slotted),
:host([scale="s"]) a:not(.content--slotted) {
  --calcite-internal-button-padding-inline: theme("padding[0.5]");
  --calcite-internal-button-padding-block: 3px;
  @apply text-0h w-6;
  min-block-size: theme("height.6");
}

:host([scale="m"]) button:not(.content--slotted),
:host([scale="m"]) a:not(.content--slotted) {
  --calcite-internal-button-padding-inline: theme("padding[0.5]");
  --calcite-internal-button-padding-block: 7px;
  @apply text-0h w-8;
  min-block-size: theme("height.8");
}
:host([scale="l"]) button:not(.content--slotted),
:host([scale="l"]) a:not(.content--slotted) {
  --calcite-internal-button-padding-inline: theme("padding[0.5]");
  --calcite-internal-button-padding-block: 9px;
  @apply text-0h w-11;
  min-block-size: theme("height.11");
}
/* accommodate for transparent buttons not having borders */
:host([scale="l"][appearance="transparent"]) button:not(.content--slotted),
:host([scale="l"][appearance="transparent"]) a:not(.content--slotted) {
  --calcite-internal-button-padding-block: theme("padding[2.5]");
}

/* generate fab scales (scenario: 2 icons, ie., should not be square) */
:host([scale="s"][icon-start][icon-end]) button:not(.content--slotted),
:host([scale="s"][icon-start][icon-end]) a:not(.content--slotted) {
  --calcite-internal-button-padding-inline: 23px;
  @apply text-0h h-6;
}
/* accommodate for transparent buttons not having borders */
:host([scale="s"][icon-start][icon-end][appearance="transparent"]) button:not(.content--slotted),
:host([scale="s"][icon-start][icon-end][appearance="transparent"]) a:not(.content--slotted) {
  --calcite-internal-button-padding-inline: theme("padding.6");
}
:host([scale="m"][icon-start][icon-end]) button:not(.content--slotted),
:host([scale="m"][icon-start][icon-end]) a:not(.content--slotted) {
  --calcite-internal-button-padding-inline: theme("padding.8");
  @apply text-0h h-8;
}
/* accommodate for transparent buttons not having borders */
:host([scale="m"][icon-start][icon-end][appearance="transparent"]) button:not(.content--slotted),
:host([scale="m"][icon-start][icon-end][appearance="transparent"]) a:not(.content--slotted) {
  --calcite-internal-button-padding-inline: 33px;
}
:host([scale="l"][icon-start][icon-end]) button:not(.content--slotted),
:host([scale="l"][icon-start][icon-end]) a:not(.content--slotted) {
  --calcite-internal-button-padding-inline: 43px;
  @apply text-0h h-11;
  /* add space between when only 2 icons */
  .icon--start + .icon--end {
    margin-inline-start: theme("margin.4");
  }
}
/* accommodate for transparent buttons not having borders */
:host([scale="l"][icon-start][icon-end][appearance="transparent"]) button:not(.content--slotted),
:host([scale="l"][icon-start][icon-end][appearance="transparent"]) a:not(.content--slotted) {
  --calcite-button-padding-x-internal: theme("padding.11");
}

calcite-loader {
  --calcite-loader-bar-color-one-third: var(--calcite-button-loader-bar-color-one-third);
  --calcite-loader-bar-color-start: var(--calcite-button-loader-bar-color-start);
  --calcite-loader-bar-color-two-thirds: var(--calcite-button-loader-bar-color-two-thirds);
}

@include base-component();
