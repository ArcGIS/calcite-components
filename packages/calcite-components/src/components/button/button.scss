/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-button-background-color: defines the component's background color.
 * @prop --calcite-button-border-color: defines the component's border color.
 * @prop --calcite-button-corner-radius: defines the component's corner radius.
 * @prop --calcite-button-corner-radius-start-start: defines the component's top-left corner radius. will fallback to --calcite-button-corner-radius.
 * @prop --calcite-button-corner-radius-start-end: defines the component's top-right corner radius. Will fallback to --calcite-button-corner-radius.
 * @prop --calcite-button-corner-radius-end-start: defines the component's bottom-left corner radius. Will fallback to --calcite-button-corner-radius.
 * @prop --calcite-button-corner-radius-end-end: defines the component's bottom-right corner radius. Will fallback to --calcite-button-corner-radius.
 * @prop --calcite-button-icon-color: defines the color of an icon in the component.
 * @prop --calcite-button-loader-color: defines the component's loader color.
 * @prop --calcite-button-shadow: defines the component's shadow.
 * @prop --calcite-button-text-color: defines the component's text color.
 */

:host {
  @apply inline-block w-auto align-middle;
  border-start-start-radius: var(
    --calcite-button-corner-radius-start-start,
    var(--calcite-button-corner-radius, var(--calcite-internal-button-corner-radius, var(--calcite-corner-radius)))
  );
  border-start-end-radius: var(
    --calcite-button-corner-radius-start-end,
    var(--calcite-button-corner-radius, var(--calcite-internal-button-corner-radius, var(--calcite-corner-radius)))
  );
  border-end-start-radius: var(
    --calcite-button-corner-radius-end-start,
    var(--calcite-button-corner-radius, var(--calcite-internal-button-corner-radius, var(--calcite-corner-radius)))
  );
  border-end-end-radius: var(
    --calcite-button-corner-radius-end-end,
    var(--calcite-button-corner-radius, var(--calcite-internal-button-corner-radius, var(--calcite-corner-radius)))
  );
}

// button base
button,
a {
  --calcite-internal-button-content-margin: theme("margin.2");
  --calcite-internal-button-padding-x: 7px;
  --calcite-internal-button-padding-y: 3px;

  @apply appearance-none
    border-none
    box-border
    cursor-pointer
    flex
    font-normal
    h-full
    items-center
    justify-center
    no-underline
    relative
    rounded-none
    select-none
    text-center
    w-full
    focus-base
    font-inherit;
  border-start-start-radius: var(
    --calcite-button-corner-radius-start-start,
    var(--calcite-button-corner-radius, var(--calcite-internal-button-corner-radius, var(--calcite-corner-radius)))
  );
  border-start-end-radius: var(
    --calcite-button-corner-radius-start-end,
    var(--calcite-button-corner-radius, var(--calcite-internal-button-corner-radius, var(--calcite-corner-radius)))
  );
  border-end-start-radius: var(
    --calcite-button-corner-radius-end-start,
    var(--calcite-button-corner-radius, var(--calcite-internal-button-corner-radius, var(--calcite-corner-radius)))
  );
  border-end-end-radius: var(
    --calcite-button-corner-radius-end-end,
    var(--calcite-button-corner-radius, var(--calcite-internal-button-corner-radius, var(--calcite-corner-radius)))
  );
  background-color: var(
    --calcite-button-background-color,
    var(--calcite-internal-button-background-color, var(--calcite-color-foreground-1))
  );
  color: var(--calcite-button-text-color, var(--calcite-internal-button-text-color, var(--calcite-color-text-1)));
  box-shadow: inset 0 0 0 var(--calcite-internal-button-border-width)
    var(--calcite-button-border-color, var(--calcite-internal-button-border-color));
  border-style: none;
  border-width: var(--calcite-border-width-sm);
  border-color: var(
    --calcite-button-border-color,
    var(--calcite-internal-button-border-color, var(--calcite-color-transparent))
  );
  // include transition from focus
  transition:
    color var(--calcite-animation-timing) ease-in-out,
    background-color var(--calcite-animation-timing) ease-in-out,
    box-shadow var(--calcite-animation-timing) ease-in-out,
    outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;
  padding-block: var(--calcite-internal-button-padding-y);
  padding-inline: var(--calcite-internal-button-padding-x);

  &:focus {
    @apply focus-outset;
  }

  &:hover {
    @apply no-underline;
  }

  span {
    @apply truncate;
  }
}

.content {
  margin-inline: var(--calcite-internal-button-content-margin);
}

.icon-start-empty {
  .content {
    margin-inline-start: unset;
  }
}
.icon-end-empty {
  .content {
    margin-inline-end: unset;
  }
}

.icon {
  @apply relative
    m-0
    inline-flex
    font-normal;
  line-height: inherit;
}

.calcite-button--loader {
  @apply flex;
  calcite-loader {
    @apply m-0;
  }
}

// fab variants
:host([round]) {
  --calcite-internal-button-corner-radius: 50px;
}

:host([scale="m"]) {
  button,
  a {
    --calcite-internal-button-content-margin: theme("margin.3");
  }
}
:host([scale="l"]) {
  button,
  a {
    --calcite-internal-button-content-margin: theme("margin.4");
  }
}

// button width
:host([width="auto"]) {
  @apply w-auto;
}

:host([width="half"]) {
  @apply w-2/4;
}

:host([width="full"]) {
  @apply w-full;
}

// alignment
:host([alignment="center"]:not([width="auto"])) {
  a,
  button {
    @apply justify-center;
  }
}
:host([alignment="start"]:not([width="auto"])) {
  a,
  button {
    @apply justify-start;
  }
}
:host([alignment="end"]:not([width="auto"])) {
  a,
  button {
    @apply justify-end;
  }
}
:host([alignment*="space-between"]:not([width="auto"])) {
  a,
  button {
    @apply justify-between;
  }
}
:host([alignment="icon-start-space-between"]:not([width="auto"])) {
  .icon--start {
    margin-inline-end: auto;
  }
  a,
  button {
    text-align: unset;
  }
}
:host([alignment="icon-end-space-between"]:not([width="auto"])) {
  .icon--end {
    margin-inline-start: auto;
  }
  a,
  button {
    text-align: unset;
  }
}

// only two icons
:host([alignment="center"]) {
  a:not(.content--slotted),
  button:not(.content--slotted) {
    .icon--start + .icon--end {
      margin-inline-start: var(--calcite-internal-button-content-margin);
    }
  }
}

:host([loading]) {
  // center loading spinner when button has text
  button.content--slotted,
  a.content--slotted {
    .calcite-button--loader calcite-loader {
      margin-inline-end: var(--calcite-internal-button-content-margin);
    }
  }
  // hide icons when loading with no text
  button:not(.content--slotted),
  a:not(.content--slotted) {
    .icon--start,
    .icon--end {
      @apply hidden;
    }
  }
}

:host([appearance]) {
  .button {
    border-style: solid;
  }
}

:host([kind="brand"]) {
  .button {
    --calcite-internal-button-text-color: var(--calcite-color-text-inverse);
    --calcite-internal-button-background-color: var(--calcite-color-brand);
    --calcite-internal-button-loader-color: var(--calcite-color-text-inverse);
    &:hover,
    &:focus {
      --calcite-internal-button-background-color: var(--calcite-color-brand-hover);
    }
    &:active {
      --calcite-internal-button-background-color: var(--calcite-color-brand-press);
    }
  }
}

:host([kind="danger"]) {
  .button {
    --calcite-internal-button-text-color: var(--calcite-color-text-inverse);
    --calcite-internal-button-background-color: var(--calcite-color-status-danger);
    --calcite-internal-button-loader-color: var(--calcite-color-text-inverse);

    &:hover,
    &:focus {
      --calcite-internal-button-background-color: var(--calcite-color-status-danger-hover);
    }
    &:active {
      --calcite-internal-button-background-color: var(--calcite-color-status-danger-press);
    }
  }
}
:host([kind="neutral"]) {
  .button {
    --calcite-internal-button-text-color: var(--calcite-color-text-1);
    --calcite-internal-button-background-color: var(--calcite-color-foreground-3);

    &:hover,
    &:focus {
      --calcite-internal-button-background-color: var(--calcite-color-foreground-2);
    }
    &:active {
      --calcite-internal-button-background-color-active: var(--calcite-color-foreground-1);
    }
  }

  calcite-loader {
    --calcite-internal-button-loader-color: var(--calcite-color-text-1);
  }
}
:host([kind="inverse"]) {
  .button {
    --calcite-internal-button-text-color: var(--calcite-color-text-inverse);
    --calcite-internal-button-background-color: var(--calcite-color-inverse);

    &:hover,
    &:focus {
      --calcite-internal-button-background-color: var(--calcite-color-inverse-hover);
    }
    &:active {
      --calcite-internal-button-background-color-active: var(--calcite-color-inverse-press);
    }
  }

  calcite-loader {
    --calcite-internal-button-loader-color: var(--calcite-color-text-inverse);
  }
}
// outline
:host([appearance="outline-fill"]) {
  .button {
    --calcite-internal-button-background-color: var(--calcite-color-foreground-1);
    border-style: solid;
  }
}
:host([appearance="outline-fill"][kind="brand"]) {
  .button {
    --calcite-internal-button-border-color: var(--calcite-color-brand);
    --calcite-internal-button-background-color: var(--calcite-color-foreground-1);
    --calcite-internal-button-text-color: var(--calcite-color-brand);
    &:hover {
      --calcite-internal-button-border-color: var(--calcite-color-brand-hover);
      --calcite-internal-button-text-color: var(--calcite-color-brand-hover);
    }
    &:focus {
      --calcite-internal-button-border-color: var(--calcite-color-brand);
      --calcite-internal-button-text-color: var(--calcite-color-brand);
    }
    &:active {
      --calcite-internal-button-border-color: var(--calcite-color-brand-press);
      --calcite-internal-button-text-color: var(--calcite-color-brand-press);
    }
    calcite-loader {
      --calcite-internal-button-loader-color: var(--calcite-color-brand);
    }
  }
}
:host([appearance="outline-fill"][kind="danger"]) {
  .button {
    --calcite-internal-button-border-color: var(--calcite-color-status-danger);
    --calcite-internal-button-background-color: var(--calcite-color-foreground-1);
    --calcite-internal-button-text-color: var(--calcite-color-status-danger);
    &:hover {
      --calcite-internal-button-border-color: var(--calcite-color-status-danger-hover);
      --calcite-internal-button-text-color: var(--calcite-color-status-danger-hover);
    }
    &:focus {
      --calcite-internal-button-border-color: var(--calcite-color-status-danger);
      --calcite-internal-button-text-color: var(--calcite-color-status-danger);
    }
    &:active {
      --calcite-internal-button-border-color: var(--calcite-color-status-danger-press);
      --calcite-internal-button-text-color: var(--calcite-color-status-danger-press);
    }
    calcite-loader {
      --calcite-internal-button-loader-color: var(--calcite-color-status-danger);
    }
  }
}
:host([appearance="outline-fill"][kind="neutral"]) {
  .button {
    --calcite-internal-button-border-color: var(--calcite-color-border-1);
    --calcite-internal-button-background-color: var(--calcite-color-foreground-1);
    --calcite-internal-button-text-color: var(--calcite-color-text-1);
    &:hover {
      --calcite-internal-button-border-color: var(--calcite-color-border-3);
    }
    &:focus,
    &:active {
      --calcite-internal-button-border-color: var(--calcite-color-border-3);
    }
    calcite-loader {
      --calcite-internal-button-loader-color: var(--calcite-color-text-1);
    }
  }
}
:host([appearance="outline-fill"][kind="inverse"]) {
  .button {
    --calcite-internal-button-text-color: var(--calcite-color-text-1);
    --calcite-internal-button-background-color: var(--calcite-color-foreground-1);
    --calcite-internal-button-border-color: var(--calcite-color-inverse);
    &:hover {
      --calcite-internal-button-border-color: var(--calcite-color-inverse-hover);
    }
    &:focus {
      --calcite-internal-button-border-color: var(--calcite-color-inverse);
    }
    &:active {
      --calcite-internal-button-border-color: var(--calcite-color-inverse-press);
    }
    calcite-loader {
      --calcite-internal-button-loader-color: var(--calcite-color-text-1);
    }
  }
}

:host([appearance="outline"]) {
  .button {
    --calcite-internal-button-background-color: var(--calcite-color-transparent);

    &:hover,
    &:focus,
    &:active {
      --calcite-internal-button-background-color: var(--calcite-color-transparent);
    }
  }
}

:host([appearance="outline"][kind="brand"]) {
  .button {
    --calcite-internal-button-text-color: var(--calcite-color-brand);
    --calcite-internal-button-border-color: var(--calcite-color-brand);

    &:hover {
      --calcite-internal-button-border-color: var(--calcite-color-brand-hover);
      --calcite-internal-button-text-color: var(--calcite-color-brand-hover);
    }
    &:focus {
      --calcite-internal-button-border-color: var(--calcite-color-brand);
      --calcite-internal-button-text-color: var(--calcite-color-brand);
    }
    &:active {
      --calcite-internal-button-border-color: var(--calcite-color-brand-press);
      --calcite-internal-button-text-color: var(--calcite-color-brand-press);
    }
    calcite-loader {
      --calcite-internal-button-loader-color: var(--calcite-color-brand);
    }
  }
}
:host([appearance="outline"][kind="danger"]) {
  .button {
    --calcite-internal-button-text-color: var(--calcite-color-status-danger);
    --calcite-internal-button-border-color: var(--calcite-color-status-danger);

    &:hover {
      --calcite-internal-button-border-color: var(--calcite-color-status-danger-hover);
      --calcite-internal-button-text-color: var(--calcite-color-status-danger-hover);
    }
    &:focus {
      --calcite-internal-button-border-color: var(--calcite-color-status-danger);
      --calcite-internal-button-text-color: var(--calcite-color-status-danger);
    }
    &:active {
      --calcite-internal-button-border-color: var(--calcite-color-status-danger-press);
      --calcite-internal-button-text-color: var(--calcite-color-status-danger-press);
    }
    calcite-loader {
      --calcite-internal-button-loader-color: var(--calcite-color-status-danger);
    }
  }
}
:host([appearance="outline"][kind="neutral"]) {
  .button {
    --calcite-internal-button-border-color: var(--calcite-color-border-1);
    --calcite-internal-button-text-color: var(--calcite-color-text-1);

    &:hover {
      --calcite-internal-button-background-color: var(--calcite-color-foreground-3);
    }
    &:focus,
    &:active {
      --calcite-internal-button-border-color: var(--calcite-color-foreground-3);
    }
    calcite-loader {
      --calcite-internal-button-loader-color: var(--calcite-color-text-1);
    }
  }
}
:host([appearance="outline"][kind="inverse"]) {
  .button {
    --calcite-internal-button-text-color: var(--calcite-color-text-1);
    --calcite-internal-button-border-color: var(--calcite-color-inverse);

    &:hover {
      --calcite-internal-button-border-color: var(--calcite-color-inverse-hover);
    }
    &:focus {
      --calcite-internal-button-border-color: var(--calcite-color-inverse);
    }
    &:active {
      --calcite-internal-button-border-color: var(--calcite-color-inverse-press);
    }
    calcite-loader {
      --calcite-internal-button-loader-color: var(--calcite-color-text-1);
    }
  }
}

:host([appearance="outline-fill"][split-child="primary"]),
:host([appearance="outline"][split-child="primary"]) {
  .button {
    border-inline-end-width: 0;
    border-inline-start-width: theme("borderWidth.DEFAULT");
  }
}

:host([appearance="outline-fill"][split-child="secondary"]),
:host([appearance="outline"][split-child="secondary"]) {
  .button {
    border-inline-start-width: 0;
    border-inline-end-width: theme("borderWidth.DEFAULT");
  }
}

// transparent
:host([appearance="transparent"]:not(.enable-editing-button)) {
  .button {
    --calcite-internal-button-background-color: var(--calcite-color-transparent);
    &:hover,
    &:focus {
      --calcite-internal-button-background-color: var(--calcite-color-transparent-hover);
    }
    &:active {
      --calcite-internal-button-background-color-active: var(--calcite-color-transparent-press);
    }
  }
}
:host([appearance="transparent"][kind="brand"]) {
  .button {
    --calcite-internal-button-text-color: var(--calcite-color-brand);
    &:hover {
      --calcite-internal-button-text-color: var(--calcite-color-brand-hover);
    }
    &:focus {
      --calcite-internal-button-text-color: var(--calcite-color-brand);
    }
    &:active {
      --calcite-internal-button-text-color: var(--calcite-color-brand-press);
    }
    calcite-loader {
      --calcite-internal-button-loader-color: var(--calcite-color-brand);
    }
  }
}

:host([appearance="transparent"][kind="danger"]) {
  .button {
    --calcite-internal-button-text-color: var(--calcite-color-status-danger);
    &:hover {
      --calcite-internal-button-text-color: var(--calcite-color-status-danger-hover);
    }
    &:focus {
      --calcite-internal-button-text-color: var(--calcite-color-status-danger);
    }
    &:active {
      --calcite-internal-button-text-color: var(--calcite-color-status-danger-press);
    }
    calcite-loader {
      --calcite-internal-button-loader-color: var(--calcite-color-status-danger);
    }
  }
}

:host([appearance="transparent"][kind="neutral"]:not(.cancel-editing-button)) {
  .button {
    --calcite-internal-button-text-color: var(--calcite-color-text-1);
  }
  calcite-loader {
    --calcite-internal-button-loader-color: var(--calcite-color-text-1);
  }
}

:host([appearance="transparent"][kind="neutral"].cancel-editing-button) {
  .button {
    border-block-color: var(--calcite-button-border-color, var(--calcite-color-border-input));
    border-block-style: solid;
    border-block-width: var(--calcite-border-width-sm);
    --calcite-internal-button-text-color: var(--calcite-color-text-3);

    &:not(.content--slotted) {
      --calcite-internal-button-space-y: 0;
    }

    &:hover {
      --calcite-internal-button-text-color: var(--calcite-color-text-1);
    }
  }
}

:host([appearance="transparent"][kind="neutral"].enable-editing-button) {
  .button {
    --calcite-internal-button-background-color: var(--calcite-color-transparent);
  }
}

:host([appearance="transparent"][kind="inverse"]) {
  .button {
    --calcite-internal-button-text-color: var(--calcite-color-text-inverse);
  }
  calcite-loader {
    --calcite-internal-button-loader-color: var(--calcite-color-text-inverse);
  }
}

:host(.confirm-changes-button),
:host(.cancel-editing-button),
:host(.enable-editing-button) {
  button {
    &:focus {
      outline-offset: -2px; // ensure focus outlines work in Safari
    }
  }
}

// generate button scales (scenario: text exists)
:host([scale="s"]) button.content--slotted,
:host([scale="s"]) a.content--slotted {
  @apply text-n2h;
}

// accommodate for transparent buttons not having borders
:host([scale="s"][appearance="transparent"]) button.content--slotted,
:host([scale="s"][appearance="transparent"]) a.content--slotted {
  --calcite-internal-button-padding-x: theme("padding.2");
}

:host([scale="s"]) button,
:host([scale="s"]) a {
  --calcite-internal-button-padding-y: 3px;
}

:host([scale="m"]) button.content--slotted,
:host([scale="m"]) a.content--slotted {
  --calcite-internal-button-padding-x: 11px;
  @apply text-n1h;
}

:host([scale="m"]) button,
:host([scale="m"]) a {
  --calcite-internal-button-padding-y: 7px;
}
// accommodate for transparent buttons not having borders
:host([scale="m"][appearance="transparent"]) button.content--slotted,
:host([scale="m"][appearance="transparent"]) a.content--slotted {
  --calcite-internal-button-padding-x: theme("padding.3");
}

:host([scale="l"]) button.content--slotted,
:host([scale="l"]) a.content--slotted {
  --calcite-internal-button-padding-x: 15px;
  @apply text-0h;
}

:host([scale="l"]) {
  .button-padding {
    --calcite-internal-button-padding-x: theme("padding.4");
    --calcite-internal-button-padding-y: 11px;
  }
  //shrink the padding if an icon is present to preserve the height
  .button-padding--shrunk {
    --calcite-internal-button-padding-y: 9px;
  }
}

// generate fab scales (scenario: 1 icon, ie., should be square)
:host([scale="s"]) button:not(.content--slotted),
:host([scale="s"]) a:not(.content--slotted) {
  --calcite-internal-button-padding-x: theme("padding[0.5]");
  --calcite-internal-button-padding-y: 3px;
  @apply text-0h w-6;
  min-block-size: theme("height.6");
}

:host([scale="m"]) button:not(.content--slotted),
:host([scale="m"]) a:not(.content--slotted) {
  --calcite-internal-button-padding-x: theme("padding[0.5]");
  --calcite-internal-button-padding-y: 7px;
  @apply text-0h w-8;
  min-block-size: theme("height.8");
}
:host([scale="l"]) button:not(.content--slotted),
:host([scale="l"]) a:not(.content--slotted) {
  --calcite-internal-button-padding-x: theme("padding[0.5]");
  --calcite-internal-button-padding-y: 9px;
  @apply text-0h w-11;
  min-block-size: theme("height.11");
}

:host(:is([scale="s"], [scale="m"], [scale="l"])[width="full"]) {
  a,
  button {
    &:not(.content--slotted) {
      inline-size: var(--calcite-container-size-content-fluid);
    }
  }
}

// accommodate for transparent buttons not having borders
:host([scale="l"][appearance="transparent"]) button:not(.content--slotted),
:host([scale="l"][appearance="transparent"]) a:not(.content--slotted) {
  --calcite-internal-button-padding-y: theme("padding[2.5]");
}

// generate fab scales (scenario: 2 icons, ie., should not be square)
:host([scale="s"][icon-start][icon-end]) button:not(.content--slotted),
:host([scale="s"][icon-start][icon-end]) a:not(.content--slotted) {
  --calcite-internal-button-padding-x: 23px;
  @apply text-0h h-6;
}
// accommodate for transparent buttons not having borders
:host([scale="s"][icon-start][icon-end][appearance="transparent"]) button:not(.content--slotted),
:host([scale="s"][icon-start][icon-end][appearance="transparent"]) a:not(.content--slotted) {
  --calcite-internal-button-padding-x: theme("padding.6");
}
:host([scale="m"][icon-start][icon-end]) button:not(.content--slotted),
:host([scale="m"][icon-start][icon-end]) a:not(.content--slotted) {
  --calcite-internal-button-padding-x: theme("padding.8");
  @apply text-0h h-8;
}
// accommodate for transparent buttons not having borders
:host([scale="m"][icon-start][icon-end][appearance="transparent"]) button:not(.content--slotted),
:host([scale="m"][icon-start][icon-end][appearance="transparent"]) a:not(.content--slotted) {
  --calcite-internal-button-padding-x: 33px;
}
:host([scale="l"][icon-start][icon-end]) button:not(.content--slotted),
:host([scale="l"][icon-start][icon-end]) a:not(.content--slotted) {
  --calcite-internal-button-padding-x: 43px;
  @apply text-0h h-11;
  // add space between when only 2 icons
  .icon--start + .icon--end {
    margin-inline-start: theme("margin.4");
  }
}
// accommodate for transparent buttons not having borders
:host([scale="l"][icon-start][icon-end][appearance="transparent"]) button:not(.content--slotted),
:host([scale="l"][icon-start][icon-end][appearance="transparent"]) a:not(.content--slotted) {
  --calcite-internal-button-padding-x: theme("padding.11");
}
@include disabled();
@include base-component();

@keyframes loader-in {
  0% {
    inline-size: 0;
    opacity: 0;
    transform: scale(0.5);
  }
  100% {
    inline-size: 1em;
    opacity: 1;
    transform: scale(1);
  }
}
@keyframes loader-out {
  0% {
    inline-size: 1em;
    opacity: 1;
    transform: scale(1);
  }
  100% {
    inline-size: 0;
    opacity: 0;
    transform: scale(0.5);
  }
}
