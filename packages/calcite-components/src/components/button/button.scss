/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-button-background-color: defines the component's background color.
 * @prop --calcite-button-border-color: defines the component's border color.
 * @prop --calcite-button-corner-radius: defines the component's corner radius.
 * @prop --calcite-button-loader-color: defines the component's loader color.
 * @prop --calcite-button-shadow: defines the component's shadow.
 * @prop --calcite-button-text-color: defines the component's text color.
 * @prop --calcite-button-icon-color: defines the color of an icon in the component.
 */

:host {
  @apply inline-block w-auto align-middle;
  inline-size: var(--calcite-internal-button-size-x);
  border-radius: var(
    --calcite-button-corner-radius,
    var(--calcite-internal-button-corner-radius, var(--calcite-corner-radius))
  );

  button,
  a {
    @apply focus-base
      font-inherit
      relative
      box-border
      flex
      cursor-pointer
      select-none
      appearance-none
      items-center
      border-none
      text-center
      font-normal
      no-underline;
    padding-block: var(--calcite-internal-button-space-y, 3px);
    padding-inline: var(--calcite-internal-button-space-x, 7px);
    inline-size: var(--calcite-container-size-content-fluid);
    block-size: var(--calcite-container-size-content-fluid);
    border-radius: var(
      --calcite-button-corner-radius,
      var(--calcite-internal-button-corner-radius, var(--calcite-corner-radius))
    );
    justify-content: var(--calcite-internal-button-content-align-x, center);
    background-color: var(
      --calcite-button-background-color,
      var(--calcite-internal-button-background-color, var(--calcite-color-foreground-1))
    );
    color: var(--calcite-button-text-color, var(--calcite-internal-button-text-color, var(--calcite-color-text-1)));
    box-shadow: var(--calcite-button-shadow-color, var(--calcite-internal-button-shadow, none));
    border-style: none;
    border-width: var(--calcite-border-width-sm);
    border-color: var(
      --calcite-button-border-color,
      var(--calcite-internal-button-border-color, var(--calcite-color-transparent))
    );

    // include transition from focus
    transition:
      color var(--calcite-animation-timing) ease-in-out,
      background-color var(--calcite-animation-timing) ease-in-out,
      box-shadow var(--calcite-animation-timing) ease-in-out,
      outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;

    span {
      @apply truncate;
    }
  }

  calcite-loader {
    --calcite-loader-color-start: var(
      --calcite-button-loader-color,
      var(--calcite-internal-button-loader-color, var(--calcite-color-text-inverse))
    );
  }
}

:host(:focus) button,
:host(:focus) a,
button:focus,
a:focus {
  @apply focus-outset;
}

:host(:hover) button,
:host(:hover) a,
button:hover,
a:hover {
  @apply no-underline;
}

// fab variants
:host([round]) {
  --calcite-internal-button-corner-radius: 50px;
}

.content {
  margin-inline: var(--calcite-internal-button-content-space, theme("margin.2"));
}

.icon-start-empty .content {
  margin-inline-start: unset;
}
.icon-end-empty .content {
  margin-inline-end: unset;
}

.icon {
  @apply relative
    m-0
    inline-flex
    font-normal;
  line-height: inherit;
}

.calcite-button--loader {
  @apply flex;
  calcite-loader {
    @apply m-0;
    transition:
      inline-size var(--calcite-internal-animation-timing-slow) ease-in-out,
      opacity var(--calcite-internal-animation-timing-slow) ease-in-out,
      transform var(--calcite-internal-animation-timing-slow) ease-in-out;
    &.loading-in {
      animation-name: loader-in;
      animation-duration: var(--calcite-internal-animation-timing-slow);
    }
    &.loading-out {
      animation-name: loader-out;
      animation-duration: var(--calcite-internal-animation-timing-slow);
    }
  }
}

// Scales
// generate button scales (scenario: text exists)
:host([scale="s"]) {
  a,
  button {
    --calcite-internal-button-space-y: 3px;

    &.content--slotted {
      @apply text-n2h;
    }
    // generate fab scales (scenario: 1 icon, ie., should be square)
    &:not(.content--slotted) {
      --calcite-internal-button-space-x: theme("padding[0.5]");
      --calcite-internal-button-space-y: 3px;
      @apply text-0h w-6;
      min-block-size: theme("height.6");
    }
  }
}
:host([scale="s"][appearance="transparent"]) {
  a,
  button {
    &.content--slotted {
      --calcite-internal-button-space-x: theme("padding.2");
    }
  }
}
// generate fab scales (scenario: 2 icons, ie., should not be square)
:host([scale="s"][icon-start][icon-end]) {
  a,
  button {
    &:not(.content--slotted) {
      --calcite-internal-button-space-x: 23px;
      @apply text-0h h-6;
    }
  }
}
// accommodate for transparent buttons not having borders
:host([scale="s"][icon-start][icon-end][appearance="transparent"]) {
  a,
  button {
    &:not(.content--slotted) {
      --calcite-internal-button-space-x: theme("padding.6");
    }
  }
}

:host([scale="m"]) {
  button,
  a {
    --calcite-internal-button-space-y: 7px;
    --calcite-internal-button-content-space: theme("margin.3");

    &.content--slotted {
      --calcite-internal-button-space-x: 11px;
      @apply text-n1h;
    }
    &:not(.content--slotted) {
      --calcite-internal-button-space-x: theme("padding[0.5]");
      --calcite-internal-button-space-y: 7px;
      @apply text-0h w-8;
      min-block-size: theme("height.8");
    }
  }
}
// accommodate for transparent buttons not having borders
:host([scale="m"][appearance="transparent"]) {
  a,
  button {
    &.content--slotted {
      --calcite-internal-button-space-x: theme("padding.3");
    }
  }
}
:host([scale="m"][icon-start][icon-end]) {
  a,
  button {
    &:not(.content--slotted) {
      --calcite-internal-button-space-x: theme("padding.8");
      @apply text-0h h-8;
    }
  }
}
// accommodate for transparent buttons not having borders
:host([scale="m"][icon-start][icon-end][appearance="transparent"]) {
  a,
  button {
    &:not(.content--slotted) {
      --calcite-internal-button-space-x: 33px;
    }
  }
}

:host([scale="l"]) {
  button,
  a {
    --calcite-internal-button-content-space: theme("margin.4");

    &.content--slotted {
      --calcite-internal-button-space-x: 15px;
      @apply text-0h;
    }
    &:not(.content--slotted) {
      --calcite-internal-button-space-x: theme("padding[0.5]");
      --calcite-internal-button-space-y: 9px;
      @apply text-0h w-11;
      min-block-size: theme("height.11");
    }
  }

  .button-padding {
    --calcite-internal-button-space-x: theme("padding.4");
    --calcite-internal-button-space-y: 11px;
  }
  //shrink the padding if an icon is present to preserve the height
  .button-padding--shrunk {
    --calcite-internal-button-space-y: 9px;
  }
}
// accommodate for transparent buttons not having borders
:host([scale="l"][appearance="transparent"]) {
  a,
  button {
    &:not(.content--slotted) {
      --calcite-internal-button-space-y: theme("padding[2.5]");
    }
  }
}
:host([scale="l"][icon-start][icon-end]) {
  a,
  button {
    &:not(.content--slotted) {
      --calcite-internal-button-space-x: 43px;
      @apply text-0h h-11;
      // add space between when only 2 icons
      .icon--start + .icon--end {
        margin-inline-start: theme("margin.4");
      }
    }
  }
}
// accommodate for transparent buttons not having borders
:host([scale="l"][icon-start][icon-end][appearance="transparent"]) {
  a,
  button {
    &:not(.content--slotted) {
      --calcite-internal-button-space-x: theme("padding.11");
    }
  }
}

// button width
:host([width="auto"]) {
  --calcite-internal-button-size-x: auto;
}
:host([width="half"]) {
  --calcite-internal-button-size-x: 50%;
}
:host([width="full"]) {
  --calcite-internal-button-size-x: var(--calcite-container-size-content-fluid);
}

// alignment
:host([alignment="center"]:not([width="auto"])) {
  a,
  button {
    --calcite-internal-button-content-align-x: center;
  }
}
:host([alignment="start"]:not([width="auto"])) {
  a,
  button {
    --calcite-internal-button-content-align-x: flex-start;
  }
}
:host([alignment="end"]:not([width="auto"])) {
  a,
  button {
    --calcite-internal-button-content-align-x: flex-end;
  }
}
:host([alignment*="space-between"]:not([width="auto"])) {
  a,
  button {
    --calcite-internal-button-content-align-x: space-between;
  }
}
:host([alignment="icon-start-space-between"]:not([width="auto"])) {
  .icon--start {
    margin-inline-end: auto;
  }
  a,
  button {
    text-align: unset;
  }
}
:host([alignment="icon-end-space-between"]:not([width="auto"])) {
  .icon--end {
    margin-inline-start: auto;
  }
  a,
  button {
    text-align: unset;
  }
}
// only two icons
:host([alignment="center"]) {
  a:not(.content--slotted),
  button:not(.content--slotted) {
    .icon--start + .icon--end {
      margin-inline-start: var(--calcite-internal-button-content-space, theme("margin.2"));
    }
  }
}

:host([loading]) {
  // center loading spinner when button has text
  button.content--slotted,
  a.content--slotted {
    .calcite-button--loader calcite-loader {
      margin-inline-end: var(--calcite-internal-button-content-space, theme("margin.2"));
    }
  }
  // hide icons when loading with no text
  button:not(.content--slotted),
  a:not(.content--slotted) {
    .icon--start,
    .icon--end {
      @apply hidden;
    }
  }
}

// button styles
:host([appearance]) {
  button,
  a {
    border-style: solid;
  }
}

:host([kind="brand"]) {
  button,
  a {
    --calcite-internal-button-text-color: var(--calcite-color-text-inverse);
    --calcite-internal-button-background-color: var(--calcite-color-brand);
    --calcite-internal-button-loader-color: var(--calcite-color-text-inverse);
    &:hover,
    &:focus {
      --calcite-internal-button-background-color: var(--calcite-color-brand-hover);
    }
    &:active {
      --calcite-internal-button-background-color: var(--calcite-color-brand-press);
    }
  }
}

:host([kind="danger"]) {
  button,
  a {
    --calcite-internal-button-text-color: var(--calcite-color-text-inverse);
    --calcite-internal-button-background-color: var(--calcite-color-status-danger);
    --calcite-internal-button-loader-color: var(--calcite-color-text-inverse);

    &:hover,
    &:focus {
      --calcite-internal-button-background-color: var(--calcite-color-status-danger-hover);
    }
    &:active {
      --calcite-internal-button-background-color: var(--calcite-color-status-danger-press);
    }
  }
}
:host([kind="neutral"]) {
  button,
  a {
    --calcite-internal-button-text-color: var(--calcite-color-text-1);
    --calcite-internal-button-background-color: var(--calcite-color-foreground-3);

    &:hover,
    &:focus {
      --calcite-internal-button-background-color: var(--calcite-color-foreground-2);
    }
    &:active {
      --calcite-internal-button-background-color-active: var(--calcite-color-foreground-1);
    }
  }

  calcite-loader {
    --calcite-internal-button-loader-color: var(--calcite-color-text-1);
  }
}
:host([kind="inverse"]) {
  button,
  a {
    --calcite-internal-button-text-color: var(--calcite-color-text-inverse);
    --calcite-internal-button-background-color: var(--calcite-color-inverse);

    &:hover,
    &:focus {
      --calcite-internal-button-background-color: var(--calcite-color-inverse-hover);
    }
    &:active {
      --calcite-internal-button-background-color-active: var(--calcite-color-inverse-press);
    }
  }

  calcite-loader {
    --calcite-internal-button-loader-color: var(--calcite-color-text-inverse);
  }
}
// outline
:host([appearance="outline-fill"]) {
  button,
  a {
    --calcite-internal-button-background-color: var(--calcite-color-foreground-1);
    --calcite-internal-button-shadow: inset 0 0 0 1px transparent;
    border-width: var(--calcite-border-width-sm);
    border-style: solid;
  }
}
:host([appearance="outline-fill"][kind="brand"]) {
  button,
  a {
    --calcite-internal-button-border-color: var(--calcite-color-brand);
    --calcite-internal-button-background-color: var(--calcite-color-foreground-1);
    --calcite-internal-button-text-color: var(--calcite-color-brand);
    &:hover {
      --calcite-internal-button-border-color: var(--calcite-color-brand-hover);
      --calcite-internal-button-text-color: var(--calcite-color-brand-hover);
      --calcite-internal-button-shadow: inset 0 0 0 1px var(--calcite-color-brand-hover);
    }
    &:focus {
      --calcite-internal-button-border-color: var(--calcite-color-brand);
      --calcite-internal-button-text-color: var(--calcite-color-brand);
      --calcite-internal-button-shadow: inset 0 0 0 2px var(--calcite-color-brand);
    }
    &:active {
      --calcite-internal-button-border-color: var(--calcite-color-brand-press);
      --calcite-internal-button-text-color: var(--calcite-color-brand-press);
      --calcite-internal-button-shadow: inset 0 0 0 2px var(--calcite-color-brand-press);
    }
    calcite-loader {
      --calcite-internal-button-border-color: var(--calcite-color-brand);
    }
  }
}
:host([appearance="outline-fill"][kind="danger"]) {
  button,
  a {
    --calcite-internal-button-border-color: var(--calcite-color-status-danger);
    --calcite-internal-button-background-color: var(--calcite-color-foreground-1);
    --calcite-internal-button-text-color: var(--calcite-color-status-danger);
    &:hover {
      --calcite-internal-button-border-color: var(--calcite-color-status-danger-hover);
      --calcite-internal-button-text-color: var(--calcite-color-status-danger-hover);
      --calcite-internal-button-shadow: inset 0 0 0 1px var(--calcite-color-status-danger-hover);
    }
    &:focus {
      --calcite-internal-button-border-color: var(--calcite-color-status-danger);
      --calcite-internal-button-text-color: var(--calcite-color-status-danger);
      --calcite-internal-button-shadow: inset 0 0 0 2px var(--calcite-color-status-danger);
    }
    &:active {
      --calcite-internal-button-border-color: var(--calcite-color-status-danger-press);
      --calcite-internal-button-text-color: var(--calcite-color-status-danger-press);
      --calcite-internal-button-shadow: inset 0 0 0 2px var(--calcite-color-status-danger-press);
    }
    calcite-loader {
      --calcite-internal-button-border-color: var(--calcite-color-status-danger);
    }
  }
}
:host([appearance="outline-fill"][kind="neutral"]) {
  button,
  a {
    --calcite-internal-button-border-color: var(--calcite-color-border-1);
    --calcite-internal-button-background-color: var(--calcite-color-foreground-1);
    --calcite-internal-button-text-color: var(--calcite-color-text-1);
    &:hover {
      --calcite-internal-button-shadow: inset 0 0 0 1px var(--calcite-color-foreground-3);
    }
    &:focus {
      --calcite-internal-button-shadow: inset 0 0 0 2px var(--calcite-color-foreground-3);
    }
    &:active {
      --calcite-internal-button-shadow: inset 0 0 0 2px var(--calcite-color-foreground-3);
    }
    calcite-loader {
      --calcite-internal-button-border-color: var(--calcite-color-text-1);
    }
  }
}
:host([appearance="outline-fill"][kind="inverse"]) {
  button,
  a {
    --calcite-internal-button-text-color: var(--calcite-color-text-1);
    --calcite-internal-button-background-color: var(--calcite-color-foreground-1);
    --calcite-internal-button-border-color: var(--calcite-color-inverse);
    &:hover {
      --calcite-internal-button-border-color: var(--calcite-color-inverse-hover);
      --calcite-internal-button-shadow: inset 0 0 0 1px var(--calcite-color-inverse-hover);
    }
    &:focus {
      --calcite-internal-button-border-color: var(--calcite-color-inverse);
      --calcite-internal-button-shadow: inset 0 0 0 2px var(--calcite-color-inverse);
    }
    &:active {
      --calcite-internal-button-border-color: var(--calcite-color-inverse-press);
      --calcite-internal-button-shadow: inset 0 0 0 2px var(--calcite-color-inverse-press);
    }
    calcite-loader {
      --calcite-internal-button-loader-color: var(--calcite-color-text-1);
    }
  }
}
:host([appearance="outline"]) {
  button,
  a {
    --calcite-internal-button-background-color: var(--calcite-color-transparent);
    --calcite-internal-button-shadow: inset 0 0 0 1px var(--calcite-color-transparent);
  }
}
:host([appearance="outline"][kind="brand"]) {
  button,
  a {
    --calcite-internal-button-text-color: var(--calcite-color-brand);
    --calcite-internal-button-border-color: var(--calcite-color-brand);

    &:hover {
      --calcite-internal-button-background-color: var(--calcite-color-transparent);
      --calcite-internal-button-border-color: var(--calcite-color-brand-hover);
      --calcite-internal-button-text-color: var(--calcite-color-brand-hover);
      --calcite-internal-button-shadow: inset 0 0 0 1px var(--calcite-color-brand-hover);
    }
    &:focus {
      --calcite-internal-button-background-color: var(--calcite-color-transparent);
      --calcite-internal-button-border-color: var(--calcite-color-brand);
      --calcite-internal-button-text-color: var(--calcite-color-brand);
      --calcite-internal-button-shadow: inset 0 0 0 2px var(--calcite-color-brand);
    }
    &:active {
      --calcite-internal-button-background-color: var(--calcite-color-transparent);
      --calcite-internal-button-border-color: var(--calcite-color-brand-press);
      --calcite-internal-button-text-color: var(--calcite-color-brand-press);
      --calcite-internal-button-shadow: inset 0 0 0 2px var(--calcite-color-brand-press);
    }
    calcite-loader {
      --calcite-internal-button-loader-color: var(--calcite-color-brand);
    }
  }
}
:host([appearance="outline"][kind="danger"]) {
  button,
  a {
    --calcite-internal-button-text-color: var(--calcite-color-status-danger);
    --calcite-internal-button-border-color: var(--calcite-color-status-danger);

    &:hover {
      --calcite-internal-button-background-color: var(--calcite-color-transparent);
      --calcite-internal-button-border-color: var(--calcite-color-status-danger-hover);
      --calcite-internal-button-text-color: var(--calcite-color-status-danger-hover);
      --calcite-internal-button-shadow: inset 0 0 0 1px var(--calcite-color-status-danger-hover);
    }
    &:focus {
      --calcite-internal-button-background-color: var(--calcite-color-transparent);
      --calcite-internal-button-border-color: var(--calcite-color-status-danger);
      --calcite-internal-button-text-color: var(--calcite-color-status-danger);
      --calcite-internal-button-shadow: inset 0 0 0 2px var(--calcite-color-status-danger);
    }
    &:active {
      --calcite-internal-button-background-color: var(--calcite-color-transparent);
      --calcite-internal-button-border-color: var(--calcite-color-status-danger-press);
      --calcite-internal-button-text-color: var(--calcite-color-status-danger-press);
      --calcite-internal-button-shadow: inset 0 0 0 2px var(--calcite-color-status-danger-press);
    }
    calcite-loader {
      --calcite-internal-button-loader-color: var(--calcite-color-status-danger);
    }
  }
}
:host([appearance="outline"][kind="neutral"]) {
  button,
  a {
    --calcite-internal-button-border-color: var(--calcite-color-border-1);
    --calcite-internal-button-text-color: var(--calcite-color-text-1);
    --calcite-internal-button-background-color: var(--calcite-color-transparent);

    &:hover {
      --calcite-internal-button-background-color: var(--calcite-color-transparent);
      --calcite-internal-button-shadow: inset 0 0 0 1px var(--calcite-color-foreground-3);
    }
    &:focus {
      --calcite-internal-button-background-color: var(--calcite-color-transparent);
      --calcite-internal-button-shadow: inset 0 0 0 2px var(--calcite-color-foreground-3);
    }
    &:active {
      --calcite-internal-button-background-color: var(--calcite-color-transparent);
      --calcite-internal-button-shadow: inset 0 0 0 2px var(--calcite-color-foreground-3);
    }
    calcite-loader {
      --calcite-internal-button-loader-color: var(--calcite-color-text-1);
    }
  }
}
:host([appearance="outline"][kind="inverse"]) {
  button,
  a {
    --calcite-internal-button-text-color: var(--calcite-color-text-1);
    --calcite-internal-button-border-color: var(--calcite-color-inverse);

    &:hover,
    &:focus,
    &:active {
      --calcite-internal-button-background-color: var(--calcite-color-transparent);
    }

    &:hover {
      --calcite-internal-button-border-color: var(--calcite-color-inverse-hover);
      --calcite-internal-button-shadow: inset 0 0 0 1px var(--calcite-color-inverse-hover);
    }
    &:focus {
      --calcite-internal-button-border-color: var(--calcite-color-inverse);
      --calcite-internal-button-shadow: inset 0 0 0 2px var(--calcite-color-inverse);
    }
    &:active {
      --calcite-internal-button-border-color: var(--calcite-color-inverse-press);
      --calcite-internal-button-shadow: inset 0 0 0 2px var(--calcite-color-inverse-press);
    }
    calcite-loader {
      --calcite-internal-button-loader-color: var(--calcite-color-text-1);
    }
  }
}

:host([appearance="outline-fill"][split-child="primary"]) button,
:host([appearance="outline"][split-child="primary"]) button {
  border-inline-end-width: 0;
  border-inline-start-width: theme("borderWidth.DEFAULT");
}

:host([appearance="outline-fill"][split-child="secondary"]) button,
:host([appearance="outline"][split-child="secondary"]) button {
  border-inline-start-width: 0;
  border-inline-end-width: theme("borderWidth.DEFAULT");
}

// transparent
:host([appearance="transparent"]:not(.enable-editing-button)) {
  button,
  a {
    --calcite-internal-button-background-color: var(--calcite-color-transparent);
    &:hover,
    &:focus {
      --calcite-internal-button-background-color: var(--calcite-color-transparent-hover);
    }
    &:active {
      --calcite-internal-button-background-color-active: var(--calcite-color-transparent-press);
    }
  }
}
:host([appearance="transparent"][kind="brand"]) {
  button,
  a {
    --calcite-internal-button-text-color: var(--calcite-color-brand);
    &:hover {
      --calcite-internal-button-text-color: var(--calcite-color-brand-hover);
    }
    &:focus {
      --calcite-internal-button-text-color: var(--calcite-color-brand);
    }
    &:active {
      --calcite-internal-button-text-color: var(--calcite-color-brand-press);
    }
    calcite-loader {
      --calcite-internal-button-loader-color: var(--calcite-color-brand);
    }
  }
}

:host([appearance="transparent"][kind="danger"]) {
  button,
  a {
    --calcite-internal-button-text-color: var(--calcite-color-status-danger);
    &:hover {
      --calcite-internal-button-text-color: var(--calcite-color-status-danger-hover);
    }
    &:focus {
      --calcite-internal-button-text-color: var(--calcite-color-status-danger);
    }
    &:active {
      --calcite-internal-button-text-color: var(--calcite-color-status-danger-press);
    }
    calcite-loader {
      --calcite-internal-button-loader-color: var(--calcite-color-status-danger);
    }
  }
}

:host([appearance="transparent"][kind="neutral"]:not(.cancel-editing-button)) {
  button,
  a {
    --calcite-internal-button-text-color: var(--calcite-color-text-1);
  }
  calcite-loader {
    --calcite-internal-button-loader-color: var(--calcite-color-text-1);
  }
}

:host([appearance="transparent"][kind="neutral"].cancel-editing-button) {
  button {
    border-block-color: var(--calcite-button-border-color, var(--calcite-color-border-input));
    border-block-style: solid;
    border-block-width: var(--calcite-border-width-sm);
    --calcite-internal-button-text-color: var(--calcite-color-text-3);

    &:not(.content--slotted) {
      --calcite-internal-button-space-y: 0;
    }

    &:hover {
      --calcite-internal-button-text-color: var(--calcite-color-text-1);
    }
  }
}

:host([appearance="transparent"][kind="neutral"].enable-editing-button) {
  button {
    --calcite-internal-button-background-color: var(--calcite-color-transparent);
  }
}

:host([appearance="transparent"][kind="inverse"]) {
  button,
  a {
    --calcite-internal-button-text-color: var(--calcite-color-text-inverse);
  }
  calcite-loader {
    --calcite-internal-button-loader-color: var(--calcite-color-text-inverse);
  }
}

:host(.confirm-changes-button),
:host(.cancel-editing-button),
:host(.enable-editing-button) {
  button {
    &:focus {
      outline-offset: -2px; // ensure focus outlines work in Safari
    }
  }
}

a,
button {
  --calcite-icon-color: var(--calcite-button-icon-color);
}

@include base-component();
@include disabled();

@keyframes loader-in {
  0% {
    inline-size: 0;
    opacity: 0;
    transform: scale(0.5);
  }
  100% {
    inline-size: 1em;
    opacity: 1;
    transform: scale(1);
  }
}
@keyframes loader-out {
  0% {
    inline-size: 1em;
    opacity: 1;
    transform: scale(1);
  }
  100% {
    inline-size: 0;
    opacity: 0;
    transform: scale(0.5);
  }
}
