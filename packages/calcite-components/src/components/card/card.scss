/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-card-background-color: Specifies the background color of the component.
 * @prop --calcite-card-border-color: Specifies the border color of the component.
 * @prop --calcite-card-box-shadow: Specifies the box shadow of the component.
 * @prop --calcite-card-corner-radius: Specifies the corner radius of the component.
 *
 * @prop --calcite-card-checkbox-background-color: *deprecated* defines the background-color of the sub-component.
 * @prop --calcite-card-checkbox-background-color-checked: *deprecated* defines the background-color of the sub-component when checked.
 * @prop --calcite-card-checkbox-icon-color: *deprecated* defines the checkmark color of the sub-component.
 * @prop --calcite-card-checkbox-shadow: *deprecated* defines the shadow of the sub-component.
 * @prop --calcite-card-checkbox-shadow-checked: *deprecated* defines the shadow of the sub-component when checked.
 * @prop --calcite-card-checkbox-shadow-hover: *deprecated* defines the shadow of the sub-component when hovered.
 * @prop --calcite-card-checkbox-shadow-invalid: *deprecated* defines the shadow of the sub-component when invalid.
 * @prop --calcite-card-checkbox-size: *deprecated* defines the size of the sub-component.
 */

:host {
  @apply block max-w-full;
}

.calcite-card-container {
  @apply relative
    flex
    h-full
    flex-col
    justify-between
    duration-150
    ease-in-out
    overflow-hidden;
  border: var(--calcite-border-width-sm) solid var(--calcite-card-border-color, var(--calcite-color-border-3));
  border-radius: var(--calcite-card-corner-radius, var(--calcite-corner-radius-sharp));
  background-color: var(--calcite-card-background-color, var(--calcite-color-foreground-1));
  box-shadow: var(--calcite-card-box-shadow, var(--calcite-shadow-none));
}

.container {
  @apply relative flex flex-auto flex-col;
}

:host([loading]) .calcite-card-container *:not(calcite-loader):not(.calcite-card-loader-container) {
  @apply pointer-events-none;
  opacity: $calcite-opacity-0;
}

:host([loading]) .calcite-card-loader-container {
  @apply absolute inset-0 flex items-center;
}

.header {
  @apply flex flex-col;
  padding-inline: var(--calcite-spacing-md);
  padding-block-start: var(--calcite-spacing-md);
  padding-block-end: var(--calcite-spacing-xxs);
}

.footer {
  @apply flex mt-auto flex-row content-between justify-between;
  padding-inline: var(--calcite-spacing-md);
  padding-block-start: var(--calcite-spacing-xxs);
  padding-block-end: var(--calcite-spacing-md);
}

.card-content {
  @apply text-n2-wrap;
  color: var(--calcite-color-text-3);
  padding: var(--calcite-spacing-md);
}

:host([selected]) .calcite-card-container {
  --calcite-card-border-color: var(--calcite-color-brand);
}

// slotted content
@include slotted("title", "*") {
  @apply text-n1-wrap;
  margin: 0;
  font-weight: var(--calcite-font-weight-medium);
  color: var(--calcite-color-text-1);
}

:host([selectable]) {
  .header {
    // prevents overlap with checkbox (default header padding + no-overlap spacing)
    padding-inline-end: var(--calcite-spacing-xxxl);
  }
}

@include slotted("subtitle", "*") {
  @apply text-n2-wrap font-normal;
  margin: 0;
  margin-block-start: var(--calcite-spacing-sm);
  color: var(--calcite-color-text-2);
}

@include slotted("thumbnail", "img") {
  @apply min-w-full max-w-full;
}

@include slotted("footer-start", "*") {
  @apply text-n2-wrap self-center;
  margin-inline-end: auto;
  color: var(--calcite-color-text-3);
}

@include slotted("footer-end", "*") {
  @apply text-n2-wrap self-center;
  color: var(--calcite-color-text-3);
}

.checkbox-wrapper {
  @apply absolute;
  inset-block-start: var(--calcite-spacing-sm);
  inset-inline-end: var(--calcite-spacing-sm);
  margin: 0;
  padding: 0;
}

.thumbnail-wrapper {
  @apply flex;
}

.calcite-card-container.inline {
  @apply flex-row;

  & > .container {
    @apply w-3/5;
  }
  & > .thumbnail-wrapper {
    @apply items-start w-2/5;
  }

  @include slotted("thumbnail", "img") {
    @apply w-full;
  }
}

slot[name="footer-start"]::slotted(*),
slot[name="footer-end"]::slotted(*) {
  @apply flex gap-1;
}

calcite-checkbox {
  --calcite-checkbox-background-color: var(--calcite-card-checkbox-background-color);
  --calcite-checkbox-background-color-checked: var(--calcite-card-checkbox-background-color-checked);
  --calcite-checkbox-icon-color: var(--calcite-card-checkbox-icon-color);
  --calcite-checkbox-shadow: var(--calcite-card-checkbox-shadow);
  --calcite-checkbox-shadow-checked: var(--calcite-card-checkbox-shadow-checked);
  --calcite-checkbox-shadow-hover: var(--calcite-card-checkbox-shadow-hover);
  --calcite-checkbox-shadow-invalid: var(--calcite-card-checkbox-shadow-invalid);
  --calcite-checkbox-size: var(--calcite-card-checkbox-size);
}

@include base-component();
