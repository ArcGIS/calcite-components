/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-color-picker-background-color: Specifies the background color of the component.
 * @prop --calcite-color-picker-button-background-color-active: defines the background color of the button when in a active state in the component.
 * @prop --calcite-color-picker-button-background-color-focus: defines the background color of the button when in a focus state in the component.
 * @prop --calcite-color-picker-button-background-color-hover: defines the background color of the button when in a hover state in the component.
 * @prop --calcite-color-picker-button-corner-radius: defines the corner radius of the button in the component.
 * @prop --calcite-color-picker-button-icon-color-active: defines the icon color of the button when in a active state in the component.
 * @prop --calcite-color-picker-button-icon-color-focus: defines the icon color of the button when in a focus state in the component.
 * @prop --calcite-color-picker-button-icon-color-hover: defines the icon color of the button when in a hover state in the component.
 * @prop --calcite-color-picker-button-text-color-active: defines the text color of the button when in a active state in the component.
 * @prop --calcite-color-picker-button-text-color-focus: defines the text color of the button when in a focus state in the component.
 * @prop --calcite-color-picker-button-text-color-hover: defines the text color of the button when in a hover state in the component.
 * @prop --calcite-color-picker-button-text-color: defines the text color of the button in the component.
 * @prop --calcite-color-picker-input-background-color: defines the background color of the input in the component.
 * @prop --calcite-color-picker-input-background-color-hover: defines the background color of the input when in a hover state in the component.
 * @prop --calcite-color-picker-input-border-color: defines the border color of the input in the component.
 * @prop --calcite-color-picker-input-corner-radius: defines the corner radius of the input in the component.
 * @prop --calcite-color-picker-input-prefix-background-color: defines the background color of the prefix sub-component.
 * @prop --calcite-color-picker-input-prefix-text-color: defines the text color of the prefix sub-component.
 * @prop --calcite-color-picker-input-suffix-background-color: defines the background color of the suffix sub-component.
 * @prop --calcite-color-picker-input-suffix-text-color: defines the text color of the suffix sub-component.
 * @prop --calcite-color-picker-input-text-color: defines the text color of the input in the component.
 * @prop --calcite-color-picker-tab-nav-indicator-color: Specifies the color of the active tab indicator.
 * @prop --calcite-color-picker-tab-title-background-color: Specifies the background color of the sub-component.
 * @prop --calcite-color-picker-tab-title-text-color: Specifies the text color of the sub-component.
 * @prop --calcite-color-picker-tabs-background-color: The background color of the sub-component.
 * @prop --calcite-color-picker-tabs-border-color: The border color of the sub-component.
 * @prop --calcite-color-picker-text-color: Specifies the background color of the component.
 */

:host {
  @apply text-n2h inline-block font-normal;
}

@include disabled();

:host([scale="s"]) {
  --calcite-internal-color-picker-space: 8px;

  .container {
    inline-size: 160px;
  }

  .saved-colors {
    @apply gap-1;
    grid-template-columns: repeat(auto-fill, 20px);
  }
}

:host([scale="m"]) {
  --calcite-internal-color-picker-space: 12px;

  .container {
    inline-size: 272px;
  }
}

:host([scale="l"]) {
  --calcite-internal-color-picker-space: 16px;

  @apply text-n1h;

  .container {
    inline-size: 464px;
  }

  .section {
    &:first-of-type {
      padding-block-start: var(--calcite-internal-color-picker-space);
    }
  }

  .saved-colors {
    grid-template-columns: repeat(auto-fill, 32px);
  }

  .control-section {
    @apply flex-nowrap items-baseline;
  }

  .control-section {
    @apply flex-wrap;
  }

  .color-hex-options {
    @apply flex
      flex-shrink
      flex-col
      justify-around;
  }

  .color-mode-container {
    flex-shrink: 3;
  }
}

.container {
  background-color: var(--calcite-color-picker-background-color, var(--calcite-color-foreground-1));
  border: 1px solid var(--calcite-color-border-1);
  display: inline-block;
}

.control-and-scope {
  @apply flex relative cursor-pointer touch-none;
}

.scope {
  @apply text-n1
    focus-base
    absolute
    z-default
    rounded-full
    bg-transparent
    w-px
    h-px
    pointer-events-none;
  &:focus {
    @apply focus-outset;
    outline-offset: 6px;
  }
}

.hex-and-channels-group {
  @apply w-full;
}

.hex-and-channels-group,
.control-section {
  @apply flex flex-row flex-wrap;
}

.section {
  padding-block: 0 var(--calcite-internal-color-picker-space);
  padding-inline: var(--calcite-internal-color-picker-space);

  &:first-of-type {
    padding-block-start: var(--calcite-internal-color-picker-space);
  }
}

.sliders {
  @apply flex flex-col justify-between;
  margin-inline-start: var(--calcite-internal-color-picker-space);
  gap: var(--calcite-spacing-xxs);
}

.preview-and-sliders {
  @apply flex items-center;
  padding: var(--calcite-internal-color-picker-space);
}

.color-hex-options,
.section--split {
  flex-grow: 1;
}

.header {
  @apply flex
    items-center
    justify-between;

  color: var(--calcite-color-picker-text-color, var(--calcite-color-text-1));
}

.color-mode-container {
  padding-block-start: var(--calcite-internal-color-picker-space);
}

.channels {
  @apply flex gap-y-0.5;
}

.channel {
  &[data-channel-index="3"] {
    inline-size: 159px;
  }
}

:host([scale="s"]) {
  .channels {
    @apply flex-wrap;
  }

  .channel {
    flex-basis: 30%;
    flex-grow: 1;

    &[data-channel-index="3"] {
      inline-size: unset;
      margin-inline-start: unset;
    }
  }
}

:host([scale="l"]) {
  .channel {
    &[data-channel-index="3"] {
      inline-size: 131px;
    }
  }
}

.saved-colors {
  @apply grid gap-2;
  padding-block-start: var(--calcite-internal-color-picker-space);
  grid-template-columns: repeat(auto-fill, 24px);
}

.saved-colors-buttons {
  display: flex;
}

.saved-color {
  @include focus-style-base();

  cursor: pointer;

  &:focus {
    @include focus-style-outset();
  }

  &:hover {
    transition: outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;
    outline: 2px solid var(--calcite-color-border-2);
    outline-offset: 2px;
  }
}

calcite-button {
  --calcite-button-corner-radius: var(--calcite-color-picker-button-corner-radius);
  --calcite-button-text-color: var(--calcite-color-picker-button-text-color);
  --calcite-button-background-color: var(--calcite-color-picker-button-background-color);
  --calcite-button-icon-color: var(--calcite-color-picker-button-icon-color-hover);

  &:hover {
    --calcite-button-text-color: var(--calcite-color-picker-button-text-color-hover);
    --calcite-button-background-color: var(--calcite-color-picker-button-background-color-hover);
    --calcite-button-icon-color: var(--calcite-color-picker-button-icon-color-hover);
  }
  &:focus {
    --calcite-button-text-color: var(--calcite-color-picker-button-text-color-focus);
    --calcite-button-background-color: var(--calcite-color-picker-button-background-color-focus);
    --calcite-button-icon-color: var(--calcite-color-picker-button-icon-color-focus);
  }
  &:active {
    --calcite-button-text-color: var(--calcite-color-picker-button-text-color-active);
    --calcite-button-background-color: var(--calcite-color-picker-button-background-color-active);
    --calcite-button-icon-color: var(--calcite-color-picker-button-icon-color-active);
  }
}

calcite-color-picker-hex-input {
  --calcite-color-picker-hex-input-prefix-background-color: var(--calcite-color-picker-input-prefix-background-color);
  --calcite-color-picker-hex-input-prefix-text-color: var(--calcite-color-picker-input-prefix-text-color);
  --calcite-color-picker-hex-input-suffix-background-color: var(--calcite-color-picker-input-suffix-background-color);
  --calcite-color-picker-hex-input-suffix-text-color: var(--calcite-color-picker-input-suffix-text-color);
  --calcite-color-picker-hex-input-background-color: var(--calcite-color-picker-input-background-color);
  --calcite-color-picker-hex-input-border-color: var(--calcite-color-picker-input-border-color);
  --calcite-color-picker-hex-input-corner-radius: var(--calcite-color-picker-input-corner-radius);
  --calcite-color-picker-hex-input-text-color: var(--calcite-color-picker-input-text-color);
}

calcite-input-number {
  --calcite-input-background-color: var(--calcite-color-picker-input-background-color);
  --calcite-input-border-color: var(--calcite-color-picker-input-border-color);
  --calcite-input-text-color: var(--calcite-color-picker-input-text-color);
  --calcite-input-suffix-background-color: var(--calcite-color-picker-input-suffix-background-color);
  --calcite-input-suffix-text-color: var(--calcite-color-picker-input-suffix-background-color);
  --calcite-input-corner-radius: var(--calcite-color-picker-input-corner-radius);
}

calcite-tabs {
  --calcite-tabs-background-color: var(--calcite-color-picker-tabs-background-color);
  --calcite-tabs-border-color: var(--calcite-color-picker-tabs-border-color);
}

calcite-tab-nav {
  --calcite-tab-nav-indicator-color: var(--calcite-color-picker-tab-nav-indicator-color);
}

calcite-tab-title {
  --calcite-tab-title-background-color: var(--calcite-color-picker-tab-title-background-color);
  --calcite-tab-title-text-color: var(--calcite-color-picker-tab-title-text-color);
}

@include base-component();
