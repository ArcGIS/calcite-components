/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-combobox-input-height: [Deprecated] Specifies the height of the component's input.
 * @prop --calcite-combobox-border-color: defines the border color of the component
 * @prop --calcite-combobox-background-color: defines the background color of the component
 * @prop --calcite-combobox-text-color: defines the text color of the component
 * @prop --calcite-combobox-chip-background-color-active: defines the background color of a chip sub-component when active
 */

/*
 * Internal
  --calcite-internal-combobox-space-large
  --calcite-internal-combobox-space-small
  --calcite-internal-combobox-height
  --calcite-internal-combobox-space-y
 */

:host {
  @apply relative block;
}

@include disabled();
@include xButton();

:host([scale="s"]) {
  @apply text-n2;
  --calcite-internal-combobox-space-large: theme("spacing.2");
  --calcite-internal-combobox-space-small: theme("spacing.1");
  --calcite-internal-combobox-height: theme("spacing.4");
  --calcite-internal-combobox-space-y: calc(theme("spacing.1") - theme("borderWidth.DEFAULT"));
}

:host([scale="m"]) {
  @apply text-n1;
  --calcite-internal-combobox-space-large: theme("spacing.3");
  --calcite-internal-combobox-space-small: theme("spacing.2");
  --calcite-internal-combobox-height: theme("spacing.4");
  --calcite-internal-combobox-space-y: calc(theme("spacing.2") - theme("borderWidth.DEFAULT"));
}

:host([scale="l"]) {
  @apply text-0;
  --calcite-internal-combobox-space-large: theme("spacing.4");
  --calcite-internal-combobox-space-small: theme("spacing.3");
  --calcite-internal-combobox-height: theme("spacing.6");
  --calcite-internal-combobox-space-y: calc(theme("spacing[2.5]") - theme("borderWidth.DEFAULT"));
}

.wrapper {
  @apply focus-base
    flex
    border
    border-solid;
  border-color: var(--calcite-combobox-border-color, var(--calcite-color-border-input));
  background-color: var(--calcite-combobox-background-color, var(--calcite-color-foreground-1));
  color: var(--calcite-combobox-text-color, var(--calcite-color-text-1));
  padding-block: calc(var(--calcite-internal-combobox-space-small) / 4);
  padding-inline: var(--calcite-internal-combobox-space-large);
}

:host(:focus-within) .wrapper,
.wrapper--active {
  @apply focus-inset;
}

:host([status="invalid"]) .wrapper {
  border-color: var(--calcite-combobox-border-color, var(--calcite-color-status-danger));
}

:host([status="invalid"]:focus-within) .wrapper {
  @apply focus-inset-danger;
}

.x-button {
  margin-inline-end: var(--calcite-internal-combobox-space-large);
}

.wrapper--single {
  padding-block: 0;
  padding-inline: var(--calcite-internal-combobox-space-large);
  @apply cursor-pointer flex-nowrap;
}

.grid-input {
  @apply flex
    flex-grow
    flex-wrap
    items-center
    relative
    truncate
    p-0;

  gap: var(--calcite-internal-combobox-space-small);

  &.selection-display-fit,
  &.selection-display-single {
    @apply flex-nowrap overflow-hidden;
  }
}

.input {
  @apply appearance-none
  border-none
  flex-grow
  font-inherit
  text-ellipsis
  overflow-hidden
  p-0;
  background-color: var(--calcite-color-transparent);
  color: var(--calcite-combobox-text-color, var(--calcite-color-text-1));
  font-size: inherit;
  block-size: var(--calcite-internal-combobox-height);
  line-height: var(--calcite-internal-combobox-height);
  inline-size: 100%;
  margin-block-end: var(--calcite-internal-combobox-space-small);
  min-inline-size: 4.8125rem;
  &:focus {
    @apply outline-none;
  }

  &:placeholder-shown {
    @apply text-ellipsis;
  }
}

.input--transparent {
  @apply opacity-0;
}

.input--single {
  @apply p-0;
  margin-block: var(--calcite-internal-combobox-space-y);
}

.wrapper--active .input-single {
  @apply cursor-text;
}

.input--hidden {
  @apply pointer-events-none
  w-0
  min-w-0
  opacity-0;
}

.input--icon {
  padding-block: 0;
  padding-inline: var(--calcite-internal-combobox-space-large);
}

.input-wrap {
  @apply flex flex-grow items-center;
}

.input-wrap--single {
  @apply flex-1 overflow-hidden;
}

.label {
  @apply pointer-events-none
    max-w-full
    flex-auto
    truncate
    p-0
    font-normal;
  block-size: var(--calcite-internal-combobox-height);
  line-height: var(--calcite-internal-combobox-height);
}

.label--icon {
  padding-inline: var(--calcite-internal-combobox-space-large);
}

.icon-end,
.icon-start {
  @apply flex cursor-pointer items-center;
}

.icon-end {
  @apply flex-none;
}

.floating-ui-container {
  @include floatingUIContainer("var(--calcite-z-index-dropdown)");
  @include floatingUIWrapper();
}

@include floatingUIElemAnim(".floating-ui-container");

.floating-ui-container--active {
  @include floatingUIWrapperActive();
}

@media (forced-colors: active) {
  .wrapper,
  .floating-ui-container--active {
    border: 1px solid canvasText;
  }
}

.screen-readers-only {
  @apply sr-only;
}

.list-container {
  @apply max-h-menu
    overflow-y-auto;
  background-color: var(--calcite-combobox-background-color, var(--calcite-color-foreground-1));
  inline-size: var(--calcite-dropdown-width);
}

.list {
  @apply m-0 block p-0;
}

.list--hide {
  @apply h-0 overflow-hidden;
}

calcite-chip {
  --calcite-animation-timing: 0;
}

.chip {
  margin-block: calc(var(--calcite-internal-combobox-space-small) / 4);
  max-inline-size: 100%;
}

.chip--active {
  background-color: var(--calcite-combobox-chip-background-color-active, var(--calcite-color-foreground-3));
}

.chip--invisible {
  @apply absolute invisible;
}

.item {
  @apply block;
}

@include form-validation-message();
@include hidden-form-input();
@include base-component();

::slotted(calcite-combobox-item-group:not(:first-child)) {
  padding-block-start: var(--calcite-internal-combobox-space-large);
}
