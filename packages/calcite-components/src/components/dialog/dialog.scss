/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-dialog-scrim-background: Specifies the background color of the component's scrim.
 * @prop --calcite-dialog-width: Specifies the width of the component, using `px`, `em`, `rem`, `vw`, or `%`. Will never exceed the width of the viewport. Will not apply if `fullscreen` if set.
 * @prop --calcite-dialog-height: Specifies the height of the component, using `px`, `em`, `rem`, `vh`, or `%`. Will never exceed the height of the viewport. Will not apply if `fullscreen` if set.
 * @prop --calcite-dialog-panel-footer-padding: Specifies the padding of the component's footer.
 * @prop --calcite-dialog-panel-header-border-block-end: Specifies the component header's block end border.
 */

:host {
  --calcite-dialog-scrim-background: #{rgba($calcite-color-neutral-blk-240, $calcite-opacity-85)};
  @apply flex inset-0 opacity-0 z-overlay;
  visibility: hidden !important;
  transition:
    visibility 0ms linear var(--calcite-internal-animation-timing-slow),
    opacity var(--calcite-internal-animation-timing-slow) $easing-function;
  // the dialog should always use a dark scrim, regardless of light / dark mode - matches value in global.scss
  --calcite-dialog-scrim-background-internal: #{rgba($calcite-color-neutral-blk-240, $calcite-opacity-85)};
}

:host([modal]) {
  @apply absolute;
}

.container {
  @apply text-color-2
    fixed
    inset-0
    flex
    items-center
    justify-center
    overflow-y-hidden
    opacity-0
    z-overlay;
  visibility: hidden !important;
  transition:
    visibility 0ms linear var(--calcite-internal-animation-timing-slow),
    opacity var(--calcite-internal-animation-timing-slow) $easing-function;
}

:host(:not([modal])) .container {
  @apply pointer-events-none;
}

:host([scale="s"]) {
  --calcite-dialog-padding-internal: theme("spacing.3");
  --calcite-dialog-padding-large-internal: theme("spacing.4");
  --calcite-dialog-title-text-internal: theme("fontSize.1h");
  --calcite-dialog-content-text-internal: theme("fontSize.n1");
}

:host([scale="m"]) {
  --calcite-dialog-padding-internal: theme("spacing.4");
  --calcite-dialog-padding-large-internal: theme("spacing.5");
  --calcite-dialog-title-text-internal: theme("fontSize.2h");
  --calcite-dialog-content-text-internal: theme("fontSize.0");
}

:host([scale="l"]) {
  --calcite-dialog-padding-internal: theme("spacing.5");
  --calcite-dialog-padding-large-internal: theme("spacing.6");
  --calcite-dialog-title-text-internal: theme("fontSize.3h");
  --calcite-dialog-content-text-internal: theme("fontSize.1");
}

.scrim {
  --calcite-scrim-background: var(--calcite-dialog-scrim-background, var(--calcite-color-transparent-scrim));
  @apply fixed inset-0 flex overflow-y-hidden;
}

calcite-panel {
  --calcite-panel-footer-padding: var(--calcite-dialog-panel-footer-padding);
  --calcite-panel-header-border-block-end: var(--calcite-dialog-panel-header-border-block-end);
}

.dialog {
  @apply shadow-2-sm
    bg-foreground-1
    pointer-events-none
    float-none
    m-6
    box-border
    flex
    w-full
    flex-col
    overflow-hidden
    rounded
    opacity-0
    z-modal;
  -webkit-overflow-scrolling: touch;
  visibility: hidden;
  transition:
    transform var(--calcite-internal-animation-timing-slow) $easing-function,
    visibility 0ms linear var(--calcite-internal-animation-timing-slow),
    opacity var(--calcite-internal-animation-timing-slow) $easing-function;

  --calcite-dialog-hidden-position: translate3d(0, 20px, 0);
  --calcite-dialog-shown-position: translate3d(0, 0, 0);

  &--opening {
    &-idle {
      transform: var(--calcite-dialog-hidden-position);
    }
    &-active {
      transform: var(--calcite-dialog-shown-position);
    }
  }

  &--closing {
    &-idle {
      transform: var(--calcite-dialog-shown-position);
    }
    &-active {
      transform: var(--calcite-dialog-hidden-position);
    }
  }
}

:host([opened]) {
  @apply opacity-100;
  visibility: visible !important;
  transition-delay: 0ms;
}

.container--open {
  @apply opacity-100;
  visibility: visible !important;
  transition-delay: 0ms;
  .dialog {
    @apply pointer-events-auto visible opacity-100;
    transition:
      transform var(--calcite-internal-animation-timing-slow) $easing-function,
      visibility 0ms linear,
      opacity var(--calcite-internal-animation-timing-slow) $easing-function,
      max-inline-size var(--calcite-internal-animation-timing-slow) $easing-function,
      max-block-size var(--calcite-internal-animation-timing-slow) $easing-function;
    transition-delay: 0ms;
  }
}

/**
 * Sizes
 */
@mixin dialog-size($size, $width) {
  :host([width-scale="#{$size}"]) .dialog {
    @apply max-h-full max-w-full;
    inline-size: var(--calcite-dialog-width, $width);
    block-size: var(--calcite-dialog-height, auto);
  }

  @media screen and (max-width: $width + 2 * $baseline) {
    :host([width-scale="#{$size}"]) {
      .dialog {
        @apply m-0 h-full max-h-full w-full max-w-full;
      }
    }
    :host([width-scale="#{$size}"][docked]) .container {
      align-items: flex-end;
    }
  }
}

:host([width="small"]) .dialog {
  @apply w-auto;
}

@include dialog-size("s", 32rem);
@include dialog-size("m", 48rem);
@include dialog-size("l", 94rem);

/**
 * Fullscreen
 */
:host([fullscreen]) {
  .dialog {
    @apply m-0 max-h-full max-w-full h-full w-full rounded-none;
    --calcite-dialog-hidden-position: translate3D(0, 20px, 0) scale(0.95);
    --calcite-dialog-shown-position: translate3D(0, 0, 0) scale(1);
  }
}

/**
 * Kinds
 */
:host([kind="brand"]) .dialog {
  @apply border-color-brand;
}

:host([kind="danger"]) .dialog {
  @apply border-color-danger;
}

:host([kind="info"]) .dialog {
  @apply border-color-info;
}

:host([kind="success"]) .dialog {
  @apply border-color-success;
}

:host([kind="warning"]) .dialog {
  @apply border-color-warning;
}

:host([kind="brand"]),
:host([kind="danger"]),
:host([kind="info"]),
:host([kind="success"]),
:host([kind="warning"]) {
  .dialog {
    @apply border-0 border-t-4 border-solid;
  }
}

.container.slotted-in-shell {
  position: absolute;
  pointer-events: auto;
  calcite-scrim {
    position: absolute;
  }
}

@include base-component();
