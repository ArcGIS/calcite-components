/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-dropdown-accent-color: Specifies the accent color of the component.
 * @prop --calcite-dropdown-background-color-active: Specifies the background color of the component when active.
 * @prop --calcite-dropdown-background-color-hover: Specifies the background color of the component when hovered.
 * @prop --calcite-dropdown-text-color-active: Specifies the text color of the component when active.
 * @prop --calcite-dropdown-text-color: Specifies the text color of the component.
 */

@mixin item-styling {
  @apply relative
    flex
    flex-grow
    cursor-pointer
    items-center
    no-underline
    duration-150
    ease-in-out;
  color: var(--calcite-dropdown-text-color, theme("textColor.color.3"));
}

:host {
  @apply relative
    flex
    flex-grow
    items-center
    focus-base;
}

.container {
  @include item-styling;
  @apply text-start;

  & a {
    @include item-styling;
    @apply focus-base;
  }
}

.dropdown-item-content {
  @apply flex-auto py-0.5;
}

// item icon
.dropdown-item-icon {
  @apply relative
    opacity-0
    duration-150
    ease-in-out;
  transform: scale(0.9);
}

:host([scale="s"]) {
  .container {
    @apply text-n2h py-1 px-2;
  }

  .dropdown-item-icon,
  .dropdown-item-icon--start {
    padding-inline-end: var(--calcite-spacing-sm);
  }

  .dropdown-item-icon--end {
    padding-inline-start: var(--calcite-spacing-sm);
  }
}

:host([scale="m"]) {
  .container {
    @apply text-n1h py-2 px-3;
  }

  .dropdown-item-icon,
  .dropdown-item-icon--start {
    padding-inline-end: var(--calcite-spacing-md);
  }

  .dropdown-item-icon--end {
    padding-inline-start: var(--calcite-spacing-md);
  }
}

:host([scale="l"]) {
  .container {
    @apply text-0h py-2.5 px-4;
  }

  .dropdown-item-icon,
  .dropdown-item-icon--start {
    padding-inline-end: var(--calcite-spacing-xl);
  }

  .dropdown-item-icon--end {
    padding-inline-start: var(--calcite-spacing-xl);
  }
}

//focus
:host(:focus) {
  @apply focus-inset outline-none;

  .container {
    @apply no-underline;
    color: var(--calcite-dropdown-text-color-active, var(--calcite-text-color-1));
  }
}

:host(:hover:not([disabled])),
:host(:active:not([disabled])) {
  .container {
    @apply no-underline;
    color: var(--calcite-dropdown-text-color-active, var(--calcite-text-color-1));
  }

  .dropdown-link {
    color: var(--calcite-dropdown-text-color-active, var(--calcite-text-color-1));
  }
}

:host(:hover:not([disabled])) .container {
  background-color: var(--calcite-dropdown-background-color-hover, var(--calcite-color-foreground-2));
}

:host(:active:not([disabled])) .container {
  background-color: var(--calcite-dropdown-background-color-active, var(--calcite-color-foreground-3));
}

:host([selected]) .container:not(.container--none-selection),
:host([selected]) .dropdown-link {
  @apply font-medium;
  color: var(--calcite-dropdown-text-color-active, var(--calcite-text-color-1));

  calcite-icon {
    color: var(--calcite-dropdown-accent-color, theme("backgroundColor.brand"));
  }
}

:host(:hover:not([disabled])) .dropdown-item-icon {
  @apply opacity-100;
  color: theme("borderColor.color.1");
}

:host([selected]) .dropdown-item-icon {
  @apply opacity-100;
  color: var(--calcite-dropdown-accent-color, theme("backgroundColor.brand"));
}

@include base-component();
@include disabled();
