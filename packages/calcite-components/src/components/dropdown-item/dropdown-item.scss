/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-dropdown-item-background-color: Specifies the background color of the component.
 * @prop --calcite-dropdown-item-icon-color: Specifies the color of an icon in the component.
 * @prop --calcite-dropdown-item-indicator-color: Specifies the color of the indicator dot on the component.
 * @prop --calcite-dropdown-item-text-color: Specifies the text color of the component.
 *
 */

@mixin itemStyling {
  @apply relative
    flex
    flex-grow
    cursor-pointer
    items-center
    no-underline
    duration-150
    ease-in-out;
  color: var(--calcite-dropdown-item-text-color, (--calcite-color-text-3));
  background-color: var(--calcite-dropdown-item-background-color, none);
}

:host {
  @apply relative
    flex
    flex-grow
    items-center
    focus-base;
}

.container {
  @include itemStyling;
  @apply text-start;

  & a {
    @include itemStyling;
    @apply focus-base;
  }
}

.dropdown-item-content {
  @apply flex-auto py-0.5;
}

// item icon
.dropdown-item-icon {
  @apply relative
    opacity-0
    duration-150
    ease-in-out;
  transform: scale(0.9);
}

:host([scale="s"]) {
  .container {
    @apply text-n2h py-1 px-2;
  }

  .dropdown-item-icon,
  .dropdown-item-icon--start {
    padding-inline-end: var(--calcite-spacing-sm);
  }

  .dropdown-item-icon--end {
    padding-inline-start: var(--calcite-spacing-sm);
  }
}

:host([scale="m"]) {
  .container {
    @apply text-n1h py-2 px-3;
  }

  .dropdown-item-icon,
  .dropdown-item-icon--start {
    padding-inline-end: var(--calcite-spacing-md);
  }

  .dropdown-item-icon--end {
    padding-inline-start: var(--calcite-spacing-md);
  }
}

:host([scale="l"]) {
  .container {
    @apply text-0h py-2.5 px-4;
  }

  .dropdown-item-icon,
  .dropdown-item-icon--start {
    padding-inline-end: var(--calcite-spacing-xl);
  }

  .dropdown-item-icon--end {
    padding-inline-start: var(--calcite-spacing-xl);
  }
}

//focus
:host(:focus) {
  @apply focus-inset outline-none;

  .container {
    @apply no-underline;
    color: var(--calcite-dropdown-item-text-color, var(--calcite-color-text-1));
  }
}

:host(:hover:not([disabled])),
:host(:active:not([disabled])) {
  .container {
    @apply no-underline;
    background-color: var(--calcite-dropdown-item-background-color, var(--calcite-color-foreground-2));
    color: var(--calcite-dropdown-item-text-color, var(--calcite-color-text-1));
  }

  .dropdown-link {
    color: var(--calcite-dropdown-item-text-color, var(--calcite-color-text-1));
  }
}

:host(:active:not([disabled])) .container {
  background-color: var(--calcite-dropdown-item-background-color, var(--calcite-color-foreground-3));
}

:host([selected]) .container:not(.container--none-selection),
:host([selected]) .dropdown-link {
  @apply font-medium;
  color: var(--calcite-dropdown-item-text-color, var(--calcite-color-text-1));
  & calcite-icon {
    color: var(--calcite-dropdown-item-icon-color, theme("backgroundColor.brand"));
  }
}

:host(:hover:not([disabled])) .dropdown-item-icon {
  color: var(--calcite-dropdown-item-indicator-color, theme("borderColor.color.1"));
  @apply opacity-100;
}

:host([selected]) .dropdown-item-icon {
  color: var(--calcite-dropdown-item-indicator-color, theme("backgroundColor.brand"));
  @apply opacity-100;
}

@include base-component();
@include disabled();
