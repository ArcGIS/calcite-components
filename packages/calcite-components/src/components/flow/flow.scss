/**
 * CSS Custom Properties
 *
 * These properties can be overridden
 *
 * @prop --calcite-flow-animation-timing: Specifies the animation timing for the flow.
 * @prop --calcite-flow-animation-opacity-start: Specifies the animation starting opacity for the flow.
 * @prop --calcite-flow-animation-opacity-end: Specifies the animation ending opacity for the flow.
 * @prop --calcite-flow-animation-advance: Specifies the advancing animation for the flow.
 * @prop --calcite-flow-animation-retreat: Specifies the retreating animation for the flow.
 */

:host {
  @include base-host();
  position: relative;
  display: flex;
  inline-size: 100%;
  flex: 1 1 auto;
  align-items: stretch;
  overflow: hidden;

  --calcite-flow-animation-opacity-start: var(--calcite-opacity-50);
  --calcite-flow-animation-opacity-end: var(--calcite-opacity-100);
  --calcite-flow-animation-timing: var(--calcite-animation-timing);
  --calcite-flow-animation-advance: calcite-frame-advance var(--calcite-flow-animation-timing);
  --calcite-flow-animation-retreat: calcite-frame-retreat var(--calcite-flow-animation-timing);

  .frame {
    position: relative;
    display: flex;
    margin: 0;
    inline-size: 100%;
    flex: 1 1 auto;
    flex-direction: column;
    align-items: stretch;
    padding: 0;
  }

  ::slotted(calcite-flow-item),
  ::slotted(calcite-panel) {
    block-size: 100%;
  }

  ::slotted(.calcite-match-height:last-child) {
    display: flex;
    flex: 1 1 auto;
    overflow: hidden;
  }

  .frame--advancing {
    animation: var(--calcite-flow-animation-advance);
  }

  .frame--retreating {
    animation: var(--calcite-flow-animation-retreat);
  }

  @keyframes calcite-frame-advance {
    0% {
      opacity: var(--calcite-flow-animation-opacity-start);
      transform: translate3d(50px, 0, 0);
    }
    100% {
      opacity: var(--calcite-flow-animation-opacity-end);
      transform: translate3d(0, 0, 0);
    }
  }

  @keyframes calcite-frame-retreat {
    0% {
      opacity: var(--calcite-flow-animation-opacity-start);
      transform: translate3d(-50px, 0, 0);
    }
    100% {
      opacity: var(--calcite-flow-animation-opacity-end);
      transform: translate3d(0, 0, 0);
    }
  }
}

@include base-component();
