/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-list-item-background-color: Specifies the background color of the component.
 * @prop --calcite-list-item-border-color: Specifies the border color of the component.
 * @prop --calcite-list-item-content-text-color: Specifies the text color of the component's content.
 * @prop --calcite-list-item-description-text-color: Specifies the text color of the component's description.
 * @prop --calcite-list-item-focus: Specifies the focus of the component.
 * @prop --calcite-list-item-handle-background-color: Specifies the background color of the component's handle.
 * @prop --calcite-list-item-handle-text-color: Specifies the text color of the component's handle.
 * @prop --calcite-list-item-icon-color: Specifies the color of the component's icon.
 * @prop --calcite-list-item-label-text-color: Specifies the text color of the component's label.
 */

:host {
  display: flex;
  flex-direction: column;
}

:host([filter-hidden]) {
  display: none;
}

@include disabled();

.container {
  background-color: var(--calcite-list-item-background-color, var(-calcite-color-foreground-1));
  box-sizing: border-box;
  display: flex;
  flex: 1 1 0%;
  font-family: var(--calcite-sans-family);

  * {
    box-sizing: border-box;
  }

  padding-inline-start: calc(
    var(--calcite-internal-list-item-spacing-indent, var(--calcite-spacing-xl)) *
      var(--calcite-internal-list-item-spacing-indent-multiplier)
  );
}

.container:active {
  background-color: var(--calcite-list-item-background-color, var(-calcite-color-foreground-1));
}

.container:hover {
  background-color: var(--calcite-list-item-background-color, var(--calcite-color-foreground-2));
  cursor: pointer;
}

.container--border {
  border-inline-start-width: var(--calcite-border-width-lg);
  border-inline-start-style: solid;
}

.container--border-selected {
  border-inline-start-color: var(--calcite-list-item-border-color, var(--calcite-color-brand));
}

.container--border-unselected {
  border-inline-start-color: transparent;
}

.container:hover {
  &.container--border-unselected {
    border-color: var(--calcite-color-border-1);
  }
}

.nested-container {
  background-color: var(--calcite-list-item-background-color, var(-calcite-color-foreground-1));
  display: flex;
  flex-direction: column;
}

.nested-container--hidden {
  display: none;
}

.content-container {
  color: var(--calcite-list-item-content-text-color, var(--calcite-color-text-2));
  user-select: none;
  display: flex;
  flex: 1 1 auto;
  font-family: var(--calcite-sans-family);
  font-weight: var(--calcite-font-weight-normal);
  align-items: stretch;
  padding: 0;
}

.content,
.custom-content {
  font-size: var(--calcite-font-size--2);
  line-height: 1.375;
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;
  justify-content: center;
  padding-inline: var(--calcite-spacing-md);
  padding-block: var(--calcite-spacing-sm);
}

.label {
  color: var(--calcite-list-item-label-text-color, var(--calcite-color-text-1));
}

.description {
  color: var(--calcite-list-item-description-text-color, var(--calcite-color-text-3));
  margin-block-start: var(--calcite-spacing-base);
}

.content-bottom {
  background-color: var(--calcite-list-item-background-color, var(-calcite-color-foreground-1));
  display: flex;
  flex-direction: column;
  padding-inline-start: calc(
    var(--calcite-internal-list-item-spacing-indent, var(--calcite-spacing-xl)) *
      var(--calcite-internal-list-item-spacing-indent-multiplier)
  );
}

.label,
.description,
.content-bottom {
  font-size: var(--calcite-font-size--2);
  @include word-break();
  font-family: var(--calcite-sans-family);
  font-weight: var(--calcite-font-weight-normal);

  &:only-child {
    margin: 0;
    padding-block: var(--calcite-spacing-xxs);
  }
}

:host([selected]) .label {
  font-weight: var(--calcite-font-weight-medium);
  color: var(--calcite-list-item-label-text-color, var(--calcite-color-text-1));
}

:host([selected]) .description {
  color: var(--calcite-list-item-description-text-color, var(--calcite-color-text-2));
}

.content-start {
  justify-content: flex-start;
}

.content-end {
  justify-content: flex-end;
}

.content-start,
.content-end {
  flex: 1 1 auto;
  ::slotted(calcite-icon) {
    align-self: center;
    margin-inline: var(--calcite-spacing-md);
  }
}

.content-container--has-center-content .content-start,
.content-container--has-center-content .content-end {
  flex: 0 1 auto;
}

.selection-container {
  display: flex;
  padding-inline: var(--calcite-spacing-md);
  color: var(--calcite-list-item-icon-color, var(--calcite-color-border-input));
}

.selection-container--single {
  color: transparent;
}

:host(:not([disabled]):not([selected])) .container:hover .selection-container--single {
  color: var(--calcite-list-item-icon-color, var(--calcite-color-border-1));
}

:host([selected]) .container:hover .selection-container,
:host([selected]) .container:hover .selection-container--single,
:host([selected]) .selection-container {
  color: var(--calcite-list-item-icon-color, var(--calcite-color-brand));
}

.open-container {
  color: var(--calcite-list-item-icon-color, var(--calcite-color-text-3));
}

.container,
.actions-start,
.actions-end,
.content-container,
.drag-container {
  outline-color: transparent;

  &:focus {
    @include focusInset("--calcite-list-item-focus", "--calcite-internal-list-item-focus-offset");
  }
}

.actions-start,
.actions-end,
.content-start,
.content-end,
.selection-container,
.drag-container,
.open-container {
  display: flex;
  align-items: center;
}

:host(:not([disabled])) .container:hover .open-container {
  color: var(--calcite-list-item-icon-color, var(--calcite-color-text-1));
}

.open-container,
.selection-container {
  cursor: pointer;
}

.actions-start,
.actions-end {
  ::slotted(calcite-action),
  ::slotted(calcite-action-menu),
  ::slotted(calcite-handle),
  ::slotted(calcite-dropdown) {
    align-self: stretch;
    color: inherit;
  }
}

::slotted(calcite-list-item),
::slotted(calcite-list) {
  border-style: solid;
  border-width: 0px;
  border-block-start-width: var(--calcite-border-width-sm);
  border-color: var(--calcite-list-item-border-color, var(--calcite-color-border-3));
}

::slotted(calcite-list:empty) {
  padding-block: var(--calcite-spacing-md);
}

calcite-handle {
  --calcite-handle-text-color: var(--calcite-list-item-handle-text-color);
  --calcite-handle-background-color: var(--calcite-list-item-handle-background-color);
}

@include base-component();
