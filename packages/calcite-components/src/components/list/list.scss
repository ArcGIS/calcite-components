/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-list-background-color: Specifies the background color of the component.
 * @prop --calcite-list-border-color: Specifies the border color of the component.
 * @prop --calcite-list-header-z-index: Specifies the component header's z-index.
 */

:host {
  display: block;
  --calcite-list-background-color: var(--calcite-color-foreground-1);
  --calcite-list-border-color: var(--calcite-list-border-color);
  --calcite-list-header-z-index: var(--calcite-z-index-sticky);
}

@include disabled();

.container {
  position: relative;
}

.table-container {
  box-sizing: border-box;
  display: flex;
  inline-size: var(--calcite-container-size-content-fluid);
  flex-direction: column;
  background-color: var(--calcite-list-background-color);
  * {
    box-sizing: border-box;
  }
}

.table {
  inline-size: var(--calcite-container-size-content-fluid);
  border-collapse: collapse;
}

.stack {
  --calcite-stack-padding-inline: 0;
  --calcite-stack-padding-block: 0;
}

::slotted(calcite-list-item) {
  border-block-start: var(--calcite-border-width-sm) solid var(--calcite-list-border-color);
}

::slotted(calcite-list-item:first-of-type) {
  border: none;
}

// removes shadow for the first item in filteredItems of the list.
::slotted(calcite-list-item[data-filter]) {
  border: none;
}

.sticky-pos {
  position: sticky;
  inset-block-start: 0px;
  z-index: var(--calcite-list-header-z-index);
  background-color: var(--calcite-list-background-color);
}

.table-header {
  padding: 0;
}

.assistive-text {
  @include srOnly();
}

@include base-component();
