/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-scrim-background: [Deprecated] Use the `--calcite-scrim-background-color` property instead. Specifies the background color of the component.
 * @prop --calcite-scrim-background-color: Specifies the background color of the component.
 
 * @prop --calcite-scrim-loader-color-one-third: Specifies the starting color of the loader
 * @prop --calcite-scrim-loader-color-start: Specifies the starting color of the loader
 * @prop --calcite-scrim-loader-color-two-thirds: Specifies the starting color of the loader
 */

:host {
  @apply absolute
  inset-0
  z-overlay
  flex
  h-full
  w-full
  flex-col
  items-stretch;
}

@keyframes calcite-scrim-fade-in {
  0% {
    @apply bg-opacity-0;
  }
  100% {
    @apply text-opacity-100;
  }
}

.scrim {
  @apply absolute
  inset-0
  flex
  flex-col
  content-center
  items-center
  justify-center
  overflow-hidden;
  animation: calcite-scrim-fade-in var(--calcite-internal-animation-timing-medium) ease-in-out;
  background-color: var(
    --calcite-scrim-background-color,
    var(--calcite-scrim-background, var(--calcite-color-transparent-scrim))
  );
}

.content {
  @apply p-4;
}

calcite-loader {
  --calcite-loader-color-middle: var(--calcite-scrim-loader-color-one-third);
  --calcite-loader-color-start: var(--calcite-scrim-loader-color-start);
  --calcite-loader-color-end: var(--calcite-scrim-loader-color-two-thirds);
}

@include base-component();
