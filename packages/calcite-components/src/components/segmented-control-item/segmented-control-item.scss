/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-segmented-control-item-background-color: Specifies the background color of the component.
 * @prop --calcite-segmented-control-item-border-color: Specifies the border color of the component.
 * @prop --calcite-segmented-control-item-focus: Specifies the focus color of the component.
 * @prop --calcite-segmented-control-item-icon-color: Specifies the icon color of the component.
 * @prop --calcite-segmented-control-item-shadow: Specifies the shadow of the component.
 * @prop --calcite-segmented-control-item-text-color: Specifies the text color of the component.
 */

:host {
  display: flex;
  cursor: pointer;
  align-self: stretch;
  font-weight: var(--calcite-font-weight-normal);
  background-color: var(--calcite-segmented-control-item-background-color, transparent);
  transition:
    background-color var(--calcite-internal-animation-timing-fast) ease-in-out,
    border-color var(--calcite-animation-timing) ease-in-out;
  outline-color: transparent;
}

:host label {
  color: var(--calcite-segmented-control-item-text-color, var(--calcite-color-text-3));
  pointer-events: none;
  margin: var(--calcite-spacing-base);
  box-sizing: border-box;
  display: flex;
  flex: 1 1 0%;
  align-items: center;
  transition:
    background-color var(--calcite-internal-animation-timing-fast) ease-in-out,
    border-color var(--calcite-internal-animation-timing-fast) ease-in-out,
    color var(--calcite-internal-animation-timing-fast) ease-in-out;
}

.label--horizontal {
  justify-content: center;
}

:host(:focus) {
  --calcite-internal-segmented-control-item-focus-offset: -1px;
  @include focusInset(
    "--calcite-segmented-control-item-focus",
    "--calcite-internal-segmented-control-item-focus-offset"
  );
}

.label--scale-s {
  font-size: var(--calcite-font-size--2);
  line-height: 1rem;
  padding-inline: var(--calcite-spacing-sm);
  padding-block: var(--calcite-spacing-base);
}

.label--scale-m {
  padding-inline: var(--calcite-spacing-md);
  font-size: var(--calcite-font-size--1);
  line-height: 1rem;
  padding-block: var(--calcite-spacing-xs);
}

.label--scale-l {
  font-size: var(--calcite-font-size-0);
  line-height: 1.25rem;
  padding-inline: var(--calcite-spacing-xl);
  padding-block: #{$calcite-size-10}; // TODO: need new size token for this size
}

:host(:hover) label {
  background-color: var(--calcite-segmented-control-item-background-color, var(--calcite-color-foreground-2));
  color: var(--calcite-segmented-control-item-text-color, var(--calcite-color-text-1));
}

:host(:active) label {
  background-color: var(--calcite-segmented-control-item-background-color, var(--calcite-color-foreground-3));
}

:host([checked]) label {
  background-color: var(--calcite-segmented-control-item-background-color, var(--calcite-color-brand));
  border-color: var(calcite-segmented-control-item-border-color, var(--calcite-color-brand));
  cursor: default;
  color: var(--calcite-segmented-control-item-text-color, var(--calcite-color-text-inverse));
}

:host([checked]) .label--outline,
:host([checked]) .label--outline-fill {
  background-color: var(--calcite-segmented-control-item-background-color, var(--calcite-color-foreground-1));
  border-color: var(calcite-segmented-control-item-border-color, var(--calcite-color-brand));
  color: var(--calcite-segmented-control-item-text-color, var(--calcite-color-brand));
  box-shadow: var(--calcite-segmented-control-item-shadow, inset 0 0 0 1px var(--calcite-color-brand));
}

:host([checked]) .label--outline {
  background-color: transparent;
}

::slotted(input) {
  display: none;
}

@media (forced-colors: active) {
  :host([checked]) label {
    background-color: highlight;
  }
  :host([checked]) .label--outline,
  :host([checked]) .label--outline-fill {
    @include outlineNone();
  }
  :host([checked]) label:not([class~="label--outline"]) .segmented-control-item-icon {
    color: highlightText;
  }
}

// icon
.segmented-control-item-icon {
  position: relative;
  margin: 0px;
  display: inline-flex;
  line-height: inherit;
}

:host([icon-start]) .label--scale-s .segmented-control-item-icon {
  margin-inline-end: var(--calcite-spacing-sm);
}

:host([icon-end]) .label--scale-s .segmented-control-item-icon {
  margin-inline-start: var(--calcite-spacing-sm);
}

:host([icon-start]) .label--scale-m .segmented-control-item-icon {
  margin-inline-end: var(--calcite-spacing-md);
}

:host([icon-end]) .label--scale-m .segmented-control-item-icon {
  margin-inline-start: var(--calcite-spacing-md);
}

:host([icon-start]) .label--scale-l .segmented-control-item-icon {
  margin-inline-end: var(--calcite-spacing-xl);
}

:host([icon-end]) .label--scale-l .segmented-control-item-icon {
  margin-inline-start: var(--calcite-spacing-xl);
}

calcite-icon {
  --calcite-icon-color: var(--calcite-segmented-control-item-icon-color);
}

@include base-component();
