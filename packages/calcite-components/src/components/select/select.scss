/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-select-background-color: The background color of the component.
 * @prop --calcite-select-border-color: The border color of the component.
 * @prop --calcite-select-font-size: [Deprecated] The font size of `calcite-option`s in the component.
 * @prop --calcite-select-spacing: [Deprecated] The padding around the selected option text.
 * @prop --calcite-select-text-color: The text color of the component.
 */

:host {
  @apply flex flex-col;

  inline-size: var(--calcite-internal-select-size);
}

:host([scale="s"]) {
  --calcite-internal-select-icon-space-inline: 0.5rem;
  --calcite-internal-select-line-height: 1rem;
  --calcite-internal-select-spacing-inline: var(--calcite-select-spacing, 0.5rem 2rem);
  --calcite-internal-select-wrapper-size: 1.5rem;

  .select {
    font-size: var(--calcite-select-font-size, var(--calcite-font-size-sm));
  }
}

:host([scale="m"]) {
  --calcite-internal-select-icon-space-inline: 0.75rem;
  --calcite-internal-select-line-height: 1rem;
  --calcite-internal-select-spacing-inline: var(--calcite-select-spacing, 0.75rem 2.5rem);
  --calcite-internal-select-wrapper-size: 2rem;

  .select {
    font-size: var(--calcite-select-font-size, var(--calcite-font-size));
  }
}

:host([scale="l"]) {
  --calcite-internal-select-icon-space-inline: 1rem;
  --calcite-internal-select-line-height: 1.25rem;
  --calcite-internal-select-spacing-inline: var(--calcite-select-spacing, 1rem 3rem);
  --calcite-internal-select-wrapper-size: 2.75rem;

  .select {
    font-size: var(--calcite-select-font-size, var(--calcite-font-size-md));
  }
}

:host([width="auto"]) {
  --calcite-internal-select-size: auto; // TODO: replace w/ design token
}

:host([width="half"]) {
  --calcite-internal-select-size: 50%; // TODO: replace w/ design token
}

:host([width="full"]) {
  --calcite-internal-select-size: var(--calcite-container-size-content-fluid);
}

.wrapper {
  @apply relative flex items-stretch;
  block-size: var(--calcite-internal-select-wrapper-size);
}

.select {
  @apply font-inherit focus-base box-border cursor-pointer appearance-none truncate border-solid;
  background-color: var(--calcite-select-background-color, var(--calcite-color-foreground-1));
  border-width: var(--calcite-border-width-sm);
  padding-inline: var(--calcite-internal-select-spacing-inline);
  border-inline-end-width: var(--calcite-border-width-none);
  inline-size: var(--calcite-container-size-content-fluid);

  &:focus {
    @apply focus-inset;
  }

  // override user agent stylesheet disabled styling
  &:disabled {
    background-color: var(--calcite-opacity-100);
  }
}

:host(:hover) {
  .select {
    background-color: var(--calcite-select-background-color, var(--calcite-color-foreground-2));
  }
}

.select,
.icon-container {
  color: var(--calcite-select-text-color, var(--calcite-color-text-2));
  border-color: var(--calcite-select-border-color, var(--calcite-color-border-input));
}

.icon-container {
  @apply pointer-events-none absolute inset-y-0 flex items-center border-solid;
  background-color: var(--calcite-color-background-none);
  border-width: var(--calcite-border-width-none);
  border-inline-end-width: var(--calcite-border-width-none);
  inset-inline-end: theme("inset.0");
  border-inline-width: var(--calcite-border-width-none) var(--calcite-border-width-sm);
  padding-inline: var(--calcite-internal-select-icon-space-inline);
}

:host([status="invalid"]) {
  .select,
  .icon-container {
    border-color: var(--calcite-select-border-color, var(--calcite-color-status-danger));

    &:focus {
      @apply focus-inset-danger;
    }
  }
}

.select:focus ~ .icon-container {
  border-color: var(--calcite-color-background-none);
}

@include base-component();
@include form-validation-message();
@include hidden-form-input();
@include disabled();
