/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-sheet-scrim-background: Specifies the background color of the sheet scrim.
 *
 */

:host {
  @apply absolute flex inset-0 opacity-0 z-overlay;
  visibility: hidden !important;
  transition: visibility 0ms linear var(--calcite-internal-animation-timing-slow),
    opacity var(--calcite-internal-animation-timing-slow) $easing-function;
  // the sheet should always use a dark scrim, regardless of light / dark mode - matches value in global.scss
  --calcite-sheet-scrim-background-internal: #{rgba($blk-240, 0.85)};
}

.container {
  @apply text-color-2
    fixed
    flex
    overflow-y-hidden
    opacity-0
    z-overlay;
  visibility: hidden !important;
  transition: visibility 0ms linear var(--calcite-internal-animation-timing-slow),
    opacity var(--calcite-internal-animation-timing-slow) $easing-function;
}

:host([position="inline-start"]) .container {
  @apply justify-start;
  inset-block: 0;
  inset-inline: 0 auto;
}

:host([position="inline-end"]) .container {
  @apply justify-end;
  inset-block: 0;
  inset-inline: auto 0;
}

:host([position="block-start"]) .container {
  @apply items-start;
  inset-block: 0 auto;
  inset-inline: 0;
}

:host([position="block-end"]) .container {
  @apply items-end;
  inset-block: auto 0;
  inset-inline: 0;
}

.scrim {
  --calcite-scrim-background: var(--calcite-sheet-scrim-background, var(--calcite-sheet-scrim-background-internal));
  @apply fixed inset-0 flex overflow-y-hidden;
}

:host([open]) {
  @apply opacity-100;
  visibility: visible !important;
  transition-delay: 0ms;
}

.container--open {
  @apply opacity-100;
  visibility: visible !important;
  transition-delay: 0ms;
}

.content {
  @apply relative box-border block overflow-auto p-0 z-modal;
  background-color: theme("colors.background.foreground.1");
  max-block-size: 100%;
}

:host([position="inline-start"]) .content,
:host([position="inline-end"]) .content {
  @apply h-full;
}

:host([position="block-start"]) .content,
:host([position="block-end"]) .content {
  @apply w-full;
}

@include base-component();
