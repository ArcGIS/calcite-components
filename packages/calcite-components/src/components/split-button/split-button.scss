/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-split-button-background-color-active: Specifies the component's background color when the button is active.
 * @prop --calcite-split-button-background-color-focus: Specifies the component's background color when the button is focused.
 * @prop --calcite-split-button-background-color-hover: Specifies the component's background color when the button is hovered.
 * @prop --calcite-split-button-background-color: Specifies the component's background color.
 * @prop --calcite-split-button-border-color-active: Specifies the component's border color when the button is active. 
 * @prop --calcite-split-button-border-color-focus: Specifies the component's border color when the button is focused. 
 * @prop --calcite-split-button-border-color-hover: Specifies the component's border color when the button is hovered. 
 * @prop --calcite-split-button-border-color: Specifies the component's border color. 
 * @prop --calcite-split-button-corner-radius: Specifies the component's corner radius.
 * @prop --calcite-split-button-divider-color: Specifies the component's divider color.
 * @prop --calcite-split-button-dropdown-background-color: Specifies the component's dropdown background color.
 * @prop --calcite-split-button-icon-color-active: Specifies the component's icon color when the button is active.
 * @prop --calcite-split-button-icon-color-focus: Specifies the component's icon color when the button is focused.
 * @prop --calcite-split-button-icon-color-hover: Specifies the component's icon color when the button is hovered.
 * @prop --calcite-split-button-icon-color: Specifies the component's icon color.
 * @prop --calcite-split-button-loader-color: Specifies the component's loader color.
 * @prop --calcite-split-button-shadow-active: Specifies the component's shadow when the button is active. 
 * @prop --calcite-split-button-shadow-focus: Specifies the component's shadow when the button is focused. 
 * @prop --calcite-split-button-shadow-hover: Specifies the component's shadow when the button is hovered. 
 * @prop --calcite-split-button-shadow: Specifies the component's shadow. 
 * @prop --calcite-split-button-text-color-active: Specifies the component's text color when the button is active. 
 * @prop --calcite-split-button-text-color-focus: Specifies the component's text color when the button is focused. 
 * @prop --calcite-split-button-text-color-hover: Specifies the component's text color when the button is hovered. 
 * @prop --calcite-split-button-text-color: Specifies the component's text color. 
 *
*/

:host {
  @apply inline-block;
}

calcite-button {
  --calcite-button-background-color: var(--calcite-split-button-background-color);
  --calcite-button-border-color: var(--calcite-split-button-border-color);
  --calcite-button-corner-radius: var(--calcite-split-button-corner-radius);
  --calcite-button-loader-color: var(--calcite-split-button-loader-color);
  --calcite-button-shadow: var(--calcite-split-button-shadow);
  --calcite-button-text-color: var(--calcite-split-button-text-color);
  --calcite-button-icon-color: var(--calcite-split-button-icon-color);

  &:hover {
    --calcite-button-background-color: var(--calcite-split-button-background-color-hover);
    --calcite-button-border-color: var(--calcite-split-button-border-color-hover);
    --calcite-button-shadow: var(--calcite-split-button-shadow-hover);
    --calcite-button-text-color: var(--calcite-split-button-text-color-hover);
    --calcite-button-icon-color: var(--calcite-split-button-icon-color-hover);
  }
  &:focus {
    --calcite-button-background-color: var(--calcite-split-button-background-color-focus);
    --calcite-button-border-color: var(--calcite-split-button-border-color-focus);
    --calcite-button-shadow: var(--calcite-split-button-shadow-focus);
    --calcite-button-text-color: var(--calcite-split-button-text-color-focus);
    --calcite-button-icon-color: var(--calcite-split-button-icon-color-focus);
  }
  &:active {
    --calcite-button-background-color: var(--calcite-split-button-background-color-active);
    --calcite-button-border-color: var(--calcite-split-button-border-color-active);
    --calcite-button-shadow: var(--calcite-split-button-shadow-active);
    --calcite-button-text-color: var(--calcite-split-button-text-color-active);
    --calcite-button-icon-color: var(--calcite-split-button-icon-color-active);
  }
}

calcite-dropdown {
  --calcite-dropdown-background-color: var(--calcite-split-button-dropdown-background-color);
}

.container {
  @apply flex items-stretch;
  > calcite-dropdown > calcite-button {
    @apply h-full align-top;
  }
}

.divider-container {
  @apply transition-default flex w-px items-stretch;
  background-color: var(
    --calcite-split-button-divider-background-color,
    var(--calcite-internal-split-button-divider-background-color)
  );
}

.divider {
  @apply my-1 inline-block;
  inline-size: var(--calcite-size-px);
  background-color: var(--calcite-split-button-divider-color, var(--calcite-internal-split-button-divider-color));
}

:host([width="auto"]) {
  @apply w-auto;
}

:host([width="half"]) {
  @apply w-2/4;
}

:host([width="full"]) {
  @apply w-full;
}

:host([appearance="solid"]) {
  &:host(:not([kind="neutral"])) {
    .container {
      --calcite-internal-split-button-divider-color: theme("colors.background.foreground.1");
    }
  }
  &:host([kind="brand"]) {
    .container {
      --calcite-internal-split-button-divider-background-color: theme("colors.brand");
    }
  }
  &:host([kind="danger"]) {
    .container {
      --calcite-internal-split-button-divider-background-color: theme("colors.danger");
    }
  }
  &:host([kind="neutral"]) {
    .container {
      --calcite-internal-split-button-divider-background-color: theme("colors.background.foreground.3");
      --calcite-internal-split-button-divider-color: theme("colors.color.1");
    }
  }
  &:host([kind="inverse"]) {
    .container {
      --calcite-internal-split-button-divider-background-color: var(--calcite-color-inverse);
    }
  }
}

:host([appearance="transparent"]),
:host([appearance="outline"]),
:host([appearance="outline-fill"]) {
  &:host([kind="brand"]) {
    .container {
      --calcite-internal-split-button-divider-color: theme("colors.brand");
    }
  }
  &:host([kind="danger"]) {
    .container {
      --calcite-internal-split-button-divider-color: theme("colors.danger");
    }
  }
}

:host([appearance="transparent"]) {
  .container {
    --calcite-internal-split-button-divider-background-color: transparent;
  }

  &:host([kind="inverse"]) {
    .container {
      --calcite-internal-split-button-divider-color: var(--calcite-color-foreground-1);
    }
  }
  &:host([kind="neutral"]) {
    .container {
      --calcite-internal-split-button-divider-color: theme("colors.color.1");
    }
  }
}

:host([appearance="outline"]),
:host([appearance="outline-fill"]) {
  .divider-container {
    background-color: var(--calcite-split-button-divider-color, var(--calcite-internal-split-button-divider-color));
    border-block: var(--calcite-border-width-sm) solid
      var(--calcite-split-button-divider-color, var(--calcite-internal-split-button-divider-color));
  }
  &:hover,
  &:focus-within {
    .divider-container {
      background-color: var(--calcite-split-button-divider-color, var(--calcite-internal-split-button-divider-color));
    }
  }

  &:host([kind="brand"]) {
    &:focus-within {
      .container {
        --calcite-internal-split-button-divider-color: theme("colors.brand-press");
      }
    }
  }
  &:host([kind="danger"]) {
    &:focus-within {
      .container {
        --calcite-internal-split-button-divider-color: theme("colors.danger-press");
      }
    }
  }
  &:host([kind="neutral"]) {
    .container {
      --calcite-internal-split-button-divider-color: theme("borderColor.color.1");
      --calcite-internal-split-button-divider-background-color: theme("borderColor.color.1");
    }
  }
  &:host([kind="inverse"]) {
    .container {
      --calcite-internal-split-button-divider-color: var(--calcite-color-inverse);
    }
  }
}

@include disabled() {
  .divider-container {
    @apply opacity-disabled;
  }

  calcite-dropdown > calcite-button {
    @apply pointer-events-none;
  }
}

@include base-component();

calcite-dropdown {
  --calcite-dropdown-background-color: var(--calcite-split-button-dropdown-background-color);
}
