@import "~@esri/calcite-design-tokens/dist/scss/core";

/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-stepper-action-background-color: defines the background color of an action sub-component inside the component.
 * @prop --calcite-stepper-action-background-color-hover: defines the background color of an action sub-component when hovered or focused.
 * @prop --calcite-stepper-action-background-color-active: defines the background color of an action sub-component when active.
 * @prop --calcite-stepper-step-bar-fill-color : Specifies fill color for step-bar.
 * @prop --calcite-stepper-step-bar-fill-color-hover : Specifies fill color for step-bar when hovered.
 * @prop --calcite-stepper-step-bar-selected-fill-color : Specifies fill color for selected step-bar.
 * @prop --calcite-stepper-step-bar-complete-fill-color : Specifies fill color for completed step-bar.
 * @prop --calcite-stepper-step-bar-completed-fill-color-hover : Specifies fill color for completed step-bar when hovered.
 * @prop --calcite-stepper-step-bar-error-fill-color : Specifies fill color for error step-bar.
 * @prop --calcite-stepper-step-bar-error-fill-color-hover : Specifies fill color for error step-bar when hovered.
 *
 */

:host([scale="s"]) {
  --calcite-internal-stepper-item-space-unit-s: theme("spacing.1");
  --calcite-internal-stepper-action-block-size: theme("spacing.11");
  --calcite-internal-stepper-action-inline-size: theme("spacing.8");
}

:host([scale="m"]) {
  --calcite-internal-stepper-item-space-unit-s: theme("spacing.2");
  --calcite-internal-stepper-action-block-size: theme("spacing.13");
  --calcite-internal-stepper-action-inline-size: theme("spacing.10");
}

:host([scale="l"]) {
  --calcite-internal-stepper-item-space-unit-s: theme("spacing.3");
  --calcite-internal-stepper-action-block-size: theme("spacing.16");
  --calcite-internal-stepper-action-inline-size: theme("spacing.12");
}

:host {
  @apply flex;
}

.container {
  @apply relative
    flex
    min-w-fit
    flex-row
    flex-wrap
    items-stretch
    justify-between;
  inline-size: var(--calcite-container-size-content-fluid);
}

:host([layout="vertical"]) .container {
  @apply flex-auto flex-col;
}

:host([layout="horizontal"]),
:host([layout="horizontal-single"]) {
  .container {
    display: grid;
    // grid-templates-columns are dynamically generated
    // grid-templates-rows are dynamically generated
    grid-template-areas:
      "items"
      "content";
    gap: var(--calcite-internal-stepper-item-space-unit-s);
  }
}

:host([layout="horizontal"]) .container.single-view {
  @apply flex  grid-cols-none;
}

.action-icon {
  @apply flex relative grow-0;
  block-size: var(--calcite-internal-stepper-action-block-size);
  inline-size: var(--calcite-internal-stepper-action-inline-size);
}

.action-container {
  @apply absolute flex justify-between;
  padding-block: var(--calcite-spacing-xxs);
  inline-size: var(--calcite-container-size-content-fluid);
}

@mixin stepBar {
  .step-bar {
    @apply flex;
    block-size: var(--calcite-container-size-content-fluid);
    inline-size: var(--calcite-container-size-content-fluid);
    rect {
      fill: var(--calcite-stepper-step-bar-fill-color, var(--calcite-color-border-3));
      fill-opacity: var(--calcite-opacity-full);
      block-size: var(--calcite-container-size-content-fluid);
    }
  }

  .step-bar-container {
    @apply flex absolute justify-between items-start;
    block-size: var(--calcite-spacing-base);
    inline-size: var(--calcite-container-size-content-fluid);
    gap: var(--calcite-internal-stepper-item-space-unit-s, var(--calcite-spacing-sm));
  }

  rect.step-bar--selected {
    fill: var(--calcite-stepper-step-bar-selected-fill-color, var(--calcite-color-brand));
  }

  rect.step-bar--complete {
    fill: var(--calcite-stepper-step-bar-complete-fill-color, var(--calcite-color-brand));
    fill-opacity: var(--calcite-opacity-half);
  }

  rect.step-bar--error {
    fill: var(--calcite-stepper-step-bar-error-fill-color, var(--calcite-color-status-danger));
  }

  rect.step-bar--disabled {
    opacity: var(--calcite-opacity-half);
  }
}

calcite-action {
  --calcite-action-background-color: var(--calcite-stepper-action-background-color);
  &:hover,
  &:focus {
    --calcite-action-background-color: var(--calcite-stepper-action-background-color-hover);
  }

  &:active {
    --calcite-action-background-color: var(--calcite-stepper-action-background-color-active);
  }
}

@include stepBar();
@include base-component();
