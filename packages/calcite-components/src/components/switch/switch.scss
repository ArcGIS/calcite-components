/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-switch-corner-radius: Specifies the corner radius of the component.
 * @prop --calcite-switch-handle-background-color: Specifies the background color of the component handle.
 * @prop --calcite-switch-handle-border-color: Specifies the border color of the component handle.
 * @prop --calcite-switch-track-background-color: Specifies the background color of the component track.
 * @prop --calcite-switch-track-border-color: Specifies the border color of the component track.
 * @prop --calcite-switch-handle-shadow: Specifies the shadow of the component handle.
 * @prop --calcite-switch-handle-border-color-hover: Specifies the border color of the component handle when hovered.
 * @prop --calcite-switch-shadow-hover: Specifies the shadow of the component handle when hovered.
 * @prop --calcite-switch-handle-border-color-selected: Specifies the border color of the component handle when selected.
 * @prop --calcite-switch-track-background-color-selected: Specifies the background color of the component track when selected.
 * @prop --calcite-switch-track-border-color-selected: Specifies the border color of the component track when selected.
 * @prop --calcite-switch-handle-border-color-selected-hover: Specifies the border color of the component handle when selected and hovered.
 * @prop --calcite-switch-shadow-selected-hover: Specifies the shadow of the component handle when selected and hovered.
 */

:host {
  --calcite-internal-switch-border-radius: 9999px; // TODO: drop once --calcite-corner-radius is updated

  @apply relative
  inline-block
  w-auto
  cursor-pointer
  select-none
  align-middle;
}

.container {
  @apply outline-0;
  display: flex;
}

.track {
  @apply align-top
    border
    border-solid
    box-border
    focus-base
    inline-block
    pointer-events-none
    relative;

  border-color: var(--calcite-switch-track-border-color, var(--calcite-color-border-2));
  background-color: var(--calcite-switch-track-background-color, var(--calcite-color-foreground-2));
  border-radius: var(
    --calcite-switch-corner-radius,
    var(--calcite-internal-switch-border-radius, var(--calcite-corner-radius-pill))
  );
  block-size: var(--calcite-internal-switch-track-height);
  inline-size: var(--calcite-internal-switch-track-width);
}

.handle {
  @apply absolute
    block
    border-2
    border-solid
    duration-150
    ease-in-out
    pointer-events-none
    transition-all;
  inset-block-start: -1px;
  inset-inline: -1px theme("inset.auto");

  border-color: var(--calcite-switch-handle-border-color, var(--calcite-color-border-input));
  background-color: var(--calcite-switch-handle-background-color, var(--calcite-color-foreground-1));
  border-radius: var(
    --calcite-switch-corner-radius,
    var(--calcite-internal-switch-border-radius, var(--calcite-corner-radius-pill))
  );
  box-shadow: var(--calcite-switch-handle-shadow, none);
  block-size: var(--calcite-internal-switch-handle-height);
  inline-size: var(--calcite-internal-switch-handle-width);
}

:host([scale="s"]) {
  --calcite-internal-switch-handle-height: var(--calcite-size-sm);
  --calcite-internal-switch-handle-width: var(--calcite-size-sm);
  --calcite-internal-switch-track-height: var(--calcite-size-md);
  --calcite-internal-switch-track-width: var(--calcite-size-xxl);
}

:host([scale="m"]) {
  --calcite-internal-switch-handle-height: var(--calcite-size-md);
  --calcite-internal-switch-handle-width: var(--calcite-size-md);
  --calcite-internal-switch-track-height: var(--calcite-size-lg);
  --calcite-internal-switch-track-width: var(--calcite-size-xxxl);
}

:host([scale="l"]) {
  --calcite-internal-switch-handle-height: var(--calcite-size-xl);
  --calcite-internal-switch-handle-width: var(--calcite-size-xl);
  --calcite-internal-switch-track-height: var(--calcite-size-xxl);
  --calcite-internal-switch-track-width: #{$calcite-size-48};
}

:host(:focus) .track {
  @apply focus-outset;
}

:host(:hover),
:host(:focus) {
  .handle {
    border-color: var(--calcite-switch-handle-border-color-hover, var(--calcite-color-brand));
    box-shadow: var(--calcite-switch-handle-shadow-hover, inset 0 0 0 1px var(--calcite-color-brand));
  }
}

:host([checked]) {
  .track {
    background-color: var(--calcite-switch-track-background-color-selected, var(--calcite-color-brand));
    border-color: var(--calcite-switch-track-border-color-selected, var(--calcite-color-brand));
  }

  .handle {
    border-color: var(--calcite-switch-handle-border-color-selected, var(--calcite-color-brand));
    inset-inline: theme("inset.auto") -1px;
  }
}

:host([checked]:hover) {
  .handle {
    border-color: var(--calcite-switch-handle-border-color-selected-hover, var(--calcite-color-brand-hover));
    box-shadow: var(--calcite-switch-handle-shadow-selected-hover, inset 0 0 0 1px var(--calcite-color-brand-hover));
  }
}

@media (forced-colors: active) {
  :host([checked]) {
    background-color: canvasText;
  }
}

@include disabled();
@include hidden-form-input();
@include base-component();
