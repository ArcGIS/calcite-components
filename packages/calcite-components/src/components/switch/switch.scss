/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-switch-corner-radius: Specifies the corner radius of the component.
 * @prop --calcite-switch-handle-background-color: Specifies the background color of the component handle.
 * @prop --calcite-switch-track-background-color: Specifies the background color of the component track.
 * @prop --calcite-switch-border-color: Specifies the border color of the component.
 */

// sizes
:host([scale="s"]) {
  .container {
    @apply h-3;
  }
  .track {
    @apply h-3 w-6;
  }
  .handle {
    @apply h-2 w-2;
  }
}

:host([scale="m"]) {
  .container {
    @apply h-4;
  }
  .track {
    @apply h-4 w-8;
  }
  .handle {
    @apply h-3 w-3;
  }
}

:host([scale="l"]) {
  .container {
    @apply h-6;
  }
  .track {
    @apply h-6 w-12;
  }
  .handle {
    @apply h-5 w-5;
  }
}

:host {
  --calcite-internal-switch-corner-radius: 9999px; // TODO: drop once --calcite-corner-radius is updated

  @apply relative
    inline-block
    w-auto
    cursor-pointer
    select-none
    align-middle;
  tap-highlight-color: transparent;
}

@include disabled();

.container {
  @apply outline-0;
}

.track {
  @apply pointer-events-none
    relative
    box-border
    inline-block
    border
    border-solid
    align-top
    focus-base;
  border-radius: var(--calcite-switch-corner-radius, var(--calcite-internal-switch-corner-radius));
  background-color: var(--calcite-switch-track-background-color, var(--calcite-color-foreground-2));
  border-color: var(--calcite-switch-border-color, var(--calcite-color-border-2));
}

:host(:focus) .track {
  @apply focus-outset;
}

.handle {
  @apply pointer-events-none
    absolute
    block
    border-2
    border-solid
    transition-all
    duration-150
    ease-in-out;
  border-radius: var(--calcite-switch-corner-radius, var(--calcite-internal-switch-corner-radius));
  inset-block-start: -1px;
  inset-inline: -1px theme("inset.auto");
  background-color: var(--calcite-switch-handle-background-color, var(--calcite-color-foreground-1));
  border-color: var(--calcite-switch-border-color, var(--calcite-color-border-input));
}

.container:hover,
:host(:focus) {
  .handle {
    box-shadow: inset 0 0 0 1px var(--calcite-switch-handle-shadow-color, var(--calcite-color-brand));
    border-color: var(--calcite-switch-border-color, var(--calcite-color-brand));
  }
}

:host([checked]) {
  .track {
    background-color: var(--calcite-switch-track-background-color, var(--calcite-color-brand));
    border-color: var(--calcite-switch-border-color, var(--calcite-color-brand-hover));
  }
  .handle {
    inset-inline: theme("inset.auto") -1px;
    border-color: var(--calcite-switch-border-color, var(--calcite-color-brand));
  }

  .container:hover {
    .handle {
      box-shadow: inset 0 0 0 1px var(--calcite-switch-handle-shadow-color, var(--calcite-color-brand-hover));
      border-color: var(--calcite-switch-border-color, var(--calcite-color-brand-hover));
    }
  }
}

@media (forced-colors: active) {
  :host([checked]) {
    .track {
      background-color: canvasText;
    }
  }
}

@include hidden-form-input();
@include base-component();
