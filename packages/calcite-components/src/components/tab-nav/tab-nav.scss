/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-tab-nav-indicator-color: Specifies the color of the active tab indicator.
 * @prop --calcite-tab-nav-button-background-color: Specifies the background color of the scroll buttons.
 * @prop --calcite-tab-nav-button-background-color-active: Specifies the background color of the scroll buttons when active.
 * @prop --calcite-tab-nav-button-background-color-focus: Specifies the background color of the scroll buttons when focused.
 * @prop --calcite-tab-nav-button-background-color-hover: Specifies the background color of the scroll buttons when hovered.
 * @prop --calcite-tab-nav-button-border-color: Specifies the border color of the scroll buttons.
 * @prop --calcite-tab-nav-button-border-color-active: Specifies the border color of the scroll buttons when active.
 * @prop --calcite-tab-nav-button-border-color-focus: Specifies the border color of the scroll buttons when focused.
 * @prop --calcite-tab-nav-button-border-color-hover: Specifies the border color of the scroll buttons when hovered.
 * @prop --calcite-tab-nav-button-icon-color: Specifies the color of the scroll buttons' icon.
 * @prop --calcite-tab-nav-button-icon-color-active: Specifies the color of the scroll buttons' icon when active.
 * @prop --calcite-tab-nav-button-icon-color-focus: Specifies the color of the scroll buttons' icon when focused.
 * @prop --calcite-tab-nav-button-icon-color-hover: Specifies the color of the scroll buttons' icon when hovered.
 */

:host {
  --calcite-internal-tab-nav-gradient-start-side: left;
  --calcite-internal-tab-nav-gradient-end-side: right;

  @apply relative flex;
}

.scale-s {
  --calcite-internal-tab-nav-scroller-button-width: #{$calcite-size-24};
  min-block-size: theme("spacing.6");
}

.scale-m {
  --calcite-internal-tab-nav-scroller-button-width: #{$calcite-size-32};
  min-block-size: theme("spacing.8");
}

.scale-l {
  --calcite-internal-tab-nav-scroller-button-width: #{$calcite-size-44};
  min-block-size: theme("spacing.11");
}

.calcite--rtl {
  --calcite-internal-tab-nav-gradient-start-side: right;
  --calcite-internal-tab-nav-gradient-end-side: left;
}

$last-mask-color-stop-position: 51%; // we go beyond the half point to ensure the mask color stops overlap when both start and end are overflowing

.tab-nav--start-overflow {
  .tab-nav-active-indicator-container,
  .tab-titles-slot-wrapper {
    mask-image: linear-gradient(
      to var(--calcite-internal-tab-nav-gradient-end-side),
      transparent,
      transparent var(--calcite-internal-tab-nav-scroller-button-width),
      white var(--calcite-internal-tab-nav-scroller-button-width),
      white $last-mask-color-stop-position
    );
  }
}

.tab-nav--end-overflow {
  .tab-nav-active-indicator-container,
  .tab-titles-slot-wrapper {
    mask-image: linear-gradient(
      to var(--calcite-internal-tab-nav-gradient-start-side),
      transparent,
      transparent var(--calcite-internal-tab-nav-scroller-button-width),
      white var(--calcite-internal-tab-nav-scroller-button-width),
      white $last-mask-color-stop-position
    );
  }
}

.tab-nav--start-overflow.tab-nav--end-overflow {
  .tab-nav-active-indicator-container,
  .tab-titles-slot-wrapper {
    mask-image: linear-gradient(
        to var(--calcite-internal-tab-nav-gradient-end-side),
        transparent,
        transparent var(--calcite-internal-tab-nav-scroller-button-width),
        white var(--calcite-internal-tab-nav-scroller-button-width),
        white $last-mask-color-stop-position,
        transparent $last-mask-color-stop-position
      ),
      linear-gradient(
        to var(--calcite-internal-tab-nav-gradient-start-side),
        transparent,
        transparent var(--calcite-internal-tab-nav-scroller-button-width),
        white var(--calcite-internal-tab-nav-scroller-button-width),
        white $last-mask-color-stop-position,
        transparent $last-mask-color-stop-position
      );
  }
}

.tab-nav::-webkit-scrollbar {
  display: none;
  -ms-overflow-style: none;
  scrollbar-width: none;
}

:host([layout="center"]) {
  ::slotted(calcite-tab-title) {
    display: flex;
    flex-grow: 1;
    flex-shrink: 0;
    min-inline-size: auto;
    white-space: nowrap;
  }

  ::slotted(calcite-tab-title[selected]) {
    overflow: unset;
  }
}

:host(:not([bordered])) {
  .scale-l {
    --calcite-internal-tab-nav-gap: var(--calcite-size-xxl);
  }
  .scale-m {
    --calcite-internal-tab-nav-gap: var(--calcite-size-xl);
  }
  .scale-s {
    --calcite-internal-tab-nav-gap: var(--calcite-size-lg);
  }

  .tab-titles-slot-wrapper {
    gap: var(--calcite-internal-tab-nav-gap);
  }
}

:host([layout="center"]:not([bordered])) {
  .tab-titles-slot-wrapper {
    padding-inline: var(--calcite-spacing-xxl);
  }
}

.tab-nav,
.tab-titles-slot-wrapper {
  @apply flex
    w-full
    justify-start
    whitespace-nowrap
    overflow-hidden;
}

// prevent indicator overflow in horizontal scrolling situations
.tab-nav-active-indicator-container {
  @apply absolute
    bottom-0
    h-0.5
    inset-x-0
    overflow-hidden
    w-full;
}

.tab-nav-active-indicator {
  @apply absolute
    bottom-0
    block
    h-0.5
    ease-out
    transition-all;

  background-color: var(--calcite-tab-nav-indicator-color, var(--calcite-color-brand));
}

.scroll-button-container {
  @apply absolute bottom-0 top-0;

  calcite-button {
    // TODO: replace with updated sub-component tokens (see prop doc for reference)

    --calcite-offset-invert-focus: 1;
    --calcite-color-text-1: var(--calcite-color-text-3);

    block-size: 100%;

    &:hover {
      --calcite-color-text-1: unset;
      --calcite-color-foreground-1: var(--calcite-color-transparent-hover);
      --calcite-color-foreground-3: var(--calcite-color-transparent);
    }
  }
}

.scroll-button-container--forward {
  inset-inline-end: 0;
  z-index: var(--calcite-z-index);
}

.scroll-button-container--backward {
  inset-inline-start: 0;
  z-index: var(--calcite-z-index);
}

:host(:not([bordered])) {
  .scroll-button-container--backward,
  .scroll-button-container--forward {
    &::before {
      background-color: var(--calcite-color-border-3);
      content: "";
      inline-size: var(--calcite-border-width-sm);
      inset-block-start: var(--calcite-border-width-md);
      inset-block-end: var(--calcite-border-width-md);
      position: absolute;
    }
  }

  .scroll-button-container--backward::before {
    inset-inline-end: 0;
  }

  .scroll-button-container--forward::before {
    inset-inline-start: 0;
  }
}

:host .position-bottom .tab-nav-active-indicator {
  inset-block-end: unset;
  @apply top-0;
}

:host .position-bottom .tab-nav-active-indicator-container {
  inset-block-end: unset;
  @apply top-0;
}

:host([bordered]) .tab-nav-active-indicator-container {
  inset-block-end: unset; // display active blue line above instead of below
}

:host([bordered]) .position-bottom .tab-nav-active-indicator-container {
  inset-block-end: 0; // display active blue line below instead of above
  inset-block-start: unset;
}

@media (forced-colors: active) {
  .tab-nav-active-indicator {
    background-color: highlight;
  }
}

@include base-component();
