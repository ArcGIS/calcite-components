/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-table-button-background-color: defines the component's background color.
 * @prop --calcite-table-button-background-color-active: defines the component's background color in an active state.
 * @prop --calcite-table-button-background-color-hover: defines the component's background color in a hover state.
 * @prop --calcite-table-button-corner-radius: defines the component's corner radius.
 * @prop --calcite-table-button-text-color: defines the component's text color.
 * @prop --calcite-table-button-text-color-active: defines the component's text color in an active state.
 * @prop --calcite-table-button-text-color-focus: defines the component's text color in a focus state.
 * @prop --calcite-table-button-text-color-hover: defines the component's text color in a hover state.
 */

:host([scale="s"]) {
  --calcite-internal-table-cell-padding: 0.25rem;
  --calcite-internal-table-cell-font-size: var(--calcite-font-size--2);
  --calcite-internal-table-cell-font-size-secondary: var(--calcite-font-size--3);
}
:host([scale="m"]) {
  --calcite-internal-table-cell-padding: 0.5rem;
  --calcite-internal-table-cell-font-size: var(--calcite-font-size--1);
  --calcite-internal-table-cell-font-size-secondary: var(--calcite-font-size--2);
}
:host([scale="l"]) {
  --calcite-internal-table-cell-padding: 1rem;
  --calcite-internal-table-cell-font-size: var(--calcite-font-size-0);
  --calcite-internal-table-cell-font-size-secondary: var(--calcite-font-size--1);
}

:host {
  @apply flex;
}

.container {
  @apply flex flex-col w-full h-full;
  inline-size: var(--calcite-container-size-content-fluid);
  block-size: var(--calcite-container-size-content-fluid);
}

.table-container {
  @apply overflow-auto whitespace-nowrap;
}

.table-container {
  border: var(--calcite-border-width-sm) solid var(--calcite-table-border-color, var(--calcite-color-border-3));
}

.assistive-text {
  @apply sr-only;
}

table {
  @apply border-collapse;
  overflow-x: scroll;
  inline-size: var(--calcite-container-size-content-fluid);
}

.table--fixed {
  @apply table-fixed;
}

.bordered {
  ::slotted(calcite-table-row) {
    --calcite-table-row-border-color: var(--calcite-table-border-color, var(--calcite-color-border-3));
  }
}

.striped {
  ::slotted(calcite-table-row:nth-child(2n + 1)) {
    --calcite-table-row-background: var(--calcite-table-background-color-alternate, var(--calcite-color-foreground-2));
  }
}

.selection-actions {
  @apply flex flex-row;
  margin-inline-start: auto;
}

.selection-area {
  @apply flex flex-row items-center;
  padding-block: var(--calcite-internal-table-cell-padding);
}

.selection-area calcite-chip:last-of-type {
  @apply me-2;
}

.selection-area calcite-chip:last-of-type:not(:first-of-type) {
  @apply ms-2;
}

.selection-area calcite-button {
  @apply me-4;
}

.pagination-area {
  @apply flex flex-row w-full justify-center;
  padding-block: var(--calcite-internal-table-cell-padding);
}

calcite-pagination {
  flex: 1;
  justify-content: center;
}

calcite-button {
  --calcite-button-background-color: var(--calcite-table-button-background-color);
  --calcite-button-corner-radius: var(--calcite-table-button-corner-radius);
  --calcite-button-text-color: var(--calcite-table-button-text-color);

  &:hover {
    --calcite-button-background-color: var(--calcite-table-button-background-color-hover);
    --calcite-button-text-color: var(--calcite-table-button-text-color-hover);
  }
  &:focus {
    --calcite-button-text-color: var(--calcite-table-button-text-color-focus);
  }
  &:active {
    --calcite-button-text-color: var(--calcite-table-button-text-color-active);
    --calcite-button-background-color: var(--calcite-table-button-background-color-active);
  }
}

@include base-component();
