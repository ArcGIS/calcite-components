@import "~@esri/calcite-design-tokens/dist/scss/core";

/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-text-area-background-color: Specifies the background color of the component.
 * @prop --calcite--text-area-border-block-end-color: Specifies the border block end color of the component.
 * @prop --calcite-text-area-border-color: Specifies the border color of the component.
 * @prop --calcite-text-area-footer-min-block-size : Specifies minimum `block-size` of the footer in the component.
  * @prop --calcite-text-area-min-inline-size: Specifies the mininmum `inline-size` of the component. Defaults to `192px` and increases to `288px` when `footer` is added.
 * @prop --calcite-text-area-character-limit-text-color: Specifies the color of the character limit text displayed in footer of the component.
 * @prop --calcite-text-area-text-color: Specifies the color of text in the component.
 *
 */

:host {
  @apply inline-block
  relative
  w-full
  h-full;
  --calcite-text-area-text-color: var(--calcite-color-text-1);
  --calcite-text-area-background-color: var(--calcite-color-foreground-1);
  --calcite-text-area-border-color: var(--calcite-color-border-input);
  --calcite--text-area-border-block-end-color: var(--calcite-color-border-3) --calcite-text-min-inline-size:
    var(--calcite-size-192);
  --calcite-text-area-footer-min-block-size: var(--calcite-size-36);
  --calcite-text-area-character-limit-text-color: var(--calcite-color-text-2);
}

textarea {
  @apply relative
  block
  box-border
  w-full
  m-0;
  background-color: var(--calcite-text-area-background-color);
  border: var(--calcite-border-width-sm) solid var(--calcite-text-area-border-color);
  border-block-end-width: var(--calcite-border-width-sm);
  border-block-end-style: solid;
  border-block-end-color: var(--calcite-text-area-border-block-end-color);
  color: var(--calcite-text-area-text-color);
  font-family: var(--calcite-sans-family);
  min-inline-size: var(--calcite-text-min-inline-size);
  @media screen and (max-width: 480px) {
    @apply resize-none;
  }
  &:focus {
    @apply focus-inset;
  }
  &.text-area--invalid {
    --calcite-text-area-border-color: var(--calcite-color-status-danger);
    --calcite-text-area-border-block-end-color: var(--calcite-color-status-danger);
    &:focus {
      @apply focus-inset-danger;
    }
  }
  &.footer--slotted {
    --calcite-text-min-inline-size: var(--calcite-size-288);
  }
}

.footer {
  @apply flex
  box-border
  items-center;
  background-color: var(--calcite-text-area-background-color);
  border: var(--calcite-border-width-sm) solid var(--calcite-text-area-border-color);
  border-block-start: var(--calcite-border-width-none);
  min-block-size: var(--calcite-text-area-footer-min-block-size);
}

.character-limit {
  @apply flex
  justify-end
  items-center
  whitespace-nowrap;
  font-weight: var(--calcite-font-weight-regular);
  color: var(--calcite-text-area-character-limit-text-color);
}

.character--over-limit {
  font-weight: var(--calcite-font-weight-bold);
  color: var(--calcite-color-status-danger);
}

:host([resize="none"]) textarea {
  @apply resize-none;
}

:host([resize="horizontal"]) textarea {
  @apply resize-x;
}

:host([resize="vertical"]) textarea {
  @apply resize-y;
}

:host([scale="s"]) {
  .footer,
  textarea {
    padding-block: var(--calcite-spacing-xxs);
    padding-inline: var(--calcite-spacing-sm);
  }
  .footer {
    --calcite-text-area-footer-min-block-size: var(--calcite-size-28);
  }
  .character-limit {
    @apply text-n2;
    padding-inline-start: var(--calcite-spacing-sm);
  }
}

:host([scale="m"]) {
  textarea,
  .footer {
    padding-block: var(--calcite-spacing-sm);
    padding-inline: var(--calcite-spacing-md);
  }
  .character-limit {
    @apply text-n1;
    padding-inline-start: var(--calcite-spacing-md);
  }
}

:host([scale="l"]) {
  textarea,
  .footer {
    padding-block: var(--calcite-spacing-md);
    padding-inline: var(--calcite-spacing-xl);
  }
  .footer {
    --calcite-text-area-footer-min-block-size: var(--calcite-size-44);
  }
  .character-limit {
    @apply text-0;
    padding-inline-start: var(--calcite-spacing-xl);
  }
}

:host([status="invalid"]) {
  textarea {
    --calcite-text-area-border-color: var(--calcite-color-status-danger);
    --calcite-text-area-border-block-end-color: var(--calcite-color-status-danger);
  }
  textarea:focus {
    @apply focus-inset-danger;
  }
}

.readonly {
  background-color: var(--calcite-color-background);
  font-weight: var(--calcite-font-weight-medium);
}

:host([disabled]) {
  textarea,
  .footer {
    opacity: var(--calcite-opacity-50);
  }
}

.border--color {
  border-block-end: 1px solid var(--calcite-text-area-border-color);
  &:focus {
    border-block-end-width: var(--calcite-border-width-sm);
  }
}

textarea.block-size--full {
  @apply h-full;
}

.content,
.hide {
  @apply hidden;
}

.container {
  @apply flex
  justify-between
  w-full;
}

.footer--end-only {
  @apply justify-end;
}

.assistive-text {
  @apply sr-only;
}

@include form-validation-message();
@include hidden-form-input();
@include disabled();
@include base-component();
