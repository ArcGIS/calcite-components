/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-text-area-background-color: Specifies the background color of the component.
 * @prop --calcite-text-area-border-color: Specifies the border color of the component.
 * @prop --calcite-text-area-color-invalid: Specifies the color used to indicate an invalid state.
 * @prop --calcite-text-area-character-limit-text-color: Specifies the color of the character limit text displayed in footer of the component.
 * @prop --calcite-text-area-text-color: Specifies the color of text in the component.
 *
 */

:host {
  @apply inline-block
  relative
  w-full
  h-full;
}

textarea {
  @apply font-sans
    relative
    block
    box-border
    border
    w-full
    m-0;
  min-inline-size: theme("spacing.48");
  border-block-end: 1px solid var(--calcite-color-border-3);
  color: var(--calcite-text-area-text-color, var(--calcite-color-text-1));
  background-color: var(--calcite-text-area-background-color, var(--calcite-color-foreground-1));
  border-color: var(--calcite-text-area-border-color, var(--calcite-color-border-input));

  @media screen and (max-width: 480px) {
    @apply resize-none;
  }

  &:focus {
    @apply focus-inset;
  }

  &.text-area--invalid {
    @apply border
    border-solid
    border-b;
    border-color: var(--calcite-text-area-color-invalid, var(--calcite-color-status-danger));

    &:focus {
      @apply focus-inset-danger;
    }
  }
  &.footer--slotted {
    min-inline-size: theme("spacing.72");
  }
}

.footer {
  @apply flex
  box-border
  border
  border-solid
  border-t-0
  items-center;

  background-color: var(--calcite-text-area-background-color, var(--calcite-color-foreground-1));
  border-color: var(--calcite-text-area-border-color, var(--calcite-color-border-input));
}

.character-limit {
  @apply flex
  justify-end
  items-center
  font-normal
  whitespace-nowrap;

  color: var(--calcite-text-area-character-limit-text-color, var(--calcite-color-text-2));
}

.character--over-limit {
  @apply font-bold
  text-danger;

  color: var(--calcite-text-area-color-invalid, var(--calcite-color-status-danger));
}

:host([resize="none"]) textarea {
  @apply resize-none;
}

:host([resize="horizontal"]) textarea {
  @apply resize-x;
}

:host([resize="vertical"]) textarea {
  @apply resize-y;
}

:host([scale="s"]) {
  @apply text-n2;
  .footer {
    @apply py-1
    px-2;
    min-block-size: 1.75rem;
  }
  textarea {
    @apply py-1
    px-2;
  }

  textarea,
  .footer,
  .character-limit {
    @apply text-n2
    pl-2;
  }
}

:host([scale="m"]) {
  textarea {
    @apply py-2
    px-3;
  }
  .footer {
    @apply py-2
    px-3;
    min-block-size: 2.25rem;
  }

  textarea,
  .footer,
  .character-limit {
    @apply text-n1
    pl-3;
  }
}

:host([scale="l"]) {
  @apply text-0;
  textarea {
    @apply py-3
    px-4;
  }
  .footer {
    @apply py-3
    px-4;
    min-block-size: 2.75rem;
  }

  textarea,
  .footer,
  .character-limit {
    @apply text-0
    pl-4;
  }
}

:host([status="invalid"]) {
  textarea {
    border-color: var(--calcite-text-area-color-invalid, var(--calcite-color-status-danger));
  }
  textarea:focus {
    @apply focus-inset-danger;
  }
}

.readonly {
  @apply font-medium;
  background-color: var(--calcite-text-area-background-color-readonly, var(--calcite-color-background));
}

.border--color {
  @apply border-b;
  border-color: var(--calcite-text-area-border-color, var(--calcite-color-border-input));

  &:focus {
    @apply border-b-2;
  }
}

textarea.block-size--full {
  @apply h-full;
}

.content,
.hide {
  @apply hidden;
}

.container {
  @apply flex
  justify-between
  w-full;
}

.footer--end-only {
  @apply justify-end;
}

.assistive-text {
  @apply sr-only;
}

@include form-validation-message();
@include hidden-form-input();
@include disabled();
@include base-component();
