/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-text-area-background-color: Specifies the background color of the component.
 * @prop --calcite-text-area-border-color: Specifies the border color of the component.
 * @prop --calcite-text-area-character-limit-text-color: Specifies the color of the character limit text displayed in footer of the component.
 * @prop --calcite-text-area-divider-color: Specifies the color of the divider between the text area and footer.
 * @prop --calcite-text-area-text-color: Specifies the color of text in the component.
 *
 */

:host {
  @apply inline-block
  relative
  w-full
  h-full;

  --calcite-internal-text-area-border-color: var(--calcite-text-area-border-color, var(--calcite-color-border-input));
}

.text-area,
.footer {
  @apply text-n1;

  background-color: var(--calcite-text-area-background-color, var(--calcite-color-foreground-1));
  padding-block: var(--calcite-spacing-sm);
  padding-inline: var(--calcite-spacing-md);
}

.text-area {
  @apply relative
  font-sans
  block
  box-border
  w-full
  m-0;

  --calcite-internal-text-area-border-block-end-color: var(
    --calcite-text-area-border-block-end-color,
    var(--calcite-color-border-3)
  );

  border: var(--calcite-border-width-sm) solid var(--calcite-internal-text-area-border-color);
  border-block-end-width: var(--calcite-border-width-sm);
  border-block-end-style: solid;
  border-block-end-color: var(--calcite-internal-text-area-border-block-end-color);
  color: var(--calcite-text-area-text-color, var(--calcite-color-text-1));
  font-family: var(--calcite-sans-family);
  min-inline-size: theme("spacing.48");

  @media screen and (max-width: 480px) {
    @apply resize-none;
  }

  &:focus {
    @apply focus-inset;
  }

  &.text-area--invalid {
    --calcite-text-area-border-color: var(--calcite-internal-text-area-border-color);
    --calcite-internal-text-area-border-block-end-color: var(
      --calcite-text-area-border-block-end-color,
      var(--calcite-color-status-danger)
    );
    &:focus {
      @apply focus-inset-danger;
    }
  }
  &.footer--slotted {
    min-inline-size: theme("spacing.72");
  }
}

.footer {
  @apply flex
  box-border
  items-center;
  border: var(--calcite-border-width-sm) solid var(--calcite-internal-text-area-border-color);
  border-block-start: var(--calcite-border-width-none);
  min-block-size: 2.25rem;
}

.character-limit {
  @apply text-n1
  flex
  justify-end
  items-center
  whitespace-nowrap;

  font-weight: var(--calcite-font-weight-regular);
  color: var(--calcite-text-area-character-limit-text-color, var(--calcite-color-text-2));
  padding-inline-start: var(--calcite-spacing-md);
}

.character--over-limit {
  font-weight: var(--calcite-font-weight-bold);
  color: var(--calcite-color-status-danger);
}

.readonly {
  background-color: var(--calcite-color-background);
  font-weight: var(--calcite-font-weight-medium);
}

.border--color {
  border-block-end: 1px solid var(--calcite-internal-text-area-border-color);
  &:focus {
    border-block-end-width: var(--calcite-border-width-sm);
  }
}

.content,
.hide {
  @apply hidden;
}

.container {
  @apply flex
  justify-between
  w-full;
}

.footer--end-only {
  @apply justify-end;
}

.assistive-text {
  @apply sr-only;
}

.text-area.block-size--full {
  @apply h-full;
}

:host([resize="none"]) .text-area {
  @apply resize-none;
}

:host([resize="horizontal"]) .text-area {
  @apply resize-x;
}

:host([resize="vertical"]) .text-area {
  @apply resize-y;
}

:host([scale="s"]) {
  .text-area,
  .footer,
  .character-limit {
    @apply text-n2
    pl-2;
  }

  .footer {
    min-block-size: 1.75rem;
  }
  .text-area {
    @apply py-1
    px-2;
  }
}

:host([scale="m"]) {
  .text-area {
    @apply py-2
    px-3;
  }
  .footer {
    @apply py-2
    px-3;
    min-block-size: 2.25rem;
  }
}

:host([scale="l"]) {
  .text-area,
  .footer {
    @apply text-0;
    padding-block: var(--calcite-spacing-md);
    padding-inline: var(--calcite-spacing-xl);
  }
  .footer {
    min-block-size: 2.75rem;
  }
}

:host([scale="l"]) {
  .text-area,
  .footer,
  .character-limit {
    @apply text-0;
    padding-inline-start: var(--calcite-spacing-xl);
  }
}

:host([status="invalid"]) {
  --calcite-internal-text-area-border-color: var(--calcite-text-area-border-color, var--calcite-color-status-danger);
  .text-area {
    --calcite-internal-text-area-border-block-end-color: var(
      --calcite-text-area-border-block-end-color,
      var(--calcite-color-status-danger)
    );
  }
  .text-area:focus {
    @apply focus-inset-danger;
  }
}

:host([disabled]) {
  .text-area,
  .footer {
    opacity: var(--calcite-opacity-half);
  }
}

@include form-validation-message();
@include hidden-form-input();
@include disabled();
@include base-component();
