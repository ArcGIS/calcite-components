/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-tile-background-color: Specifies the background color of the component.
 * @prop --calcite-tile-border-color: Specifies the border color of the component.
 * @prop --calcite-tile-description-text-color: Specifies the description text color of the component.
 * @prop --calcite-tile-heading-text-color: Specifies the heading text color of the component.
 * @prop --calcite-tile-icon-color: Specifies the color of the selected icon in the component.
 * @prop --calcite-tile-selection-icon-color-hover: Specifies the color of the selection icon in the component on hover.
 */

/** Internal variables
  * --calcite-internal-tile-border-color
  * --calcite-internal-tile-description-text-color
  * --calcite-internal-tile-heading-text-color
  * --calcite-internal-tile-icon-color
  * --calcite-internal-tile-outline-color
  * --calcite-internal-tile-selection-icon-color
  */

:host {
  --calcite-internal-tile-border-color: var(--calcite-color-border-2);
  --calcite-internal-tile-description-text-color: var(--calcite-color-text-3);
  --calcite-internal-tile-heading-text-color: var(--calcite-color-text-2);

  box-sizing: border-box;
  display: inline-block;
}

.container {
  --calcite-internal-tile-outline-color: var(--calcite-tile-border-color, var(--calcite-internal-tile-border-color));
  --calcite-internal-tile-select-icon-color: var(--calcite-tile-selection-icon-color, var(--calcite-color-text-3));

  background-color: var(--calcite-tile-background-color, var(--calcite-color-foreground-1));
  block-size: var(--calcite-container-size-content-fluid);
  box-sizing: border-box;
  inline-size: var(--calcite-container-size-content-fluid);
  outline: var(--calcite-border-width-sm, 1px) solid var(--calcite-internal-tile-outline-color);
  user-select: none;
  box-shadow: var(--calcite-tile-shadow, var(--calcite-internal-tile-shadow, none)) &.interactive {
    cursor: pointer;

    &:hover,
    &:focus,
    &.selected {
      --calcite-internal-tile-outline-color: var(--calcite-tile-border-color, var(--calcite-color-brand));
      --calcite-internal-tile-select-icon-color: var(
        --calcite-tile-selection-icon-color-hover,
        var(--calcite-color-brand)
      );
      position: relative;
    }
    &.selected {
      z-index: var(--calcite-z-index);
    }
    &:focus {
      --calcite-internal-tile-shadow: inset 0px 0px 0px 1px var(--calcite-color-brand);
      z-index: var(--calcite-z-index-sticky);
    }
  }
}

.content-container,
.row {
  align-items: flex-start;
  display: flex;
}

.content-container {
  flex-direction: column;
}

.text-content-container {
  inline-size: 100%;
  outline-color: transparent;
  padding: 0;
}

.text-content {
  display: flex;
  flex-direction: column;
}

.heading {
  color: var(--calcite-tile-heading-text-color, var(--calcite-internal-tile-heading-text-color));
  font-weight: var(--calcite-font-weight-medium);
  line-height: 1.20313rem;
  overflow-wrap: break-word;
}

/* [Deprecated] Use the content-top slot for rendering icon with alignment="center" instead */
.large-visual-deprecated {
  align-items: center;
  justify-content: center;
  min-block-size: 12rem;
  text-align: center;

  calcite-icon {
    align-self: center;
    block-size: 64px;
    inline-size: 64px;
  }
  .text-content-container {
    justify-content: center;
  }
}

.description {
  color: var(--calcite-tile-description-text-color, var(--calcite-internal-tile-description-text-color));
  font-weight: var(--calcite-font-weight-regular);
  overflow-wrap: break-word;
}

calcite-icon {
  --calcite-icon-color: var(
    --calcite-tile-icon-color,
    var(--calcite-internal-tile-icon-color, var(--calcite-color-text-3))
  );

  &.selection-icon {
    --calcite-icon-color: var(--calcite-internal-tile-select-icon-color);
  }
}

:host([alignment="center"]) {
  .row,
  .content-container {
    align-items: center;
    text-align: center;
  }
  slot[name="content-start"]::slotted(*),
  slot[name="content-end"]::slotted(*) {
    align-self: center;
  }
}

:host([scale="s"]) {
  max-inline-size: 400px;
  min-inline-size: 100px;
  .container {
    padding: var(--calcite-spacing-sm);
  }
  .content-container--has-content,
  .row {
    gap: var(--calcite-spacing-sm);
  }
  .heading {
    font-size: var(--calcite-font-size--2);
    line-height: 1.03125rem;
  }
  .description {
    font-size: var(--calcite-font-size--3);
    line-height: 0.85938rem;
  }
  .content-container--has-only-content-top-and-bottom slot[name="content-top"]::slotted(*) {
    margin-block-end: var(--calcite-spacing-sm);
  }
}

:host([scale="m"]) {
  max-inline-size: 460px;
  min-inline-size: 140px;
  .container {
    padding: var(--calcite-spacing-md);
  }
  .content-container--has-content,
  .row {
    gap: var(--calcite-spacing-md);
  }
  .heading {
    font-size: var(--calcite-font-size--1);
    line-height: 1.20313rem;
  }
  .description {
    font-size: var(--calcite-font-size--2);
    line-height: 1.03125rem;
  }
  .content-container--has-only-content-top-and-bottom slot[name="content-top"]::slotted(*) {
    margin-block-end: var(--calcite-spacing-md);
  }
}

:host([scale="l"]) {
  max-inline-size: 520px;
  min-inline-size: 160px;
  .container {
    padding: var(--calcite-spacing-xl);
  }
  .content-container--has-content,
  .row {
    gap: var(--calcite-spacing-xl);
  }
  .heading {
    font-size: var(--calcite-font-size-0);
    line-height: 1.375rem;
  }
  .description {
    font-size: var(--calcite-font-size--1);
    line-height: 1.20313rem;
  }
  .content-container--has-only-content-top-and-bottom slot[name="content-top"]::slotted(*) {
    margin-block-end: var(--calcite-spacing-xl);
  }
}

:host([selection-appearance="border"][layout="horizontal"]),
:host([selection-appearance="border"][layout="vertical"]) {
  .container.selected:focus::before {
    --calcite-internal-tile-shadow: inset 0px 0px 0px 1px var(--calcite-color-brand);

    block-size: 100%;
    box-shadow: inset 0px 0px 0px 1px var(--calcite-color-brand);
    content: "";
    display: block;
    inline-size: 100%;
    inset-block-start: 0;
    inset-inline-start: 0;
    position: absolute;
  }
}

:host([selection-appearance="border"][layout="horizontal"]) {
  .container.selected {
    --calcite-internal-tile-shadow: inset 0px -4px 0px 0px var(--calcite-color-brand);
  }
}

:host([selection-appearance="border"][layout="vertical"]) {
  .container.selected {
    --calcite-internal-tile-shadow: inset 4px 0px 0px 0px var(--calcite-color-brand);
  }
}

:host([href]:focus:not([disabled])),
:host([href]:hover:not([disabled])) {
  --calcite-internal-tile-border-color: var(--calcite-color-text-link);
  --calcite-internal-tile-heading-text-color: var(--calcite-color-text-link);
  --calcite-internal-tile-icon-color: var(--calcite-color-text-link);
  .container {
    position: relative;
    z-index: var(--calcite-z-index);
  }
}

:host([href]:active:not([disabled])) {
  .container {
    --calcite-internal-tile-shadow: 0 0 0 3px var(--calcite-tile-border-color);
  }
}

:host(:hover:not([disabled])),
:host([active]:not([disabled])) {
  --calcite-internal-tile-description-text-color: var(--calcite-color-text-2);
  --calcite-internal-tile-heading-text-color: var(--calcite-color-text-1);
}

:host([embed]) {
  .container {
    --calcite-internal-tile-shadow: none;
    padding: 0;
  }
}

:host([selection-mode="none"]) {
  .container {
    --calcite-internal-tile-outline-color: var(--calcite-internal-tile-border-color);

    &:focus {
      --calcite-internal-tile-outline-color: var(--calcite-color-brand);
      position: relative;
    }
  }
}

@include disabled();
@include base-component();
