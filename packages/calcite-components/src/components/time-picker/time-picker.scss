/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-time-picker-text-color: Specifies the text color of the component.
 * @prop --calcite-time-picker-background-color: Specifies the background color of the component.
 * @prop --calcite-time-picker-background-color-hover: Specifies the background color of the component when hovered.
 * @prop --calcite-time-picker-background-color-active: Specifies the background color of the component when active.
 * @prop --calcite-time-picker-icon-color: Specifies the color of the component's icons.
 * @prop --calcite-time-picker-input-box-shadow: Specifies the box shadow around the numbers inside the open component.
 * @prop --calcite-time-picker-input-box-shadow-focus: Specifies the box shadow around the numbers inside the open component when focused.
 */
time-picker :host {
  @apply inline-block;
}

.time-picker {
  @apply flex
    select-none
    items-center
    font-medium;

  background-color: var(--calcite-time-picker-background-color, var(--calcite-color-foreground-1));
  color: var(--calcite-time-picker-text-color, var(--calcite-color-text-1));
  box-shadow: var(--calcite-time-picker-shadow, var(--calcite-shadow-none));

  .column {
    @apply flex
      flex-col;
  }

  .meridiem--start {
    order: -1;
  }

  .button {
    @apply inline-flex
      cursor-pointer
      items-center
      justify-center;

    background-color: var(--calcite-time-picker-background-color, var(--calcite-color-foreground-1));

    &:hover,
    &:focus {
      @apply outline-none;
      background-color: var(--calcite-time-picker-background-color-hover, var(--calcite-color-foreground-2));
      z-index: theme("zIndex.header");
      outline-offset: 0;
    }
    &:active {
      background-color: var(--calcite-time-picker-background-color-active, var(--calcite-color-foreground-3));
    }
    &.top-left {
      border-start-start-radius: var(--calcite-border-radius);
    }
    &.bottom-left {
      border-end-start-radius: var(--calcite-border-radius);
    }
    &.top-right {
      border-start-end-radius: var(--calcite-border-radius);
    }
    &.bottom-right {
      border-end-end-radius: var(--calcite-border-radius);
    }
  }

  .input {
    @apply inline-flex
      cursor-pointer
      items-center
      justify-center
      font-medium;

    background-color: var(--calcite-time-picker-background-color, var(--calcite-color-foreground-1));

    &:hover {
      box-shadow: var(--calcite-time-picker-input-box-shadow, inset 0 0 0 2px var(--calcite-color-foreground-2));
      z-index: theme("zIndex.header");
    }
    &:focus,
    &:hover:focus {
      @apply outline-none;
      outline-offset: 0;
    }
    &.inputFocus,
    &:hover.inputFocus {
      box-shadow: var(--calcite-time-picker-input-box-shadow-focus, inset 0 0 0 2px var(--calcite-color-brand));
      z-index: theme("zIndex.header");
    }
  }

  &.scale-s {
    @apply text-n1;
    .button,
    .input {
      padding-block: var(--calcite-spacing-xxs);
      padding-inline: var(--calcite-spacing-md);
    }
    &:not(.show-meridiem) {
      .delimiter:last-child {
        padding-inline-end: theme("spacing.3");
      }
    }
  }

  &.scale-m {
    @apply text-0;
    .button,
    .input {
      padding-block: var(--calcite-spacing-sm);
      padding-inline: var(--calcite-spacing-xl);
    }
    &:not(.show-meridiem) {
      .delimiter:last-child {
        padding-inline-end: theme("spacing.4");
      }
    }
  }

  &.scale-l {
    @apply text-1;
    .button,
    .input {
      padding-block: var(--calcite-spacing-md);
      padding-inline: var(--calcite-spacing-xxl);
    }
    &:not(.show-meridiem) {
      .delimiter:last-child {
        padding-inline-end: theme("spacing.5");
      }
    }
  }
}

calcite-icon {
  --calcite-icon-color: var(--calcite-time-picker-icon-color, var(--calcite-color-text-3));
}

@include base-component();
