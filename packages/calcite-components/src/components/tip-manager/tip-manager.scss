/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-tip-manager-action-background-color: defines the background color of an action sub-component inside the component.
 * @prop --calcite-tip-manager-action-text-color: defines the text color of an action sub-component inside the component.
 * @prop --calcite-tip-manager-action-background-color-hover: defines the background color of an action sub-component when hovered or focused inside the component.
 * @prop --calcite-tip-manager-action-text-color-hover: defines the text color of an action sub-component when hovered or focused inside the component.
 * @prop --calcite-tip-manager-action-background-color-active: defines the background color of an action sub-component when active inside the component.
 * @prop --calcite-tip-manager-action-text-color-active: defines the text color of an action sub-component when active inside the component.
 * @prop --calcite-tip-manager-height: The maximum height of the component.
 * @prop --calcite-tip-max-width: The maximum width of a slotted `calcite-tip` within the component.
 *
 */

:host {
  @apply bg-foreground-1
  text-color-2
  text-n1h
  box-border
  block;

  * {
    @apply box-border;
  }

  --calcite-tip-manager-height: 19vh;
}

:host([closed]) {
  @apply hidden;
}

@include header();

.header {
  @apply border-color-3
    border-0
    border-b
    border-solid
    py-0;

  padding-inline-end: theme("padding.0");
  padding-inline-start: theme("padding.4");

  .heading {
    @apply text-color-1
      text-1h
      p-0
      font-bold;
  }
}

.container {
  @apply focus-base
    relative
    overflow-hidden;
  min-block-size: 150px;
  &:focus {
    @apply focus-outset;
  }
}

.tip-container {
  @apply focus-base
    mt-px
    flex
    items-start
    justify-center
    overflow-auto
    p-4;
  animation-name: none;
  animation-duration: var(--calcite-animation-timing);
  block-size: var(--calcite-tip-manager-height);
  &:focus {
    @apply focus-outset;
  }
}

::slotted(calcite-tip) {
  @apply m-0 border-none;
  max-inline-size: var(--calcite-tip-max-width);
}

.tip-container--advancing {
  animation-name: tip-advance;
}

.tip-container--retreating {
  animation-name: tip-retreat;
}

/* Pagination Styles*/
.pagination {
  @apply flex
  items-center
  justify-center
  px-0
  pt-3
  pb-2;
}

.page-position {
  @apply text-n2h my-0 mx-2;
}

/* @keyframes*/
@keyframes tip-advance {
  0% {
    @apply opacity-0;
    transform: translate3d(50px, 0, 0) scale(0.99);
  }
  100% {
    @apply opacity-100;
    transform: translate3d(0, 0, 0) scale(1);
  }
}
@keyframes tip-retreat {
  0% {
    @apply opacity-0;
    transform: translate3d(-50px, 0, 0) scale(0.99);
  }
  100% {
    @apply opacity-100;
    transform: translate3d(0, 0, 0) scale(1);
  }
}

calcite-action {
  --calcite-action-background-color: var(--calcite-tip-manager-action-background-color);
  --calcite-action-text-color: var(--calcite-tip-manager-action-text-color);

  &:hover,
  &:focus {
    --calcite-action-background-color: var(--calcite-tip-manager-action-background-color-hover);
    --calcite-action-text-color: var(--calcite-tip-manager-action-text-color-hover);
  }

  &:active {
    --calcite-action-background-color: var(--calcite-tip-manager-action-background-color-active);
    --calcite-action-text-color: var(--calcite-tip-manager-action-text-color-active);
  }
}

@include base-component();
