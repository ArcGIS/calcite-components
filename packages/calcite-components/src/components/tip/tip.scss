/**
* CSS Custom Properties  
*
* These properties can be overridden using the component's tag as selector.
*
* @prop --calcite-tip-border-color: The border color of the component.
* @prop --calcite-tip-color: The background color of the component.
* @prop --calcite-tip-font-size: The font size of the component.
* @prop --calcite-tip-text-color: The text color of the component.
*
* @prop --calcite-internal-tip-padding: The paddings around component elements.
* @prop --calcite-internal-tip-padding-block: The block paddings around component elements.
* @prop --calcite-internal-tip-padding-inline: The inline paddings around component elements.
* @prop --calcite-internal-tip-margin: The margins around component elements.
* @prop --calcite-internal-tip-margin-block: The block margins around component elements.
*
*/

:host {
  @apply relative
    box-border
    flex
    flex-row
    border
    border-solid;

  --calcite-tip-border-color: var(--calcite-color-border-2);
  --calcite-tip-color: var(--calcite-color-foreground-1);
  --calcite-tip-text-color: var(--calcite-color-text-2);
  --calcite-tip-font-size: theme("fontSize.n1");
  --calcite-internal-tip-margin: 1rem /* 16px */;

  * {
    @apply box-border;
  }
}

.container {
  @apply w-full;

  --calcite-internal-tip-padding: 1rem /* 16px */;
}

:host([closed]),
:host([closed]) .container {
  @apply hidden;
}

:host([selected]) .container {
  @apply border-none;

  --calcite-internal-tip-margin: 0;
  --calcite-internal-tip-padding: 0;
}

@import "../../assets/styles/header";

.header {
  @apply mb-2;
}

.header .heading {
  --calcite-internal-tip-padding: 0;
  --calcite-tip-font-size: theme("fontSize.0h");
  --calcite-tip-text-color: var(--calcite-color-text-1);
}

.container[hidden] {
  @apply hidden;
}

.content {
  @apply flex;
}

.info {
  inline-size: 70%;

  --calcite-internal-tip-padding-block: 0;
  --calcite-internal-tip-padding-inline: 1rem /* 16px */;

  &:only-child {
    --calcite-internal-tip-padding-inline: 0;
  }
}

::slotted(p) {
  @apply mt-0;
}

::slotted(a) {
  @apply focus-base;

  --calcite-tip-color: var(--calcite-color-brand);
}

::slotted(a:focus) {
  @apply focus-outset;
}

.image-frame {
  inline-size: theme("width[1/4]");
  img {
    @apply max-w-full;
  }
}

::slotted(img) {
  @apply max-w-full;
}

@include base-component();
