{"version":3,"names":["CSS","wrapper","wrapperBordered","container","indent","containerHover","containerBorder","containerBorderSelected","containerBorderUnselected","contentContainer","contentContainerSelectable","contentContainerHasCenterContent","nestedContainer","nestedContainerHidden","content","customContent","actionsStart","contentStart","label","description","contentEnd","contentBottom","actionsEnd","selectionContainer","selectionContainerSingle","openContainer","dragContainer","SLOTS","MAX_COLUMNS","ICONS","selectedMultiple","selectedSingle","unselectedMultiple","unselectedSingle","closedLTR","closedRTL","open","blank","close","activeCellTestAttribute","listSelector","listItemGroupSelector","listItemSelector","getListItemChildLists","slotEl","Array","from","assignedElements","flatten","filter","el","matches","getListItemChildren","listItemGroupChildren","map","group","querySelectorAll","reduce","previousValue","currentValue","listItemChildren","listItemListChildren","list","updateListItemChildren","forEach","listItem","setPosition","indexOf","setSize","length","getDepth","element","includeGroup","expression","result","document","evaluate","XPathResult","UNORDERED_NODE_SNAPSHOT_TYPE","snapshotLength","table","tableHeader","scrim","stack","tableContainer","sticky","assistiveText","debounceTimeout","filterNoResults","filterActionsStart","filterActionsEnd","listCss","CalciteListStyle0","listItemSelectorDirect","parentSelector","List","this","dragSelector","focusableItems","handleSelector","listItems","mutationObserver","createObserver","updateListItems","visibleItems","handleDefaultSlotChange","event","target","parentListEl","calciteInternalListDefaultSlotChange","emit","handleFilterActionsStartSlotChange","hasFilterActionsStart","slotChangeHasAssignedElement","handleFilterActionsEndSlotChange","hasFilterActionsEnd","handleFilterNoResultsSlotChange","hasFilterNoResults","setActiveListItem","some","item","active","updateSelectedItems","selectedItems","selected","calciteListChange","borderItems","filterHidden","allParentListItemsOpen","bordered","updateFilteredItems","filteredData","filterText","values","value","lastDescendantItems","every","li","contains","filteredItems","includes","visibleParents","WeakSet","filterElements","calciteListFilter","setFilterEl","filterEl","performFilter","handleFilterChange","stopPropagation","currentTarget","updateFilteredData","getItemData","metadata","debounce","selectionAppearance","selectionMode","dragEnabled","items","queryListItems","directItems","dragHandle","setUpSorting","filterEnabled","dataForFilter","closed","hidden","disabled","direct","focusRow","focusEl","setFocus","isNavigable","parentListItemEl","parentElement","closest","handleListKeydown","defaultPrevented","key","navigableItems","currentIndex","findIndex","preventDefault","nextIndex","prevIndex","homeItem","endItem","handleFilterTextChange","onMessagesChange","handleListItemChange","handleCalciteListItemToggle","handleCalciteInternalFocusPreviousItem","handleCalciteInternalListItemActive","handleCalciteListItemSelect","handleCalciteInternalAssistiveTextChange","detail","message","handleCalciteHandleNudge","handleNudgeEvent","handleCalciteInternalListItemSelect","handleCalciteInternalListItemSelectMultiple","lastSelectedInfo","selectedItem","selectMultiple","lastSelectedIndex","startIndex","Math","min","endIndex","max","slice","handleCalciteInternalListItemChange","handleCalciteInternalListItemGroupDefaultSlotChange","connectedCallback","dragActive","connectLocalized","connectMessages","connectObserver","connectInteractive","setParentList","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidRender","updateHostInteraction","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectObserver","disconnectSortableComponent","disconnectInteractive","disconnectLocalized","disconnectMessages","effectiveLocaleChange","updateMessages","effectiveLocale","componentFocusable","find","render","loading","filterPlaceholder","h","InteractiveContainer","class","renderItemAriaLive","toAriaBoolean","onKeyDown","role","colSpan","name","onSlotchange","slot","STACK_SLOTS","onCalciteFilterChange","placeholder","ref","messages","numberingSystem","numberStringFormatter","numberFormatOptions","locale","total","replace","localize","toString","observe","childList","subtree","disconnect","connectSortableComponent","onGlobalDragStart","onGlobalDragEnd","onDragEnd","calciteListDragEnd","onDragStart","calciteListDragStart","onDragSort","calciteListOrderChange","has","closestParent","add","parentItem","direction","composedPath","handle","tagName","dragEl","parentEl","sameParentItems","lastIndex","oldIndex","newIndex","blurUnselectDisabled","referenceEl","nextSibling","insertBefore","fromEl","toEl","then","listItemCss","CalciteListItemStyle0","focusMap","Map","ListItem","dragHandleSelectedChangeHandler","dragSelected","calciteListItemDragHandleChange","emitInternalListItemActive","calciteInternalListItemActive","focusCellHandle","handleCellFocusIn","handleGridEl","focusCellActionsStart","actionsStartEl","focusCellContent","contentEl","focusCellActionsEnd","actionsEndEl","handleCloseClick","calciteListItemClose","handleContentSlotChange","hasCustomContent","handleActionsStartSlotChange","hasActionsStart","handleActionsEndSlotChange","hasActionsEnd","handleContentStartSlotChange","hasContentStart","handleContentEndSlotChange","hasContentEnd","handleContentBottomSlotChange","hasContentBottom","handleOpenableChange","handleToggleClick","toggle","calciteListItemToggle","handleItemClick","toggleSelected","shiftKey","calciteInternalListItemSelectMultiple","calciteListItemSelect","handleItemKeyDown","containerEl","openable","cells","getGridCells","cell","focusCell","calciteInternalFocusPreviousItem","focus","focusCellNull","setFocusCell","getFirstTabbable","focusedEl","saveFocusIndex","set","gridCells","tableCell","tabIndex","removeAttribute","setAttribute","activeHandler","handleClosedChange","emitCalciteInternalListItemChange","handleDisabledChange","handleOpenChange","emitCalciteInternalListItemToggle","handleSelectedChange","calciteInternalListItemSelect","handleCalciteInternalListDefaultSlotChanges","defaultSlotEl","level","setSelectionDefaults","focusIndex","get","renderSelected","onClick","icon","scale","renderDragHandle","dragDisabled","onFocusin","onCalciteHandleChange","renderOpen","dir","getElementDir","tooltip","collapse","expand","title","renderActionsStart","renderActionsEnd","closable","appearance","text","renderContentStart","renderCustomContent","renderContentEnd","renderContentBottom","renderDefaultContainer","renderContentProperties","renderContentContainer","hasCenterContent","showBorder","borderSelected","borderUnselected","Host","onFocus","calciteInternalListItemToggle","calciteInternalListItemChange","listItemChildLists","heading","listItemGroupCss","CalciteListItemGroupStyle0","ListItemGroup","calciteInternalListItemGroupDefaultSlotChange"],"sources":["src/components/list-item/resources.ts","src/components/list-item/utils.ts","src/components/list/resources.ts","src/components/list/list.scss?tag=calcite-list&encapsulation=shadow","src/components/list/list.tsx","src/components/list-item/list-item.scss?tag=calcite-list-item&encapsulation=shadow","src/components/list-item/list-item.tsx","src/components/list-item-group/resources.ts","src/components/list-item-group/list-item-group.scss?tag=calcite-list-item-group&encapsulation=shadow","src/components/list-item-group/list-item-group.tsx"],"sourcesContent":["export const CSS = {\n  wrapper: \"wrapper\",\n  wrapperBordered: \"wrapper--bordered\",\n  container: \"container\",\n  indent: \"indent\",\n  containerHover: \"container--hover\",\n  containerBorder: \"container--border\",\n  containerBorderSelected: \"container--border-selected\",\n  containerBorderUnselected: \"container--border-unselected\",\n  contentContainer: \"content-container\",\n  contentContainerSelectable: \"content-container--selectable\",\n  contentContainerHasCenterContent: \"content-container--has-center-content\",\n  nestedContainer: \"nested-container\",\n  nestedContainerHidden: \"nested-container--hidden\",\n  content: \"content\",\n  customContent: \"custom-content\",\n  actionsStart: \"actions-start\",\n  contentStart: \"content-start\",\n  label: \"label\",\n  description: \"description\",\n  contentEnd: \"content-end\",\n  contentBottom: \"content-bottom\",\n  actionsEnd: \"actions-end\",\n  selectionContainer: \"selection-container\",\n  selectionContainerSingle: \"selection-container--single\",\n  openContainer: \"open-container\",\n  dragContainer: \"drag-container\",\n};\n\nexport const SLOTS = {\n  actionsStart: \"actions-start\",\n  contentStart: \"content-start\",\n  content: \"content\",\n  contentBottom: \"content-bottom\",\n  contentEnd: \"content-end\",\n  actionsEnd: \"actions-end\",\n};\n\n// Set to zero to extend until the end of the table section.\nexport const MAX_COLUMNS = 0;\n\nexport const ICONS = {\n  selectedMultiple: \"check-square-f\",\n  selectedSingle: \"bullet-point-large\",\n  unselectedMultiple: \"square\",\n  unselectedSingle: \"bullet-point-large\",\n  closedLTR: \"chevron-right\",\n  closedRTL: \"chevron-left\",\n  open: \"chevron-down\",\n  blank: \"blank\",\n  close: \"x\",\n};\n\nexport const activeCellTestAttribute = \"data-test-active\";\n","import { Build } from \"@stencil/core\";\n\nconst listSelector = \"calcite-list\";\nconst listItemGroupSelector = \"calcite-list-item-group\";\nconst listItemSelector = \"calcite-list-item\";\n\nexport function getListItemChildLists(slotEl: HTMLSlotElement): HTMLCalciteListElement[] {\n  return Array.from(\n    slotEl.assignedElements({ flatten: true }).filter((el) => el.matches(listSelector)),\n  ) as HTMLCalciteListElement[];\n}\n\nexport function getListItemChildren(slotEl: HTMLSlotElement): HTMLCalciteListItemElement[] {\n  const assignedElements = slotEl.assignedElements({ flatten: true });\n\n  const listItemGroupChildren = (\n    assignedElements.filter((el) => el?.matches(listItemGroupSelector)) as HTMLCalciteListItemGroupElement[]\n  )\n    .map((group) => Array.from(group.querySelectorAll(listItemSelector)))\n    .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n  const listItemChildren = assignedElements.filter((el) =>\n    el?.matches(listItemSelector),\n  ) as HTMLCalciteListItemElement[];\n\n  const listItemListChildren = (assignedElements.filter((el) => el?.matches(listSelector)) as HTMLCalciteListElement[])\n    .map((list) => Array.from(list.querySelectorAll(listItemSelector)))\n    .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n  return [...listItemListChildren, ...listItemGroupChildren, ...listItemChildren];\n}\n\nexport function updateListItemChildren(listItemChildren: HTMLCalciteListItemElement[]): void {\n  listItemChildren.forEach((listItem) => {\n    listItem.setPosition = listItemChildren.indexOf(listItem) + 1;\n    listItem.setSize = listItemChildren.length;\n  });\n}\n\nexport function getDepth(element: HTMLElement, includeGroup = false): number {\n  if (!Build.isBrowser) {\n    return 0;\n  }\n\n  const expression = includeGroup\n    ? \"ancestor::calcite-list-item | ancestor::calcite-list-item-group\"\n    : \"ancestor::calcite-list-item\";\n\n  const result = document.evaluate(expression, element, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null);\n\n  return result.snapshotLength;\n}\n","export const CSS = {\n  container: \"container\",\n  table: \"table\",\n  tableHeader: \"table-header\",\n  scrim: \"scrim\",\n  stack: \"stack\",\n  tableContainer: \"table-container\",\n  sticky: \"sticky-pos\",\n  assistiveText: \"assistive-text\",\n};\n\nexport const debounceTimeout = 0;\n\nexport type SelectionAppearance = \"border\" | \"icon\";\n\nexport const SLOTS = {\n  filterNoResults: \"filter-no-results\",\n  filterActionsStart: \"filter-actions-start\",\n  filterActionsEnd: \"filter-actions-end\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-list-background-color: Specifies the background color of the component.\n * @prop --calcite-list-border-color: Specifies the border color of the component.\n * @prop --calcite-list-filter-background-color: Specifies the background color of the filter sub-component.\n * @prop --calcite-list-filter-input-background-color: defines the background color of the filter input sub-component.\n * @prop --calcite-list-filter-input-border-color: defines the border color of the filter input sub-component.\n * @prop --calcite-list-filter-input-button-background-color: defines the background color of the filter input button in the input sub-component.\n * @prop --calcite-list-filter-input-button-background-color-hover: defines the background color of the filter input button when hovered in the input sub-component.\n * @prop --calcite-list-filter-input-button-border-color: defines the border color of the button in the filter input sub-component.\n * @prop --calcite-list-filter-input-button-icon-color: defines the icon color of the button in the filter input sub-component.\n * @prop --calcite-list-filter-input-button-icon-color-active: defines the icon color of the button when active in the filter input sub-component.\n * @prop --calcite-list-filter-input-button-icon-color-hover: defines the icon color of the button when hovered in the filter input sub-component.\n * @prop --calcite-list-filter-input-corner-radius: defines the corner radius of the input sub-component.\n * @prop --calcite-list-filter-input-icon-color: defines the icon color of the filter input sub-component.\n * @prop --calcite-list-filter-input-placeholder-text-color: defines the placeholder text color of the filter input sub-component.\n * @prop --calcite-list-filter-input-text-color: defines the text color of the filter input sub-component.\n * @prop --calcite-list-header-z-index: Specifies the component header's z-index.\n */\n\n:host {\n  display: block;\n}\n\n@include disabled();\n\n.container {\n  position: relative;\n}\n\n.table-container {\n  box-sizing: border-box;\n  display: flex;\n  inline-size: var(--calcite-container-size-content-fluid);\n  flex-direction: column;\n  background-color: var(--calcite-list-background-color, var(--calcite-color-foreground-1));\n  * {\n    box-sizing: border-box;\n  }\n}\n\n.table {\n  inline-size: var(--calcite-container-size-content-fluid);\n  border-collapse: collapse;\n}\n\n.stack {\n  --calcite-stack-padding-inline: 0;\n  --calcite-stack-padding-block: 0;\n}\n\n::slotted(calcite-list-item:not([filter-hidden], [closed])) {\n  border-block-start: var(--calcite-border-width-sm) solid\n    var(--calcite-list-border-color, var(--calcite-color-border-3));\n}\n\n// removes border for the first item of the group for both filtered and unfiltered items.\n::slotted(calcite-list-item:nth-child(1 of :not([hidden]))) {\n  border: none;\n}\n\n// removes shadow for the first item in filteredItems of the list.\n::slotted(calcite-list-item[data-filter]) {\n  border: none;\n}\n\n.sticky-pos {\n  position: sticky;\n  inset-block-start: 0px;\n  z-index: var(--calcite-list-header-z-index, var(--calcite-z-index-sticky));\n  background-color: var(--calcite-list-background-color, var(--calcite-color-foreground-1));\n}\n\n.table-header {\n  padding: 0;\n}\n\n.assistive-text {\n  @include srOnly();\n}\n\ncalcite-filter {\n  --calcite-filter-background-color: var(--calcite-list-filter-background-color);\n  --calcite-filter-input-corner-radius: var(--calcite-list-filter-input-corner-radius);\n  --calcite-filter-input-text-color: var(--calcite-list-filter-input-text-color);\n  --calcite-filter-input-border-color: var(--calcite-list-filter-input-border-color);\n  --calcite-filter-input-background-color: var(--calcite-list-filter-input-background-color);\n  --calcite-filter-input-button-background-color: var(--calcite-list-filter-input-button-background-color);\n  --calcite-filter-input-button-background-color-hover: var(--calcite-list-filter-input-button-background-color-hover);\n  --calcite-filter-input-icon-color: var(--calcite-list-filter-input-icon-color);\n  --calcite-filter-input-button-icon-color: var(--calcite-list-filter-input-button-icon-color);\n  --calcite-filter-input-button-icon-color-active: var(--calcite-list-filter-input-button-icon-color-active);\n  --calcite-filter-input-button-icon-color-hover: var(--calcite-list-filter-input-button-icon-color-hover);\n  --calcite-filter-input-placeholder-text-color: var(--calcite-list-filter-input-placeholder-text-color);\n  --calcite-filter-input-button-border-color: var(--calcite-list-filter-input-button-border-color);\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport Sortable from \"sortablejs\";\nimport { debounce } from \"lodash-es\";\nimport { slotChangeHasAssignedElement, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { createObserver } from \"../../utils/observers\";\nimport { SelectionMode } from \"../interfaces\";\nimport { ItemData } from \"../list-item/interfaces\";\nimport { MAX_COLUMNS } from \"../list-item/resources\";\nimport { getListItemChildren, updateListItemChildren } from \"../list-item/utils\";\nimport {\n  connectSortableComponent,\n  disconnectSortableComponent,\n  SortableComponent,\n  dragActive,\n} from \"../../utils/sortableComponent\";\nimport { SLOTS as STACK_SLOTS } from \"../stack/resources\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { HandleNudge } from \"../handle/interfaces\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport { CSS, debounceTimeout, SelectionAppearance, SLOTS } from \"./resources\";\nimport { ListMessages } from \"./assets/list/t9n\";\nimport { ListDragDetail } from \"./interfaces\";\n\nconst listItemSelector = \"calcite-list-item\";\nconst listItemSelectorDirect = `:scope > calcite-list-item`;\nconst parentSelector = \"calcite-list-item-group, calcite-list-item\";\n\n/**\n * A general purpose list that enables users to construct list items that conform to Calcite styling.\n *\n * @slot - A slot for adding `calcite-list-item` elements.\n * @slot filter-actions-start - A slot for adding actionable `calcite-action` elements before the filter component.\n * @slot filter-actions-end - A slot for adding actionable `calcite-action` elements after the filter component.\n * @slot filter-no-results - When `filterEnabled` is `true`, a slot for adding content to display when no results are found.\n */\n@Component({\n  tag: \"calcite-list\",\n  styleUrl: \"list.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class List\n  implements\n    InteractiveComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    SortableComponent,\n    T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * When provided, the method will be called to determine whether the element can  move from the list.\n   */\n  @Prop() canPull: (detail: ListDragDetail) => boolean;\n\n  /**\n   * When provided, the method will be called to determine whether the element can be added from another list.\n   */\n  @Prop() canPut: (detail: ListDragDetail) => boolean;\n\n  /**\n   * When `true`, `calcite-list-item`s are sortable via a draggable button.\n   */\n  @Prop({ reflect: true }) dragEnabled = false;\n\n  /**\n   * The list's group identifier.\n   *\n   * To drag elements from one list into another, both lists must have the same group value.\n   */\n  @Prop({ reflect: true }) group?: string;\n\n  /**\n   * When `true`, an input appears at the top of the component that can be used by end users to filter `calcite-list-item`s.\n   */\n  @Prop({ reflect: true }) filterEnabled = false;\n\n  /**\n   * The currently filtered `calcite-list-item`s.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) filteredItems: HTMLCalciteListItemElement[] = [];\n\n  /**\n   * The currently filtered `calcite-list-item` data.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) filteredData: ItemData = [];\n\n  /**\n   * Placeholder text for the component's filter input field.\n   */\n  @Prop({ reflect: true }) filterPlaceholder: string;\n\n  /**\n   * Text for the component's filter input field.\n   */\n  @Prop({ reflect: true, mutable: true }) filterText: string;\n\n  @Watch(\"filterText\")\n  async handleFilterTextChange(): Promise<void> {\n    this.performFilter();\n  }\n\n  /**\n   * Specifies an accessible name for the component.\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ListMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ListMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   */\n  @Prop() numberingSystem: NumberingSystem;\n\n  /**\n   * One of the items within the list can be opened.\n   *\n   * @internal\n   */\n  @Prop() openable = false;\n\n  /**\n   * The currently selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteListItemElement[] = [];\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"single\"` allows only one selection,\n   *\n   * `\"single-persist\"` allows one selection and prevents de-selection, and\n   *\n   * `\"none\"` does not allow any selections.\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"none\" | \"multiple\" | \"single\" | \"single-persist\",\n    SelectionMode\n  > = \"none\";\n\n  /**\n   * Specifies the selection appearance - `\"icon\"` (displays a checkmark or dot) or `\"border\"` (displays a border).\n   */\n  @Prop({ reflect: true }) selectionAppearance: SelectionAppearance = \"icon\";\n\n  @Watch(\"filterEnabled\")\n  @Watch(\"group\")\n  @Watch(\"dragEnabled\")\n  @Watch(\"selectionMode\")\n  @Watch(\"selectionAppearance\")\n  handleListItemChange(): void {\n    this.updateListItems();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component's selected items have changed.\n   */\n  @Event({ cancelable: false }) calciteListChange: EventEmitter<void>;\n\n  /**\n   * Fires when the component's dragging has ended.\n   */\n  @Event({ cancelable: false }) calciteListDragEnd: EventEmitter<ListDragDetail>;\n\n  /**\n   * Fires when the component's dragging has started.\n   */\n  @Event({ cancelable: false }) calciteListDragStart: EventEmitter<ListDragDetail>;\n\n  /**\n   * Fires when the component's filter has changed.\n   */\n  @Event({ cancelable: false }) calciteListFilter: EventEmitter<void>;\n\n  /**\n   * Fires when the component's item order changes.\n   */\n  @Event({ cancelable: false }) calciteListOrderChange: EventEmitter<ListDragDetail>;\n\n  /**\n   * Fires when the default slot has changes in order to notify parent lists.\n   */\n  @Event({ cancelable: false }) calciteInternalListDefaultSlotChange: EventEmitter<void>;\n\n  @Listen(\"calciteInternalListItemToggle\")\n  handleCalciteListItemToggle(event: CustomEvent): void {\n    if (this.parentListEl) {\n      return;\n    }\n\n    event.stopPropagation();\n    this.borderItems();\n  }\n\n  @Listen(\"calciteInternalFocusPreviousItem\")\n  handleCalciteInternalFocusPreviousItem(event: CustomEvent): void {\n    if (this.parentListEl) {\n      return;\n    }\n\n    event.stopPropagation();\n\n    const { focusableItems } = this;\n    const currentIndex = focusableItems.findIndex((listItem) => listItem.active);\n\n    const prevIndex = currentIndex - 1;\n\n    if (focusableItems[prevIndex]) {\n      this.focusRow(focusableItems[prevIndex]);\n    }\n  }\n\n  @Listen(\"calciteInternalListItemActive\")\n  handleCalciteInternalListItemActive(event: CustomEvent): void {\n    if (this.parentListEl) {\n      return;\n    }\n\n    event.stopPropagation();\n    const target = event.target as HTMLCalciteListItemElement;\n    const { listItems } = this;\n\n    listItems.forEach((listItem) => {\n      listItem.active = listItem === target;\n    });\n  }\n\n  @Listen(\"calciteListItemSelect\")\n  handleCalciteListItemSelect(): void {\n    if (this.parentListEl) {\n      return;\n    }\n\n    this.updateSelectedItems(true);\n  }\n\n  @Listen(\"calciteInternalAssistiveTextChange\")\n  handleCalciteInternalAssistiveTextChange(event: CustomEvent): void {\n    this.assistiveText = event.detail.message;\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteHandleNudge\")\n  handleCalciteHandleNudge(event: CustomEvent<HandleNudge>): void {\n    if (this.parentListEl) {\n      return;\n    }\n\n    this.handleNudgeEvent(event);\n  }\n\n  @Listen(\"calciteInternalListItemSelect\")\n  handleCalciteInternalListItemSelect(event: CustomEvent): void {\n    if (this.parentListEl) {\n      return;\n    }\n\n    event.stopPropagation();\n    const target = event.target as HTMLCalciteListItemElement;\n    const { listItems, selectionMode } = this;\n\n    if (target.selected && (selectionMode === \"single\" || selectionMode === \"single-persist\")) {\n      listItems.forEach((listItem) => (listItem.selected = listItem === target));\n    }\n\n    this.updateSelectedItems();\n  }\n\n  @Listen(\"calciteInternalListItemSelectMultiple\")\n  handleCalciteInternalListItemSelectMultiple(\n    event: CustomEvent<{\n      selectMultiple: boolean;\n    }>,\n  ): void {\n    if (this.parentListEl) {\n      return;\n    }\n\n    event.stopPropagation();\n    const { target, detail } = event;\n    const { focusableItems, lastSelectedInfo } = this;\n    const selectedItem = target as HTMLCalciteListItemElement;\n\n    if (detail.selectMultiple && !!lastSelectedInfo) {\n      const currentIndex = focusableItems.indexOf(selectedItem);\n      const lastSelectedIndex = focusableItems.indexOf(lastSelectedInfo.selectedItem);\n      const startIndex = Math.min(lastSelectedIndex, currentIndex);\n      const endIndex = Math.max(lastSelectedIndex, currentIndex);\n\n      focusableItems\n        .slice(startIndex, endIndex + 1)\n        .forEach((item) => (item.selected = lastSelectedInfo.selected));\n    } else {\n      this.lastSelectedInfo = { selectedItem, selected: selectedItem.selected };\n    }\n  }\n\n  @Listen(\"calciteInternalListItemChange\")\n  handleCalciteInternalListItemChange(event: CustomEvent): void {\n    if (this.parentListEl) {\n      return;\n    }\n\n    event.stopPropagation();\n    this.updateListItems();\n  }\n\n  @Listen(\"calciteInternalListItemGroupDefaultSlotChange\")\n  handleCalciteInternalListItemGroupDefaultSlotChange(event: CustomEvent): void {\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (dragActive(this)) {\n      return;\n    }\n\n    connectLocalized(this);\n    connectMessages(this);\n    this.connectObserver();\n    this.updateListItems();\n    this.setUpSorting();\n    connectInteractive(this);\n    this.setParentList();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    if (dragActive(this)) {\n      return;\n    }\n\n    this.disconnectObserver();\n    disconnectSortableComponent(this);\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ListMessages;\n\n  @Element() el: HTMLCalciteListElement;\n\n  @State() assistiveText: string;\n\n  @State() dataForFilter: ItemData = [];\n\n  dragSelector = listItemSelector;\n\n  filterEl: HTMLCalciteFilterElement;\n\n  focusableItems: HTMLCalciteListItemElement[] = [];\n\n  handleSelector = \"calcite-handle\";\n\n  @State() hasFilterActionsEnd = false;\n\n  @State() hasFilterActionsStart = false;\n\n  @State() hasFilterNoResults = false;\n\n  listItems: HTMLCalciteListItemElement[] = [];\n\n  mutationObserver = createObserver(\"mutation\", () => this.updateListItems());\n\n  visibleItems: HTMLCalciteListItemElement[] = [];\n\n  parentListEl: HTMLCalciteListElement;\n\n  sortable: Sortable;\n\n  private lastSelectedInfo: { selectedItem: HTMLCalciteListItemElement; selected: boolean };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first focusable element.\n   *\n   * @returns {Promise<void>}\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    if (this.filterEnabled) {\n      return this.filterEl?.setFocus();\n    }\n\n    return this.focusableItems.find((listItem) => listItem.active)?.setFocus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const {\n      loading,\n      label,\n      disabled,\n      dataForFilter,\n      filterEnabled,\n      filterPlaceholder,\n      filterText,\n      filteredItems,\n      hasFilterActionsStart,\n      hasFilterActionsEnd,\n      hasFilterNoResults,\n    } = this;\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <div class={CSS.container}>\n          {this.dragEnabled ? (\n            <span aria-live=\"assertive\" class={CSS.assistiveText}>\n              {this.assistiveText}\n            </span>\n          ) : null}\n          {this.renderItemAriaLive()}\n          {loading ? <calcite-scrim class={CSS.scrim} loading={loading} /> : null}\n          <table\n            aria-busy={toAriaBoolean(loading)}\n            aria-label={label || \"\"}\n            class={CSS.table}\n            onKeyDown={this.handleListKeydown}\n            role=\"treegrid\"\n          >\n            {filterEnabled || hasFilterActionsStart || hasFilterActionsEnd ? (\n              <thead>\n                <tr class={{ [CSS.sticky]: true }}>\n                  <th class={CSS.tableHeader} colSpan={MAX_COLUMNS}>\n                    <calcite-stack class={CSS.stack}>\n                      <slot\n                        name={SLOTS.filterActionsStart}\n                        onSlotchange={this.handleFilterActionsStartSlotChange}\n                        slot={STACK_SLOTS.actionsStart}\n                      />\n                      <calcite-filter\n                        aria-label={filterPlaceholder}\n                        disabled={disabled}\n                        items={dataForFilter}\n                        onCalciteFilterChange={this.handleFilterChange}\n                        placeholder={filterPlaceholder}\n                        ref={this.setFilterEl}\n                        value={filterText}\n                      />\n                      <slot\n                        name={SLOTS.filterActionsEnd}\n                        onSlotchange={this.handleFilterActionsEndSlotChange}\n                        slot={STACK_SLOTS.actionsEnd}\n                      />\n                    </calcite-stack>\n                  </th>\n                </tr>\n              </thead>\n            ) : null}\n            <tbody class={CSS.tableContainer}>\n              <slot onSlotchange={this.handleDefaultSlotChange} />\n            </tbody>\n          </table>\n          <div\n            aria-live=\"polite\"\n            data-test-id=\"no-results-container\"\n            hidden={!(hasFilterNoResults && filterEnabled && filterText && !filteredItems.length)}\n          >\n            <slot\n              name={SLOTS.filterNoResults}\n              onSlotchange={this.handleFilterNoResultsSlotChange}\n            />\n          </div>\n        </div>\n      </InteractiveContainer>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private renderItemAriaLive(): VNode {\n    const {\n      messages,\n      filteredItems,\n      parentListEl,\n      effectiveLocale,\n      numberingSystem,\n      filterEnabled,\n      filterText,\n      filteredData,\n    } = this;\n\n    numberStringFormatter.numberFormatOptions = {\n      locale: effectiveLocale,\n      numberingSystem,\n    };\n\n    return !parentListEl ? (\n      <div aria-live=\"polite\" class={CSS.assistiveText}>\n        {filterEnabled && filterText && filteredData?.length ? (\n          <div key=\"aria-filter-enabled\">{messages.filterEnabled}</div>\n        ) : null}\n        <div key=\"aria-item-count\">\n          {messages.total.replace(\n            \"{count}\",\n            numberStringFormatter.localize(filteredItems.length.toString()),\n          )}\n        </div>\n        {filteredItems.length ? (\n          <ol key=\"aria-item-list\">\n            {filteredItems.map((item) => (\n              <li>{item.label}</li>\n            ))}\n          </ol>\n        ) : null}\n      </div>\n    ) : null;\n  }\n\n  private connectObserver(): void {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n\n  private disconnectObserver(): void {\n    this.mutationObserver?.disconnect();\n  }\n\n  private setUpSorting(): void {\n    const { dragEnabled } = this;\n\n    if (!dragEnabled) {\n      return;\n    }\n\n    connectSortableComponent(this);\n  }\n\n  onGlobalDragStart(): void {\n    this.disconnectObserver();\n  }\n\n  onGlobalDragEnd(): void {\n    this.connectObserver();\n  }\n\n  onDragEnd(detail: ListDragDetail): void {\n    this.calciteListDragEnd.emit(detail);\n  }\n\n  onDragStart(detail: ListDragDetail): void {\n    this.calciteListDragStart.emit(detail);\n  }\n\n  onDragSort(detail: ListDragDetail): void {\n    this.setParentList();\n    this.updateListItems();\n\n    this.calciteListOrderChange.emit(detail);\n  }\n\n  private setParentList(): void {\n    this.parentListEl = this.el.parentElement?.closest(\"calcite-list\");\n  }\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    updateListItemChildren(getListItemChildren(event.target as HTMLSlotElement));\n    if (this.parentListEl) {\n      this.calciteInternalListDefaultSlotChange.emit();\n    }\n  };\n\n  private handleFilterActionsStartSlotChange = (event: Event): void => {\n    this.hasFilterActionsStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleFilterActionsEndSlotChange = (event: Event): void => {\n    this.hasFilterActionsEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleFilterNoResultsSlotChange = (event: Event): void => {\n    this.hasFilterNoResults = slotChangeHasAssignedElement(event);\n  };\n\n  private setActiveListItem = (): void => {\n    const { focusableItems } = this;\n\n    if (!focusableItems.some((item) => item.active)) {\n      if (focusableItems[0]) {\n        focusableItems[0].active = true;\n      }\n    }\n  };\n\n  private updateSelectedItems = (emit = false): void => {\n    this.selectedItems = this.visibleItems.filter((item) => item.selected);\n    if (emit) {\n      this.calciteListChange.emit();\n    }\n  };\n\n  private filterElements({\n    el,\n    filteredItems,\n    visibleParents,\n  }: {\n    el: HTMLCalciteListItemElement | HTMLCalciteListItemGroupElement;\n    filteredItems: HTMLCalciteListItemElement[];\n    visibleParents: WeakSet<HTMLCalciteListItemElement | HTMLCalciteListItemGroupElement>;\n  }): void {\n    const filterHidden =\n      !visibleParents.has(el) && !filteredItems.includes(el as HTMLCalciteListItemElement);\n\n    el.filterHidden = filterHidden;\n\n    const closestParent = el.parentElement.closest(parentSelector) as\n      | HTMLCalciteListItemElement\n      | HTMLCalciteListItemGroupElement;\n\n    if (!closestParent) {\n      return;\n    }\n\n    if (!filterHidden) {\n      visibleParents.add(closestParent);\n    }\n\n    this.filterElements({\n      el: closestParent,\n      filteredItems,\n      visibleParents,\n    });\n  }\n\n  private allParentListItemsOpen(item: HTMLCalciteListItemElement): boolean {\n    const parentItem = item.parentElement?.closest(listItemSelector);\n\n    if (!parentItem) {\n      return true;\n    } else if (!parentItem.open) {\n      return false;\n    }\n\n    return this.allParentListItemsOpen(parentItem);\n  }\n\n  private borderItems = (): void => {\n    const visibleItems = this.visibleItems.filter(\n      (item) => !item.filterHidden && this.allParentListItemsOpen(item),\n    );\n\n    visibleItems.forEach(\n      (item) => (item.bordered = item !== visibleItems[visibleItems.length - 1]),\n    );\n  };\n\n  private updateFilteredItems = (emit = false): void => {\n    const { visibleItems, filteredData, filterText } = this;\n\n    const values = filteredData.map((item) => item.value);\n\n    const lastDescendantItems = visibleItems?.filter((listItem) =>\n      visibleItems.every((li) => li === listItem || !listItem.contains(li)),\n    );\n\n    const filteredItems =\n      visibleItems.filter((item) => !filterText || values.includes(item.value)) || [];\n\n    const visibleParents = new WeakSet<HTMLElement>();\n\n    lastDescendantItems.forEach((listItem) =>\n      this.filterElements({ el: listItem, filteredItems, visibleParents }),\n    );\n\n    this.filteredItems = filteredItems;\n\n    if (emit) {\n      this.calciteListFilter.emit();\n    }\n  };\n\n  private updateFilteredData(emit = false): void {\n    const { filterEl } = this;\n\n    if (!filterEl) {\n      return;\n    }\n\n    if (filterEl.filteredItems) {\n      this.filteredData = filterEl.filteredItems as ItemData;\n    }\n\n    this.updateListItems(emit);\n  }\n\n  private async performFilter(): Promise<void> {\n    const { filterEl, filterText } = this;\n\n    if (!filterEl) {\n      return;\n    }\n\n    filterEl.value = filterText;\n    await filterEl.filter(filterText);\n    this.updateFilteredData();\n  }\n\n  private setFilterEl = (el: HTMLCalciteFilterElement): void => {\n    this.filterEl = el;\n    this.performFilter();\n  };\n\n  private handleFilterChange = (event: CustomEvent): void => {\n    event.stopPropagation();\n    const { value } = event.currentTarget as HTMLCalciteFilterElement;\n    this.filterText = value;\n    this.updateFilteredData(true);\n  };\n\n  private getItemData = (): ItemData => {\n    return this.listItems.map((item) => ({\n      label: item.label,\n      description: item.description,\n      metadata: item.metadata,\n      value: item.value,\n    }));\n  };\n\n  private updateListItems = debounce((emit = false): void => {\n    const { selectionAppearance, selectionMode, dragEnabled } = this;\n\n    const items = this.queryListItems();\n    items.forEach((item) => {\n      item.selectionAppearance = selectionAppearance;\n      item.selectionMode = selectionMode;\n    });\n\n    const directItems = this.queryListItems(true);\n    directItems.forEach((item) => {\n      item.dragHandle = dragEnabled;\n    });\n\n    if (this.parentListEl) {\n      this.setUpSorting();\n      return;\n    }\n\n    this.listItems = items;\n    if (this.filterEnabled) {\n      this.dataForFilter = this.getItemData();\n      if (this.filterEl) {\n        this.filterEl.items = this.dataForFilter;\n      }\n    }\n    this.visibleItems = this.listItems.filter((item) => !item.closed && !item.hidden);\n    this.updateFilteredItems(emit);\n    this.borderItems();\n    this.focusableItems = this.filteredItems.filter((item) => !item.disabled);\n    this.setActiveListItem();\n    this.updateSelectedItems(emit);\n    this.setUpSorting();\n  }, debounceTimeout);\n\n  private queryListItems = (direct = false): HTMLCalciteListItemElement[] => {\n    return Array.from(this.el.querySelectorAll(direct ? listItemSelectorDirect : listItemSelector));\n  };\n\n  private focusRow = (focusEl: HTMLCalciteListItemElement): void => {\n    const { focusableItems } = this;\n\n    if (!focusEl) {\n      return;\n    }\n\n    focusableItems.forEach((listItem) => (listItem.active = listItem === focusEl));\n\n    focusEl.setFocus();\n  };\n\n  private isNavigable = (listItem: HTMLCalciteListItemElement): boolean => {\n    const parentListItemEl = listItem.parentElement?.closest(listItemSelector);\n\n    if (!parentListItemEl) {\n      return true;\n    }\n\n    return parentListItemEl.open && this.isNavigable(parentListItemEl);\n  };\n\n  private handleListKeydown = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented || !!this.parentListEl) {\n      return;\n    }\n\n    const { key } = event;\n    const navigableItems = this.focusableItems.filter((listItem) => this.isNavigable(listItem));\n    const currentIndex = navigableItems.findIndex((listItem) => listItem.active);\n\n    if (key === \"ArrowDown\") {\n      event.preventDefault();\n      const nextIndex = event.target === this.filterEl ? 0 : currentIndex + 1;\n\n      if (navigableItems[nextIndex]) {\n        this.focusRow(navigableItems[nextIndex]);\n      }\n    } else if (key === \"ArrowUp\") {\n      event.preventDefault();\n\n      if (currentIndex === 0 && this.filterEnabled) {\n        this.filterEl?.setFocus();\n        return;\n      }\n\n      const prevIndex = currentIndex - 1;\n\n      if (navigableItems[prevIndex]) {\n        this.focusRow(navigableItems[prevIndex]);\n      }\n    } else if (key === \"Home\") {\n      event.preventDefault();\n      const homeItem = navigableItems[0];\n\n      if (homeItem) {\n        this.focusRow(homeItem);\n      }\n    } else if (key === \"End\") {\n      event.preventDefault();\n      const endItem = navigableItems[navigableItems.length - 1];\n\n      if (endItem) {\n        this.focusRow(endItem);\n      }\n    }\n  };\n\n  handleNudgeEvent(event: CustomEvent<HandleNudge>): void {\n    const { handleSelector, dragSelector } = this;\n    const { direction } = event.detail;\n\n    const composedPath = event.composedPath();\n\n    const handle = composedPath.find(\n      (el: HTMLElement) => el?.tagName && el.matches(handleSelector),\n    ) as HTMLCalciteHandleElement;\n\n    const dragEl = composedPath.find(\n      (el: HTMLElement) => el?.tagName && el.matches(dragSelector),\n    ) as HTMLCalciteListItemElement;\n\n    const parentEl = dragEl?.parentElement as HTMLCalciteListElement;\n\n    if (!parentEl) {\n      return;\n    }\n\n    const { filteredItems } = this;\n\n    const sameParentItems = filteredItems.filter((item) => item.parentElement === parentEl);\n\n    const lastIndex = sameParentItems.length - 1;\n    const oldIndex = sameParentItems.indexOf(dragEl);\n    let newIndex: number;\n\n    if (direction === \"up\") {\n      newIndex = oldIndex === 0 ? lastIndex : oldIndex - 1;\n    } else {\n      newIndex = oldIndex === lastIndex ? 0 : oldIndex + 1;\n    }\n\n    this.disconnectObserver();\n    handle.blurUnselectDisabled = true;\n\n    const referenceEl =\n      (direction === \"up\" && newIndex !== lastIndex) || (direction === \"down\" && newIndex === 0)\n        ? sameParentItems[newIndex]\n        : sameParentItems[newIndex].nextSibling;\n\n    parentEl.insertBefore(dragEl, referenceEl);\n\n    this.updateListItems();\n    this.connectObserver();\n\n    this.calciteListOrderChange.emit({\n      dragEl,\n      fromEl: parentEl,\n      toEl: parentEl,\n      newIndex,\n      oldIndex,\n    });\n\n    handle.setFocus().then(() => (handle.blurUnselectDisabled = false));\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-list-item-background-color-hover: Specifies the background color of the component when hovered.\n * @prop --calcite-list-item-background-color: Specifies the background color of the component.\n * @prop --calcite-list-item-border-color: Specifies the border color of the component.\n * @prop --calcite-list-item-content-text-color: Specifies the text color of the component's content.\n * @prop --calcite-list-item-description-text-color: Specifies the text color of the component's description.\n * @prop --calcite-list-item-focus: Specifies the focus of the component.\n* @prop --calcite-list-item-handle-icon-color: Specifies the icon color of the sub-component.\n* @prop --calcite-list-item-handle-icon-color-hover: Specifies the icon color of the sub-component when in hover state.\n* @prop --calcite-list-item-handle-icon-color-focus: Specifies the icon color of the sub-component when in focus state.\n* @prop --calcite-list-item-handle-icon-color-selected: Specifies the icon color of the sub-component when selected.\n* @prop --calcite-list-item-handle-background-color: Specifies the background color of the sub-component.\n* @prop --calcite-list-item-handle-background-color-hover: Specifies the background color of the sub-component when in hover state.\n* @prop --calcite-list-item-handle-background-color-focus: Specifies the background color of the sub-component when in focus state.\n* @prop --calcite-list-item-handle-background-color-selected: Specifies the background color of the sub-component when selected.\n * @prop --calcite-list-item-open-icon-color-hover: Specifies the color of the component's open icon when hovered.\n * @prop --calcite-list-item-selection-border-color: Specifies the border color of the component's selection.\n * @prop --calcite-list-item-selection-icon-color-hover: Specifies the color of the component's selection icon when hovered.\n * @prop --calcite-list-item-selection-icon-color-selected: Specifies the color of the component's selection icon when selected.\n */\n\n:host {\n  display: flex;\n  flex-direction: column;\n}\n\n@include disabled();\n\n.indent {\n  @apply flex\n    flex-col\n    border-solid\n    border-0\n    border-color-3;\n\n  margin-inline-start: var(--calcite-list-item-spacing-indent, theme(\"spacing.6\"));\n}\n\n.container {\n  background-color: var(--calcite-list-item-background-color, var(-calcite-color-foreground-1));\n  box-sizing: border-box;\n  display: flex;\n  flex: 1 1 0%;\n  font-family: var(--calcite-sans-family);\n\n  * {\n    box-sizing: border-box;\n  }\n}\n\n.container:hover {\n  background-color: var(--calcite-list-item-background-color-hover, var(--calcite-color-foreground-2));\n  cursor: pointer;\n\n  &.container--border-unselected {\n    border-color: var(--calcite-color-border-1);\n  }\n}\n\n.container--border {\n  border-inline-start-width: var(--calcite-border-width-lg);\n  border-inline-start-style: solid;\n}\n\n.container--border-selected {\n  border-inline-start-color: var(--calcite-list-item-selection-border-color, var(--calcite-color-brand));\n}\n\n.container--border-unselected {\n  border-inline-start-color: transparent;\n}\n\n.nested-container {\n  background-color: var(--calcite-list-item-background-color, var(-calcite-color-foreground-1));\n  display: flex;\n  flex-direction: column;\n}\n\n.nested-container--hidden {\n  display: none;\n}\n\n.content-container {\n  color: var(--calcite-list-item-content-text-color, var(--calcite-color-text-2));\n  user-select: none;\n  display: flex;\n  flex: 1 1 auto;\n  font-family: var(--calcite-sans-family);\n  font-weight: var(--calcite-font-weight-normal);\n  align-items: stretch;\n  padding: 0;\n}\n\n.content,\n.custom-content {\n  font-size: var(--calcite-font-size--2);\n  line-height: 1.375;\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n  justify-content: center;\n  padding-inline: var(--calcite-spacing-md);\n  padding-block: var(--calcite-spacing-sm);\n}\n\n.label {\n  color: var(--calcite-list-item-label-text-color, var(--calcite-color-text-1));\n}\n\n.description {\n  color: var(--calcite-list-item-description-text-color, var(--calcite-color-text-3));\n  margin-block-start: var(--calcite-spacing-base);\n}\n\n.content-bottom {\n  background-color: var(--calcite-list-item-background-color, var(--calcite-color-foreground-1));\n  display: flex;\n  flex-direction: column;\n}\n\n.label,\n.description,\n.content-bottom {\n  font-size: var(--calcite-font-size--2);\n  @include word-break();\n  font-family: var(--calcite-sans-family);\n  font-weight: var(--calcite-font-weight-normal);\n\n  &:only-child {\n    margin: 0;\n    padding-block: var(--calcite-spacing-xxs);\n  }\n}\n\n:host([selected]) .label {\n  font-weight: var(--calcite-font-weight-medium);\n  color: var(--calcite-list-item-label-text-color, var(--calcite-color-text-1));\n}\n\n:host([selected]) .description {\n  color: var(--calcite-list-item-description-text-color, var(--calcite-color-text-2));\n}\n\n.content-start {\n  justify-content: flex-start;\n}\n\n.content-end {\n  justify-content: flex-end;\n}\n\n.content-start,\n.content-end {\n  @apply flex-auto;\n\n  ::slotted(calcite-icon) {\n    align-self: center;\n    margin-inline: var(--calcite-spacing-md);\n  }\n}\n\n.content-container--has-center-content .content-start,\n.content-container--has-center-content .content-end {\n  flex: 0 1 auto;\n}\n\n.selection-container {\n  @apply flex px-3 py-0;\n  color: var(--calcite-list-item-icon-color, var(--calcite-color-border-input));\n}\n\n.selection-container--single {\n  color: transparent;\n}\n\n:host(:not([disabled]):not([selected]):hover) .selection-container--single {\n  color: var(--calcite-list-item-selection-icon-color-hover, var(--calcite-color-border-1));\n}\n\n:host([selected]) .container:hover .selection-container,\n:host([selected]) .container:hover .selection-container--single,\n:host([selected]) .selection-container {\n  color: var(--calcite-list-item-selection-icon-color-selected, var(--calcite-color-brand));\n}\n\n.open-container {\n  color: var(--calcite-list-item-icon-color, var(--calcite-color-text-3));\n}\n\n.container,\n.actions-start,\n.actions-end,\n.content-container,\n.drag-container {\n  outline-color: transparent;\n\n  &:focus {\n    @include focusInset(\"--calcite-list-item-focus\", \"--calcite-internal-list-item-focus-offset\");\n  }\n}\n\n.actions-start,\n.actions-end,\n.content-start,\n.content-end,\n.selection-container,\n.drag-container,\n.open-container {\n  display: flex;\n  align-items: center;\n\n  calcite-action,\n  calcite-handle {\n    @apply self-stretch;\n  }\n}\n\n:host(:not([disabled])) .container:hover .open-container {\n  color: var(--calcite-list-item-open-icon-color-hover, var(--calcite-color-text-1));\n}\n\n.open-container,\n.selection-container {\n  @apply cursor-pointer;\n}\n\n.actions-start,\n.actions-end {\n  @apply p-0;\n  ::slotted(calcite-action),\n  ::slotted(calcite-action-menu),\n  ::slotted(calcite-handle),\n  ::slotted(calcite-dropdown) {\n    align-self: stretch;\n    color: inherit;\n  }\n}\n\n::slotted(calcite-list-item),\n::slotted(calcite-list) {\n  border-style: solid;\n  border-width: 0px;\n  border-block-start-width: var(--calcite-border-width-sm);\n  border-color: var(--calcite-list-item-border-color, var(--calcite-color-border-3));\n}\n\n::slotted(calcite-list:empty) {\n  padding-block: var(--calcite-spacing-md);\n}\n\ncalcite-handle {\n  --calcite-handle-icon-color: var(--calcite-list-item-handle-icon-color);\n  --calcite-handle-background-color: var(--calcite-list-item-handle-background-color);\n\n  --calcite-handle-icon-color-hover: var(--calcite-list-item-handle-icon-color-hover);\n  --calcite-handle-background-color-hover: var(--calcite-list-item-handle-background-color-hover);\n\n  --calcite-handle-icon-color-focus: var(--calcite-list-item-handle-icon-color-focus);\n  --calcite-handle-background-color-focus: var(--calcite-list-item-handle-background-color-focus);\n\n  --calcite-handle-icon-color-selected: var(--calcite-list-item-handle-icon-color-selected);\n  --calcite-handle-background-color-selected: var(--calcite-list-item-handle-background-color-selected);\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getElementDir,\n  getFirstTabbable,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { SelectionMode } from \"../interfaces\";\nimport { SelectionAppearance } from \"../list/resources\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { SortableComponentItem } from \"../../utils/sortableComponent\";\nimport { ListItemMessages } from \"./assets/list-item/t9n\";\nimport {\n  getDepth,\n  getListItemChildren,\n  getListItemChildLists,\n  updateListItemChildren,\n} from \"./utils\";\nimport { CSS, activeCellTestAttribute, ICONS, SLOTS } from \"./resources\";\n\nconst focusMap = new Map<HTMLCalciteListElement, number>();\nconst listSelector = \"calcite-list\";\n\n/**\n * @slot - A slot for adding `calcite-list-item` and `calcite-list-item-group` elements.\n * @slot actions-start - A slot for adding actionable `calcite-action` elements before the content of the component.\n * @slot content-start - A slot for adding non-actionable elements before the label and description of the component.\n * @slot content - A slot for adding non-actionable, centered content in place of the `label` and `description` of the component.\n * @slot content-end - A slot for adding non-actionable elements after the label and description of the component.\n * @slot actions-end - A slot for adding actionable `calcite-action` elements after the content of the component.\n * @slot content-bottom - A slot for adding content below the component's `label` and `description`.\n */\n@Component({\n  tag: \"calcite-list-item\",\n  styleUrl: \"list-item.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class ListItem\n  implements\n    InteractiveComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent,\n    SortableComponentItem\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets the item as focusable. Only one item should be focusable within a list.\n   *\n   * @internal\n   */\n  @Prop() active = false;\n\n  @Watch(\"active\")\n  activeHandler(active: boolean): void {\n    if (!active) {\n      this.focusCell(null, false);\n    }\n  }\n\n  /**\n   * Sets the item to display a border.\n   *\n   * @internal\n   */\n  @Prop() bordered = false;\n\n  /** When `true`, a close button is added to the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /** When `true`, hides the component. */\n  @Prop({ reflect: true, mutable: true }) closed = false;\n\n  @Watch(\"closed\")\n  handleClosedChange(): void {\n    this.emitCalciteInternalListItemChange();\n  }\n\n  /**\n   * A description for the component. Displays below the label text.\n   */\n  @Prop() description: string;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  handleDisabledChange(): void {\n    this.emitCalciteInternalListItemChange();\n  }\n\n  /**\n   * When `true`, the item is not draggable.\n   */\n  @Prop({ reflect: true }) dragDisabled = false;\n\n  /**\n   * When `true`, the component displays a draggable button.\n   *\n   * @internal\n   */\n  @Prop() dragHandle = false;\n\n  /**\n   * When `true`, the component's drag handle is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) dragSelected = false;\n\n  /**\n   * Hides the component when filtered.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) filterHidden = false;\n\n  /**\n   * The label text of the component. Displays above the description text.\n   */\n  @Prop() label: string;\n\n  /**\n   * Provides additional metadata to the component. Primary use is for a filter on the parent `calcite-list`.\n   */\n  @Prop() metadata: Record<string, unknown>;\n\n  /**\n   * When `true`, the item is open to show child components.\n   */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  @Watch(\"open\")\n  handleOpenChange(): void {\n    this.emitCalciteInternalListItemToggle();\n  }\n\n  /**\n   * Used to specify the aria-setsize attribute to define the number of items in the current set of list for accessibility.\n   *\n   * @internal\n   */\n  @Prop() setSize: number = null;\n\n  /**\n   * Used to specify the aria-posinset attribute to define the number or position in the current set of list items for accessibility.\n   *\n   * @internal\n   */\n  @Prop() setPosition: number = null;\n\n  /**\n   * When `true` and the parent `calcite-list`'s `selectionMode` is `\"single\"`, `\"single-persist\"', or `\"multiple\"`, the component is selected.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  @Watch(\"selected\")\n  handleSelectedChange(): void {\n    this.calciteInternalListItemSelect.emit();\n  }\n\n  /**\n   * The component's value.\n   */\n  @Prop() value: any;\n\n  /**\n   * Specifies the selection mode - `\"multiple\"` (allow any number of selected items), `\"single\"` (allow one selected item), `\"single-persist\"` (allow one selected item and prevent de-selection), or `\"none\"` (no selected items).\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) selectionMode: Extract<\n    \"none\" | \"multiple\" | \"single\" | \"single-persist\",\n    SelectionMode\n  > = null;\n\n  /**\n   * Specifies the selection appearance - `\"icon\"` (displays a checkmark or dot) or `\"border\"` (displays a border).\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) selectionAppearance: SelectionAppearance = null;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ListItemMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ListItemMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component is selected.\n   */\n  @Event({ cancelable: false }) calciteListItemSelect: EventEmitter<void>;\n\n  /**\n   * Fires when the close button is clicked.\n   */\n  @Event({ cancelable: false }) calciteListItemClose: EventEmitter<void>;\n\n  /**\n   * Fires when the drag handle is selected.\n   */\n  @Event({ cancelable: false }) calciteListItemDragHandleChange: EventEmitter<void>;\n\n  /**\n   * Fires when the open button is clicked.\n   */\n  @Event({ cancelable: false }) calciteListItemToggle: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemSelect: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false })\n  calciteInternalListItemSelectMultiple: EventEmitter<{\n    selectMultiple: boolean;\n  }>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemActive: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalFocusPreviousItem: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemChange: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemToggle: EventEmitter<void>;\n\n  @Listen(\"calciteInternalListItemGroupDefaultSlotChange\")\n  @Listen(\"calciteInternalListDefaultSlotChange\")\n  handleCalciteInternalListDefaultSlotChanges(event: CustomEvent<void>): void {\n    event.stopPropagation();\n    this.handleOpenableChange(this.defaultSlotEl);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteListItemElement;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ListItemMessages;\n\n  @State() level: number = null;\n\n  @State() parentListEl: HTMLCalciteListElement;\n\n  @State() openable = false;\n\n  @State() hasActionsStart = false;\n\n  @State() hasActionsEnd = false;\n\n  @State() hasCustomContent = false;\n\n  @State() hasContentStart = false;\n\n  @State() hasContentEnd = false;\n\n  @State() hasContentBottom = false;\n\n  containerEl: HTMLTableRowElement;\n\n  contentEl: HTMLTableCellElement;\n\n  actionsStartEl: HTMLTableCellElement;\n\n  actionsEndEl: HTMLTableCellElement;\n\n  handleGridEl: HTMLTableCellElement;\n\n  defaultSlotEl: HTMLSlotElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    const { el } = this;\n    this.parentListEl = el.closest(listSelector);\n    this.level = getDepth(el) + 1;\n    this.setSelectionDefaults();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    const { containerEl, parentListEl } = this;\n    const focusIndex = focusMap.get(parentListEl);\n\n    if (typeof focusIndex === \"number\") {\n      const cells = this.getGridCells();\n      if (cells[focusIndex]) {\n        this.focusCell(cells[focusIndex]);\n      } else {\n        containerEl?.focus();\n      }\n      return;\n    }\n\n    containerEl?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderSelected(): VNode {\n    const { selected, selectionMode, selectionAppearance } = this;\n\n    if (selectionMode === \"none\" || selectionAppearance === \"border\") {\n      return null;\n    }\n\n    return (\n      <td\n        class={{\n          [CSS.selectionContainer]: true,\n          [CSS.selectionContainerSingle]:\n            selectionMode === \"single\" || selectionMode === \"single-persist\",\n        }}\n        key=\"selection-container\"\n        onClick={this.handleItemClick}\n      >\n        <calcite-icon\n          icon={\n            selected\n              ? selectionMode === \"multiple\"\n                ? ICONS.selectedMultiple\n                : ICONS.selectedSingle\n              : selectionMode === \"multiple\"\n                ? ICONS.unselectedMultiple\n                : ICONS.unselectedSingle\n          }\n          scale=\"s\"\n        />\n      </td>\n    );\n  }\n\n  renderDragHandle(): VNode {\n    const { label, dragHandle, dragSelected, dragDisabled, setPosition, setSize } = this;\n\n    return dragHandle ? (\n      <td\n        aria-label={label}\n        class={CSS.dragContainer}\n        key=\"drag-handle-container\"\n        onFocusin={this.focusCellHandle}\n        ref={(el) => (this.handleGridEl = el)}\n        role=\"gridcell\"\n      >\n        <calcite-handle\n          disabled={dragDisabled}\n          label={label}\n          onCalciteHandleChange={this.dragHandleSelectedChangeHandler}\n          selected={dragSelected}\n          setPosition={setPosition}\n          setSize={setSize}\n        />\n      </td>\n    ) : null;\n  }\n\n  renderOpen(): VNode {\n    const { el, open, openable, messages } = this;\n    const dir = getElementDir(el);\n    const icon = open ? ICONS.open : dir === \"rtl\" ? ICONS.closedRTL : ICONS.closedLTR;\n    const tooltip = open ? messages.collapse : messages.expand;\n\n    return openable ? (\n      <td\n        class={CSS.openContainer}\n        key=\"open-container\"\n        onClick={this.handleToggleClick}\n        title={tooltip}\n      >\n        <calcite-icon icon={icon} key={icon} scale=\"s\" />\n      </td>\n    ) : null;\n  }\n\n  renderActionsStart(): VNode {\n    const { label, hasActionsStart } = this;\n    return (\n      <td\n        aria-label={label}\n        class={CSS.actionsStart}\n        hidden={!hasActionsStart}\n        key=\"actions-start-container\"\n        onFocusin={this.focusCellActionsStart}\n        ref={(el) => (this.actionsStartEl = el)}\n        role=\"gridcell\"\n      >\n        <slot name={SLOTS.actionsStart} onSlotchange={this.handleActionsStartSlotChange} />\n      </td>\n    );\n  }\n\n  renderActionsEnd(): VNode {\n    const { label, hasActionsEnd, closable, messages } = this;\n    return (\n      <td\n        aria-label={label}\n        class={CSS.actionsEnd}\n        hidden={!(hasActionsEnd || closable)}\n        key=\"actions-end-container\"\n        onFocusin={this.focusCellActionsEnd}\n        ref={(el) => (this.actionsEndEl = el)}\n        role=\"gridcell\"\n      >\n        <slot name={SLOTS.actionsEnd} onSlotchange={this.handleActionsEndSlotChange} />\n        {closable ? (\n          <calcite-action\n            appearance=\"transparent\"\n            icon={ICONS.close}\n            key=\"close-action\"\n            label={messages.close}\n            onClick={this.handleCloseClick}\n            text={messages.close}\n          />\n        ) : null}\n      </td>\n    );\n  }\n\n  renderContentStart(): VNode {\n    const { hasContentStart } = this;\n    return (\n      <div class={CSS.contentStart} hidden={!hasContentStart}>\n        <slot name={SLOTS.contentStart} onSlotchange={this.handleContentStartSlotChange} />\n      </div>\n    );\n  }\n\n  renderCustomContent(): VNode {\n    const { hasCustomContent } = this;\n    return (\n      <div class={CSS.customContent} hidden={!hasCustomContent}>\n        <slot name={SLOTS.content} onSlotchange={this.handleContentSlotChange} />\n      </div>\n    );\n  }\n\n  renderContentEnd(): VNode {\n    const { hasContentEnd } = this;\n    return (\n      <div class={CSS.contentEnd} hidden={!hasContentEnd}>\n        <slot name={SLOTS.contentEnd} onSlotchange={this.handleContentEndSlotChange} />\n      </div>\n    );\n  }\n\n  renderContentBottom(): VNode {\n    const { hasContentBottom } = this;\n    return (\n      <div class={CSS.contentBottom} hidden={!hasContentBottom}>\n        <slot name={SLOTS.contentBottom} onSlotchange={this.handleContentBottomSlotChange} />\n      </div>\n    );\n  }\n\n  renderDefaultContainer(): VNode {\n    return (\n      <div\n        class={{\n          [CSS.nestedContainer]: true,\n          [CSS.nestedContainerHidden]: this.openable && !this.open,\n        }}\n      >\n        <slot\n          onSlotchange={this.handleDefaultSlotChange}\n          ref={(el: HTMLSlotElement) => (this.defaultSlotEl = el)}\n        />\n      </div>\n    );\n  }\n\n  renderContentProperties(): VNode {\n    const { label, description, hasCustomContent } = this;\n\n    return !hasCustomContent && (!!label || !!description) ? (\n      <div class={CSS.content} key=\"content\">\n        {label ? (\n          <div class={CSS.label} key=\"label\">\n            {label}\n          </div>\n        ) : null}\n        {description ? (\n          <div class={CSS.description} key=\"description\">\n            {description}\n          </div>\n        ) : null}\n      </div>\n    ) : null;\n  }\n\n  renderContentContainer(): VNode {\n    const { description, label, selectionMode, hasCustomContent } = this;\n    const hasCenterContent = hasCustomContent || !!label || !!description;\n    const content = [\n      this.renderContentStart(),\n      this.renderCustomContent(),\n      this.renderContentProperties(),\n      this.renderContentEnd(),\n    ];\n\n    return (\n      <td\n        aria-label={label}\n        class={{\n          [CSS.contentContainer]: true,\n          [CSS.contentContainerSelectable]: selectionMode !== \"none\",\n          [CSS.contentContainerHasCenterContent]: hasCenterContent,\n        }}\n        key=\"content-container\"\n        onClick={this.handleItemClick}\n        onFocusin={this.focusCellContent}\n        ref={(el) => (this.contentEl = el)}\n        role=\"gridcell\"\n      >\n        {content}\n      </td>\n    );\n  }\n\n  render(): VNode {\n    const {\n      openable,\n      open,\n      level,\n      setPosition,\n      setSize,\n      active,\n      label,\n      selected,\n      selectionAppearance,\n      selectionMode,\n      closed,\n      filterHidden,\n      bordered,\n      disabled,\n    } = this;\n\n    const showBorder = selectionMode !== \"none\" && selectionAppearance === \"border\";\n    const borderSelected = showBorder && selected;\n    const borderUnselected = showBorder && !selected;\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <div class={{ [CSS.wrapper]: true, [CSS.wrapperBordered]: bordered }}>\n            <tr\n              aria-expanded={openable ? toAriaBoolean(open) : null}\n              aria-label={label}\n              aria-level={level}\n              aria-posinset={setPosition}\n              aria-selected={toAriaBoolean(selected)}\n              aria-setsize={setSize}\n              class={{\n                [CSS.container]: true,\n                [CSS.containerHover]: true,\n                [CSS.containerBorder]: showBorder,\n                [CSS.containerBorderSelected]: borderSelected,\n                [CSS.containerBorderUnselected]: borderUnselected,\n              }}\n              hidden={closed || filterHidden}\n              onFocus={this.focusCellNull}\n              onFocusin={this.emitInternalListItemActive}\n              onKeyDown={this.handleItemKeyDown}\n              ref={(el) => (this.containerEl = el)}\n              role=\"row\"\n              tabIndex={active ? 0 : -1}\n            >\n              {this.renderDragHandle()}\n              {this.renderSelected()}\n              {this.renderOpen()}\n              {this.renderActionsStart()}\n              {this.renderContentContainer()}\n              {this.renderActionsEnd()}\n            </tr>\n            {this.renderContentBottom()}\n          </div>\n          <div class={CSS.indent}>{this.renderDefaultContainer()}</div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private dragHandleSelectedChangeHandler = (event: CustomEvent): void => {\n    this.dragSelected = (event.target as HTMLCalciteHandleElement).selected;\n    this.calciteListItemDragHandleChange.emit();\n    event.stopPropagation();\n  };\n\n  private emitInternalListItemActive = (): void => {\n    this.calciteInternalListItemActive.emit();\n  };\n\n  private focusCellHandle = (): void => {\n    this.handleCellFocusIn(this.handleGridEl);\n  };\n\n  private focusCellActionsStart = (): void => {\n    this.handleCellFocusIn(this.actionsStartEl);\n  };\n\n  private focusCellContent = (): void => {\n    this.handleCellFocusIn(this.contentEl);\n  };\n\n  private focusCellActionsEnd = (): void => {\n    this.handleCellFocusIn(this.actionsEndEl);\n  };\n\n  private emitCalciteInternalListItemToggle(): void {\n    this.calciteInternalListItemToggle.emit();\n  }\n\n  private emitCalciteInternalListItemChange(): void {\n    this.calciteInternalListItemChange.emit();\n  }\n\n  private handleCloseClick = (): void => {\n    this.closed = true;\n    this.calciteListItemClose.emit();\n  };\n\n  private handleContentSlotChange = (event: Event): void => {\n    this.hasCustomContent = slotChangeHasAssignedElement(event);\n  };\n\n  private handleActionsStartSlotChange = (event: Event): void => {\n    this.hasActionsStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleActionsEndSlotChange = (event: Event): void => {\n    this.hasActionsEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentStartSlotChange = (event: Event): void => {\n    this.hasContentStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentEndSlotChange = (event: Event): void => {\n    this.hasContentEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentBottomSlotChange = (event: Event): void => {\n    this.hasContentBottom = slotChangeHasAssignedElement(event);\n  };\n\n  private setSelectionDefaults(): void {\n    const { parentListEl, selectionMode, selectionAppearance } = this;\n\n    if (!parentListEl) {\n      return;\n    }\n\n    if (!selectionMode) {\n      this.selectionMode = parentListEl.selectionMode;\n    }\n\n    if (!selectionAppearance) {\n      this.selectionAppearance = parentListEl.selectionAppearance;\n    }\n  }\n\n  private handleOpenableChange(slotEl: HTMLSlotElement): void {\n    if (!slotEl) {\n      return;\n    }\n\n    const listItemChildren = getListItemChildren(slotEl);\n    const listItemChildLists = getListItemChildLists(slotEl);\n    updateListItemChildren(listItemChildren);\n\n    this.openable = !!listItemChildren.length || !!listItemChildLists.length;\n  }\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    this.handleOpenableChange(event.target as HTMLSlotElement);\n  };\n\n  private handleToggleClick = (): void => {\n    this.toggle();\n  };\n\n  private toggle = (value = !this.open): void => {\n    this.open = value;\n    this.calciteListItemToggle.emit();\n  };\n\n  private handleItemClick = (event: PointerEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    this.toggleSelected(event.shiftKey);\n  };\n\n  private toggleSelected = (shiftKey: boolean): void => {\n    const { selectionMode, selected } = this;\n\n    if (this.disabled) {\n      return;\n    }\n\n    if (selectionMode === \"multiple\" || selectionMode === \"single\") {\n      this.selected = !selected;\n    } else if (selectionMode === \"single-persist\") {\n      this.selected = true;\n    }\n\n    this.calciteInternalListItemSelectMultiple.emit({\n      selectMultiple: shiftKey && selectionMode === \"multiple\",\n    });\n    this.calciteListItemSelect.emit();\n  };\n\n  private getGridCells(): HTMLTableCellElement[] {\n    return [this.handleGridEl, this.actionsStartEl, this.contentEl, this.actionsEndEl].filter(\n      (el) => el && !el.hidden,\n    );\n  }\n\n  private handleItemKeyDown = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const { key } = event;\n    const composedPath = event.composedPath();\n    const { containerEl, actionsStartEl, actionsEndEl, open, openable } = this;\n\n    const cells = this.getGridCells();\n    const currentIndex = cells.findIndex((cell) => composedPath.includes(cell));\n\n    if (\n      key === \"Enter\" &&\n      !composedPath.includes(actionsStartEl) &&\n      !composedPath.includes(actionsEndEl)\n    ) {\n      event.preventDefault();\n      this.toggleSelected(event.shiftKey);\n    } else if (key === \"ArrowRight\") {\n      event.preventDefault();\n      const nextIndex = currentIndex + 1;\n      if (currentIndex === -1) {\n        if (!open && openable) {\n          this.toggle(true);\n          this.focusCell(null);\n        } else if (cells[0]) {\n          this.focusCell(cells[0]);\n        }\n      } else if (cells[currentIndex] && cells[nextIndex]) {\n        this.focusCell(cells[nextIndex]);\n      }\n    } else if (key === \"ArrowLeft\") {\n      event.preventDefault();\n      const prevIndex = currentIndex - 1;\n      if (currentIndex === -1) {\n        this.focusCell(null);\n        if (open && openable) {\n          this.toggle(false);\n        } else {\n          this.calciteInternalFocusPreviousItem.emit();\n        }\n      } else if (currentIndex === 0) {\n        this.focusCell(null);\n        containerEl.focus();\n      } else if (cells[currentIndex] && cells[prevIndex]) {\n        this.focusCell(cells[prevIndex]);\n      }\n    }\n  };\n\n  private focusCellNull = (): void => {\n    this.focusCell(null);\n  };\n\n  private handleCellFocusIn = (focusEl: HTMLTableCellElement): void => {\n    this.setFocusCell(focusEl, getFirstTabbable(focusEl), true);\n  };\n\n  // Only one cell within a list-item should be focusable at a time. Ensures the active cell is focusable.\n  private setFocusCell = (\n    focusEl: HTMLTableCellElement | null,\n    focusedEl: HTMLElement,\n    saveFocusIndex: boolean,\n  ): void => {\n    const { parentListEl } = this;\n\n    if (saveFocusIndex) {\n      focusMap.set(parentListEl, null);\n    }\n\n    const gridCells = this.getGridCells();\n\n    gridCells.forEach((tableCell) => {\n      tableCell.tabIndex = -1;\n      tableCell.removeAttribute(activeCellTestAttribute);\n    });\n\n    if (!focusEl) {\n      return;\n    }\n\n    focusEl.tabIndex = focusEl === focusedEl ? 0 : -1;\n    focusEl.setAttribute(activeCellTestAttribute, \"\");\n\n    if (saveFocusIndex) {\n      focusMap.set(parentListEl, gridCells.indexOf(focusEl));\n    }\n  };\n\n  private focusCell = (focusEl: HTMLTableCellElement | null, saveFocusIndex = true): void => {\n    const focusedEl = getFirstTabbable(focusEl);\n    this.setFocusCell(focusEl, focusedEl, saveFocusIndex);\n    focusedEl?.focus();\n  };\n}\n","export const CSS = {\n  container: \"container\",\n  heading: \"heading\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-list-item-group-background-color: Specifies the background color of the component.\n * @prop --calcite-list-item-group-border-color: Specifies the border color of the component.\n * @prop --calcite-list-item-heading-text-color: Specifies the text color of the component's heading.\n */\n\n:host {\n  display: flex;\n  flex-direction: column;\n}\n\n:host([filter-hidden]) {\n  display: none;\n}\n\n@include disabled();\n\n.container {\n  @apply text-n1 m-0 flex flex-1 p-3 font-medium;\n\n  color: var(--calcite-list-item-group-heading-text-color, var(--calcite-color-text-2));\n}\n\n.heading {\n  @apply p-0;\n  padding-inline-start: calc(\n    var(--calcite-internal-list-item-spacing-indent, var(--calcite-spacing-xl)) *\n      var(--calcite-internal-list-item-spacing-indent-multiplier)\n  );\n}\n\n::slotted(calcite-list-item) {\n  border-block-start: var(--calcite-border-width-sm) solid\n    var(--calcite-list-item-group-border-color, var(--calcite-color-border-3));\n}\n\n// removes border for the first item of the group for both filtered and unfiltered items.\n::slotted(calcite-list-item:nth-child(1 of :not([hidden]))) {\n  border: none;\n}\n\n@include base-component();\n","import { Component, Element, Event, EventEmitter, h, Host, Prop, VNode } from \"@stencil/core\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { MAX_COLUMNS } from \"../list-item/resources\";\nimport { CSS } from \"./resources\";\n/**\n * @slot - A slot for adding `calcite-list-item` and `calcite-list-item-group` elements.\n */\n@Component({\n  tag: \"calcite-list-item-group\",\n  styleUrl: \"list-item-group.scss\",\n  shadow: true,\n})\nexport class ListItemGroup implements InteractiveComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Hides the component when filtered.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) filterHidden = false;\n\n  /**\n   * The header text for all nested `calcite-list-item` rows.\n   *\n   */\n  @Prop({ reflect: true }) heading: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when changes occur in the default slot, notifying parent lists of the changes.\n   */\n  @Event({ cancelable: false })\n  calciteInternalListItemGroupDefaultSlotChange: EventEmitter<DragEvent>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteListItemGroupElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { disabled, heading } = this;\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <tr class={CSS.container}>\n            <td class={CSS.heading} colSpan={MAX_COLUMNS}>\n              {heading}\n            </td>\n          </tr>\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleDefaultSlotChange = (): void => {\n    this.calciteInternalListItemGroupDefaultSlotChange.emit();\n  };\n}\n"],"mappings":"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"}