{"version":3,"names":["CSS","actionIndicator","button","buttonCompact","buttonTextVisible","iconContainer","indicatorText","icon","indicatorWithoutIcon","slotContainer","slotContainerHidden","textContainer","textContainerVisible","SLOTS","tooltip","actionCss","CalciteActionStyle0","Action","this","mutationObserver","createObserver","forceUpdate","guid","indicatorId","buttonId","handleTooltipSlotChange","event","tooltips","target","assignedElements","flatten","filter","el","matches","referenceElement","buttonEl","onMessagesChange","effectiveLocaleChange","updateMessages","effectiveLocale","connectedCallback","connectInteractive","connectLocalized","connectMessages","observe","childList","subtree","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectInteractive","disconnectLocalized","disconnectMessages","disconnect","componentDidRender","updateHostInteraction","setFocus","componentFocusable","focus","renderTextContainer","text","textEnabled","textContainerClasses","h","class","key","renderIndicatorText","indicator","messages","id","role","renderIconContainer","loading","scale","iconFlipRtl","loaderScale","calciteLoaderNode","inline","label","calciteIconNode","flipRtl","getIconScale","iconNode","hasIconToDisplay","children","length","slotContainerNode","render","active","compact","disabled","labelFallback","ariaLabel","buttonClasses","Host","InteractiveContainer","toAriaBoolean","ref","name","onSlotchange"],"sources":["src/components/action/resources.ts","src/components/action/action.scss?tag=calcite-action&encapsulation=shadow","src/components/action/action.tsx"],"sourcesContent":["export const CSS = {\n  actionIndicator: \"action-indicator\",\n  button: \"button\",\n  buttonCompact: \"button--compact\",\n  buttonTextVisible: \"button--text-visible\",\n  iconContainer: \"icon-container\",\n  indicatorText: \"indicator-text\",\n  icon: \"icon\",\n  indicatorWithoutIcon: \"indicator-without-icon\",\n  slotContainer: \"slot-container\",\n  slotContainerHidden: \"slot-container--hidden\",\n  textContainer: \"text-container\",\n  textContainerVisible: \"text-container--visible\",\n};\n\nexport const SLOTS = {\n  tooltip: \"tooltip\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-background-color: Specifies the background color of the component.\n * @prop --calcite-action-text-color: Specifies the text color of the component.\n * @prop --calcite-action-shadow: Specifies the shadow of the component.\n * @prop --calcite-action-icon-color: Specifies the color of the component's icon.\n * @prop --calcite-action-indicator-color: Specifies the color of the component's indicator.\n * @prop --calcite-action-loader-color: Specifies the color of the component's loader.\n */\n\n:host {\n  @include base-host();\n\n  box-sizing: border-box;\n  display: flex;\n  background-color: var(--calcite-color-transparent);\n}\n\n.button {\n  @apply focus-base\n    relative\n    m-0\n    flex\n    w-auto\n    cursor-pointer\n    items-center\n    border-none;\n  align-items: center;\n  background-color: var(\n    --calcite-action-background-color,\n    var(--calcite-internal-action-background-color, var(--calcite-color-foreground-1))\n  );\n  color: var(--calcite-action-text-color, var(--calcite-internal-action-text-color, var(--calcite-color-text-3)));\n  flex: 1 0 auto;\n  font-family: var(--calcite-font-family);\n  font-size: var(--calcite-internal-action-font-size, var(--calcite-font-size--2));\n  justify-content: var(--calcite-internal-action-justify-content, start);\n  line-height: var(--calcite-internal-action-line-height, 1rem /* 16px */);\n  text-align: unset;\n  padding-inline: var(--calcite-internal-action-space-x);\n  padding-block: var(--calcite-internal-action-space-y);\n  box-shadow: var(--calcite-action-shadow);\n\n  &.button--text-visible {\n    inline-size: var(--calcite-container-size-content-fluid);\n\n    .icon-container {\n      margin-inline-end: var(--calcite-internal-action-icon-container-space-x-end, theme(\"spacing.3\"));\n    }\n  }\n}\n\n.icon-container {\n  @apply pointer-events-none\n    m-0\n    flex\n    items-center\n    justify-center;\n  min-inline-size: theme(\"spacing.4\");\n  min-block-size: theme(\"spacing.6\");\n}\n\n.text-container {\n  @apply m-0\n    w-0\n    truncate\n    leading-6\n    opacity-0\n    transition-opacity\n    duration-150\n    ease-in-out;\n  transition-property: margin;\n  transition-property: inline-size;\n}\n\n.text-container--visible {\n  @apply w-auto flex-auto;\n  opacity: var(--calcite-opacity-full);\n}\n\n.action-indicator {\n  position: relative;\n  color: var(--calcite-action-indicator-color, var(--calcite-color-brand));\n  block-size: var(--calcite-internal-action-line-height);\n  inline-size: var(--calcite-internal-action-line-height);\n\n  &::after {\n    position: absolute;\n    block-size: 0.5rem /* 8px */;\n    inline-size: 0.5rem /* 8px */;\n    content: \"\";\n    @apply rounded-full;\n    inset-block-end: -0.275rem;\n    inset-inline-end: -0.275rem;\n    background-color: currentColor;\n  }\n}\n\ncalcite-icon {\n  --calcite-icon-color: var(\n    --calcite-action-icon-color,\n    var(--calcite-internal-action-icon-color, var(--calcite-color-text-3))\n  );\n}\n\ncalcite-loader {\n  --calcite-loader-color-start: var(--calcite-action-loader-color, var(--calcite-color-text-3));\n  margin-inline-end: theme(\"spacing.0\");\n}\n\n.indicator-without-icon {\n  @apply w-4 mx-1;\n}\n\n.indicator-text {\n  @apply sr-only;\n}\n\n.slot-container {\n  @apply flex;\n\n  &.slot-container--hidden {\n    @apply hidden;\n  }\n}\n\n// States\n:host(:hover),\n:host(:focus) {\n  --calcite-internal-action-text-color: var(--calcite-color-text-1);\n  --calcite-internal-action-icon-color: var(--calcite-color-text-1);\n}\n:host(:focus),\n:host([data-active]) {\n  .button {\n    @apply focus-inset;\n  }\n}\n:host(:active),\n:host([active]) {\n  --calcite-internal-action-icon-color: var(--calcite-color-text-1);\n  --calcite-internal-action-text-color: var(--calcite-color-text-1);\n}\n\n// Appearance\n:host([appearance=\"solid\"]) {\n  &:host(:hover),\n  &:host(:focus) {\n    --calcite-internal-action-background-color: var(--calcite-color-foreground-2);\n  }\n  &:host(:active),\n  &:host([active]) {\n    --calcite-internal-action-background-color: var(--calcite-color-foreground-3);\n  }\n\n  &:host([loading]) {\n    --calcite-internal-action-background-color: var(--calcite-color-foreground-1);\n    .text-container {\n      @apply opacity-disabled;\n    }\n  }\n}\n:host([appearance=\"transparent\"]) {\n  --calcite-internal-action-background-color: var(--calcite-color-transparent);\n\n  .button {\n    @apply transition-shadow\n      duration-150\n      ease-in-out;\n  }\n\n  &:host(:hover),\n  &:host(:focus) {\n    --calcite-internal-action-background-color: var(--calcite-action-color-transparent-hover);\n  }\n  &:host(:active),\n  &:host([active]) {\n    --calcite-internal-action-background-color: var(--calcite-action-color-transparent-press);\n  }\n}\n\n// Scale\n:host([scale=\"s\"]) {\n  --calcite-internal-action-font-size: var(--calcite-font-size--2);\n  --calcite-internal-action-line-height: 1rem /* 16px */;\n  --calcite-internal-action-icon-container-space-x-end: theme(\"spacing.2\");\n  --calcite-internal-action-space-x: 0.5rem /* 8px */;\n  --calcite-internal-action-space-y: 0.25rem /* 4px */;\n}\n:host([scale=\"m\"]) {\n  --calcite-internal-action-font-size: var(--calcite-font-size--1);\n  --calcite-internal-action-line-height: 1rem /* 16px */;\n  --calcite-internal-action-icon-container-space-x-end: theme(\"spacing.3\");\n  --calcite-internal-action-space-x: 1rem /* 8px */;\n  --calcite-internal-action-space-y: 0.75rem /* 12px */;\n}\n:host([scale=\"l\"]) {\n  --calcite-internal-action-font-size: var(--calcite-font-size-0);\n  --calcite-internal-action-line-height: 1.25rem /* 20px */;\n  --calcite-internal-action-icon-container-space-x-end: theme(\"spacing.4\");\n  --calcite-internal-action-space-x: 1.25rem /* 20px */;\n  --calcite-internal-action-space-y: 1.25rem /* 20px */;\n}\n// Compact\n:host([scale=\"s\"][compact]),\n:host([scale=\"m\"][compact]),\n:host([scale=\"l\"][compact]) {\n  --calcite-internal-action-space-x: 0;\n}\n\n// Alignment\n:host([alignment=\"center\"]) {\n  --calcite-internal-action-justify-content: center;\n}\n:host([alignment=\"end\"]) {\n  --calcite-internal-action-justify-content: end;\n}\n:host([alignment=\"center\"]),\n:host([alignment=\"end\"]) {\n  .text-container--visible {\n    @apply flex-initial;\n  }\n}\n\n@include base-component();\n@include disabled() {\n  &:host([active]) {\n    --calcite-internal-action-background-color: var(--calcite-color-foreground-3);\n  }\n  &:host([appearance=\"solid\"]) {\n    --calcite-internal-action-background-color: var(--calcite-color-foreground-1);\n  }\n  &:host([appearance=\"transparent\"]) {\n    --calcite-internal-action-background-color: var(--calcite-color-transparent);\n  }\n}\n","import {\n  Build,\n  Component,\n  Element,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { getIconScale } from \"../../utils/component\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Alignment, Appearance, Scale } from \"../interfaces\";\nimport { ActionMessages } from \"./assets/action/t9n\";\nimport { CSS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding a `calcite-icon`.\n * @slot tooltip - [Deprecated] Use the `calcite-tooltip` component instead.\n */\n@Component({\n  tag: \"calcite-action\",\n  styleUrl: \"action.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Action\n  implements InteractiveComponent, LocalizedComponent, T9nComponent, LoadableComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is highlighted.\n   */\n  @Prop({ reflect: true }) active = false;\n\n  /**\n   * Specifies the horizontal alignment of button elements with text content.\n   */\n  @Prop({ reflect: true }) alignment: Alignment;\n\n  /** Specifies the appearance of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"solid\" | \"transparent\", Appearance> = \"solid\";\n\n  /**\n   * When `true`, the side padding of the component is reduced. Compact mode is used internally by components, e.g. `calcite-block-section`.\n   */\n  @Prop({ reflect: true }) compact = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Specifies an icon to display. */\n  @Prop() icon: string;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * When `true`, displays a visual indicator.\n   */\n  @Prop({ reflect: true }) indicator = false;\n\n  /**\n   * Specifies the label of the component. If no label is provided, the label inherits what's provided for the `text` prop.\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies text that accompanies the icon.\n   */\n  @Prop() text!: string;\n\n  /**\n   * Indicates whether the text is displayed.\n   */\n  @Prop({ reflect: true }) textEnabled = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ActionMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ActionMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteActionElement;\n\n  buttonEl: HTMLButtonElement;\n\n  mutationObserver = createObserver(\"mutation\", () => forceUpdate(this));\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ActionMessages;\n\n  guid = `calcite-action-${guid()}`;\n\n  indicatorId = `${this.guid}-indicator`;\n\n  buttonId = `${this.guid}-button`;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    if (Build.isBrowser) {\n      await setUpMessages(this);\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.mutationObserver?.disconnect();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.buttonEl?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderTextContainer(): VNode {\n    const { text, textEnabled } = this;\n\n    const textContainerClasses = {\n      [CSS.textContainer]: true,\n      [CSS.textContainerVisible]: textEnabled,\n    };\n\n    return text ? (\n      <div class={textContainerClasses} key=\"text-container\">\n        {text}\n      </div>\n    ) : null;\n  }\n\n  renderIndicatorText(): VNode {\n    const { indicator, messages, indicatorId, buttonId } = this;\n    return (\n      <div\n        aria-labelledby={buttonId}\n        aria-live=\"polite\"\n        class={CSS.indicatorText}\n        id={indicatorId}\n        role=\"region\"\n      >\n        {indicator ? messages.indicator : null}\n      </div>\n    );\n  }\n\n  renderIconContainer(): VNode {\n    const { loading, icon, scale, el, iconFlipRtl, indicator } = this;\n    const loaderScale = scale === \"l\" ? \"l\" : \"m\";\n    const calciteLoaderNode = loading ? (\n      <calcite-loader inline label={this.messages.loading} scale={loaderScale} />\n    ) : null;\n    const calciteIconNode = icon ? (\n      <div class={{ [CSS.actionIndicator]: indicator }}>\n        <calcite-icon\n          class={CSS.icon}\n          flipRtl={iconFlipRtl}\n          icon={icon}\n          scale={getIconScale(this.scale)}\n        />\n      </div>\n    ) : null;\n    const iconNode = calciteLoaderNode || calciteIconNode;\n    const hasIconToDisplay = iconNode || el.children?.length;\n\n    const slotContainerNode = (\n      <div\n        class={{\n          [CSS.slotContainer]: true,\n          [CSS.slotContainerHidden]: loading,\n        }}\n      >\n        <slot />\n      </div>\n    );\n\n    return hasIconToDisplay ? (\n      <div aria-hidden=\"true\" class={CSS.iconContainer} key=\"icon-container\">\n        {iconNode}\n        {slotContainerNode}\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const {\n      active,\n      compact,\n      disabled,\n      icon,\n      loading,\n      textEnabled,\n      label,\n      text,\n      indicator,\n      indicatorId,\n      buttonId,\n      messages,\n    } = this;\n    const labelFallback = label || text;\n    const ariaLabel = labelFallback\n      ? `${labelFallback}${indicator ? ` (${messages.indicator})` : \"\"}`\n      : \"\";\n\n    const buttonClasses = {\n      [CSS.button]: true,\n      [CSS.buttonTextVisible]: textEnabled,\n      [CSS.buttonCompact]: compact,\n    };\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <button\n            aria-busy={toAriaBoolean(loading)}\n            aria-controls={indicator ? indicatorId : null}\n            aria-disabled={toAriaBoolean(disabled)}\n            aria-label={ariaLabel}\n            aria-pressed={toAriaBoolean(active)}\n            class={buttonClasses}\n            disabled={disabled}\n            id={buttonId}\n            ref={(buttonEl): HTMLButtonElement => (this.buttonEl = buttonEl)}\n          >\n            {this.renderIconContainer()}\n            {this.renderTextContainer()}\n            {!icon && indicator && (\n              <div\n                class={{ [CSS.indicatorWithoutIcon]: true, [CSS.actionIndicator]: true }}\n                key=\"indicator-no-icon\"\n              />\n            )}\n          </button>\n          <slot name={SLOTS.tooltip} onSlotchange={this.handleTooltipSlotChange} />\n          {this.renderIndicatorText()}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleTooltipSlotChange = (event: Event): void => {\n    const tooltips = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .filter((el) => el?.matches(\"calcite-tooltip\")) as HTMLCalciteTooltipElement[];\n\n    const tooltip = tooltips[0];\n\n    if (tooltip) {\n      tooltip.referenceElement = this.buttonEl;\n    }\n  };\n}\n"],"mappings":"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"}