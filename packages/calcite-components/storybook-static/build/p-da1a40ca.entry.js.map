{"version":3,"names":["CSS","container","input","ICONS","search","DEBOUNCE_TIMEOUT","filterCss","CalciteFilterStyle0","Filter","this","filterDebounced","debounce","value","emit","onFilter","items","length","updateFiltered","filter","inputHandler","event","target","keyDownHandler","defaultPrevented","key","clear","preventDefault","setFocus","watchItemsHandler","onMessagesChange","valueHandler","effectiveLocaleChange","updateMessages","effectiveLocale","componentWillLoad","setUpLoadableComponent","setUpMessages","connectedCallback","connectInteractive","connectLocalized","connectMessages","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectInteractive","disconnectLocalized","disconnectMessages","cancel","componentDidLoad","setComponentLoaded","Promise","resolve","componentFocusable","el","focus","filtered","callback","filteredItems","calciteFilterChange","render","disabled","scale","h","InteractiveContainer","class","clearable","icon","label","messages","messageOverrides","onCalciteInputInput","onKeyDown","placeholder","ref","textInput","type"],"sources":["src/components/filter/resources.ts","src/components/filter/filter.scss?tag=calcite-filter&encapsulation=shadow","src/components/filter/filter.tsx"],"sourcesContent":["export const CSS = {\n  container: \"container\",\n  input: \"input\",\n};\n\nexport const ICONS = {\n  search: \"search\",\n};\n\nexport const DEBOUNCE_TIMEOUT = 250;\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-filter-background-color: Specifies the background color of the filter.\n * @prop --calcite-filter-input-background-color: defines the background color of the input sub-component.\n * @prop --calcite-filter-input-border-color: defines the border color of the input sub-component.\n * @prop --calcite-filter-input-button-background-color: defines the background color of the button in the input sub-component.\n * @prop --calcite-filter-input-button-background-color-hover: defines the background color of the button when hovered in the input sub-component.\n * @prop --calcite-filter-input-button-border-color: defines the border color of the button in the input sub-component.\n * @prop --calcite-filter-input-button-icon-color: defines the icon color of the button in the input sub-component.\n * @prop --calcite-filter-input-button-icon-color-active: defines the icon color of the button when active in the input sub-component.\n * @prop --calcite-filter-input-button-icon-color-hover: defines the icon color of the button when hovered in the input sub-component.\n * @prop --calcite-filter-input-corner-radius: defines the corner radius of the input sub-component.\n * @prop --calcite-filter-input-icon-color: defines the icon color of the input sub-component.\n * @prop --calcite-filter-input-placeholder-text-color: defines the placeholder text color of the input sub-component.\n * @prop --calcite-filter-input-text-color: defines the text color of the input sub-component.\n*/\n\n:host {\n  @include base-host();\n  display: flex;\n  background-color: var(--calcite-filter-background-color, var(--calcite-color-foreground-1));\n  inline-size: var(--calcite-container-size-content-fluid);\n}\n\n@include disabled();\n\n.container {\n  padding: var(--calcite-spacing-sm);\n  margin-inline: var(--calcite-spacing-xxs);\n  display: flex;\n  inline-size: var(--calcite-container-size-content-fluid);\n  position: relative;\n  overflow: hidden;\n  align-items: center;\n}\n\n.input {\n  inline-size: var(--calcite-container-size-content-fluid);\n  --calcite-input-corner-radius: var(--calcite-filter-input-corner-radius);\n  --calcite-input-text-color: var(--calcite-filter-input-text-color);\n  --calcite-input-border-color: var(--calcite-filter-input-border-color);\n  --calcite-input-background-color: var(--calcite-filter-input-background-color);\n  --calcite-input-button-background-color: var(--calcite-filter-input-button-background-color);\n  --calcite-input-button-background-color-hover: var(--calcite-filter-input-button-background-color-hover);\n  --calcite-input-button-border-color: var(--calcite-filter-input-button-border-color);\n  --calcite-input-icon-color: var(--calcite-filter-input-icon-color);\n  --calcite-input-button-icon-color: var(--calcite-filter-input-button-icon-color);\n  --calcite-input-button-icon-color-active: var(--calcite-filter-input-button-icon-color-active);\n  --calcite-input-button-icon-color-hover: var(--calcite-filter-input-button-icon-color-hover);\n  --calcite-input-placeholder-text-color: var(--calcite-filter-input-placeholder-text-color);\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { debounce } from \"lodash-es\";\nimport { filter } from \"../../utils/filter\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Scale } from \"../interfaces\";\nimport { FilterMessages } from \"./assets/filter/t9n\";\nimport { CSS, DEBOUNCE_TIMEOUT, ICONS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-filter\",\n  styleUrl: \"filter.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class Filter\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Defines the items to filter. The component uses the values as the starting point, and returns items\n   *\n   * that contain the string entered in the input, using a partial match and recursive search.\n   *\n   * This property is needed to conduct filtering.\n   *\n   */\n  @Prop() items: object[] = [];\n\n  @Watch(\"items\")\n  watchItemsHandler(): void {\n    this.filterDebounced(this.value);\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The component's resulting items after filtering.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) filteredItems: object[] = [];\n\n  /**\n   * Specifies placeholder text for the input element.\n   */\n  @Prop() placeholder: string;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * The component's value.\n   */\n  @Prop({ mutable: true }) value = \"\";\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: FilterMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<FilterMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  @Watch(\"value\")\n  valueHandler(value: string): void {\n    this.filterDebounced(value);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private State/Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteFilterElement;\n\n  textInput: HTMLCalciteInputElement;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: FilterMessages;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the filter text changes.\n   */\n  @Event({ cancelable: false }) calciteFilterChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    if (this.items.length) {\n      this.updateFiltered(filter(this.items, this.value));\n    }\n    await setUpMessages(this);\n  }\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.filterDebounced.cancel();\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Performs a filter on the component.\n   *\n   * This method can be useful because filtering is delayed and asynchronous.\n   *\n   * @param {string} value - The filter text value.\n   * @returns {Promise<void>}\n   */\n  @Method()\n  async filter(value: string = this.value): Promise<void> {\n    return new Promise((resolve) => {\n      this.value = value;\n      this.filterDebounced(value, false, resolve);\n    });\n  }\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.el?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private filterDebounced = debounce(\n    (value: string, emit = false, onFilter?: () => void): void =>\n      this.items.length && this.updateFiltered(filter(this.items, value), emit, onFilter),\n    DEBOUNCE_TIMEOUT,\n  );\n\n  inputHandler = (event: CustomEvent): void => {\n    const target = event.target as HTMLCalciteInputElement;\n    this.value = target.value;\n    this.filterDebounced(target.value, true);\n  };\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === \"Escape\") {\n      this.clear();\n      event.preventDefault();\n    }\n\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n    }\n  };\n\n  clear = (): void => {\n    this.value = \"\";\n    this.filterDebounced(\"\", true);\n    this.setFocus();\n  };\n\n  updateFiltered(filtered: object[], emit = false, callback?: () => void): void {\n    this.filteredItems = filtered;\n    if (emit) {\n      this.calciteFilterChange.emit();\n    }\n    callback?.();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { disabled, scale } = this;\n\n    return (\n      <InteractiveContainer disabled={disabled}>\n        <div class={CSS.container}>\n          <label>\n            <calcite-input\n              class={CSS.input}\n              clearable={true}\n              disabled={disabled}\n              icon={ICONS.search}\n              label={this.messages.label}\n              messageOverrides={{ clear: this.messages.clear }}\n              onCalciteInputInput={this.inputHandler}\n              onKeyDown={this.keyDownHandler}\n              placeholder={this.placeholder}\n              ref={(el): void => {\n                this.textInput = el;\n              }}\n              scale={scale}\n              type=\"text\"\n              value={this.value}\n            />\n          </label>\n        </div>\n      </InteractiveContainer>\n    );\n  }\n}\n"],"mappings":";;;;;geAAO,MAAMA,EAAM,CACjBC,UAAW,YACXC,MAAO,SAGF,MAAMC,EAAQ,CACnBC,OAAQ,UAGH,MAAMC,EAAmB,ICThC,MAAMC,EAAY,02DAClB,MAAAC,EAAeD,E,MC8CFE,EAAM,M,kFAgLTC,KAAAC,gBAAkBC,GACxB,CAACC,EAAeC,EAAO,MAAOC,IAC5BL,KAAKM,MAAMC,QAAUP,KAAKQ,eAAeC,EAAOT,KAAKM,MAAOH,GAAQC,EAAMC,IAC5ET,GAGFI,KAAAU,aAAgBC,IACd,MAAMC,EAASD,EAAMC,OACrBZ,KAAKG,MAAQS,EAAOT,MACpBH,KAAKC,gBAAgBW,EAAOT,MAAO,KAAK,EAG1CH,KAAAa,eAAkBF,IAChB,GAAIA,EAAMG,iBAAkB,CAC1B,M,CAGF,GAAIH,EAAMI,MAAQ,SAAU,CAC1Bf,KAAKgB,QACLL,EAAMM,gB,CAGR,GAAIN,EAAMI,MAAQ,QAAS,CACzBJ,EAAMM,gB,GAIVjB,KAAAgB,MAAQ,KACNhB,KAAKG,MAAQ,GACbH,KAAKC,gBAAgB,GAAI,MACzBD,KAAKkB,UAAU,E,WA7LS,G,cAUU,M,mBAOe,G,sCAUX,I,WAKP,G,sHA7BjC,iBAAAC,GACEnB,KAAKC,gBAAgBD,KAAKG,M,CA6C5B,gBAAAiB,G,CAKA,YAAAC,CAAalB,GACXH,KAAKC,gBAAgBE,E,CAgBvB,qBAAAmB,GACEC,EAAevB,KAAMA,KAAKwB,gB,CAsB5B,uBAAMC,GACJC,EAAuB1B,MACvB,GAAIA,KAAKM,MAAMC,OAAQ,CACrBP,KAAKQ,eAAeC,EAAOT,KAAKM,MAAON,KAAKG,O,OAExCwB,EAAc3B,K,CAGtB,iBAAA4B,GACEC,EAAmB7B,MACnB8B,EAAiB9B,MACjB+B,EAAgB/B,K,CAGlB,kBAAAgC,GACEC,EAAsBjC,K,CAGxB,oBAAAkC,GACEC,EAAsBnC,MACtBoC,EAAoBpC,MACpBqC,EAAmBrC,MACnBA,KAAKC,gBAAgBqC,Q,CAGvB,gBAAAC,GACEC,EAAmBxC,K,CAkBrB,YAAMS,CAAON,EAAgBH,KAAKG,OAChC,OAAO,IAAIsC,SAASC,IAClB1C,KAAKG,MAAQA,EACbH,KAAKC,gBAAgBE,EAAO,MAAOuC,EAAQ,G,CAM/C,cAAMxB,SACEyB,EAAmB3C,MAEzBA,KAAK4C,IAAIC,O,CA0CX,cAAArC,CAAesC,EAAoB1C,EAAO,MAAO2C,GAC/C/C,KAAKgD,cAAgBF,EACrB,GAAI1C,EAAM,CACRJ,KAAKiD,oBAAoB7C,M,CAE3B2C,K,CASF,MAAAG,GACE,MAAMC,SAAEA,EAAQC,MAAEA,GAAUpD,KAE5B,OACEqD,EAACC,EAAoB,CAAAvC,IAAA,2CAACoC,SAAUA,GAC9BE,EAAA,OAAAtC,IAAA,2CAAKwC,MAAOhE,EAAIC,WACd6D,EAAA,SAAAtC,IAAA,4CACEsC,EAAA,iBAAAtC,IAAA,2CACEwC,MAAOhE,EAAIE,MACX+D,UAAW,KACXL,SAAUA,EACVM,KAAM/D,EAAMC,OACZ+D,MAAO1D,KAAK2D,SAASD,MACrBE,iBAAkB,CAAE5C,MAAOhB,KAAK2D,SAAS3C,OACzC6C,oBAAqB7D,KAAKU,aAC1BoD,UAAW9D,KAAKa,eAChBkD,YAAa/D,KAAK+D,YAClBC,IAAMpB,IACJ5C,KAAKiE,UAAYrB,CAAE,EAErBQ,MAAOA,EACPc,KAAK,OACL/D,MAAOH,KAAKG,U"}