{"version":3,"names":["switchCss","CalciteSwitchStyle0","Switch","this","keyDownHandler","event","disabled","isActivationKey","key","toggle","preventDefault","clickHandler","setSwitchEl","el","switchEl","setFocus","componentFocusable","focusElement","syncHiddenFormInput","input","type","onLabelClick","checked","calciteSwitchChange","emit","connectedCallback","connectInteractive","connectLabel","connectForm","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectInteractive","disconnectLabel","disconnectForm","componentDidRender","updateHostInteraction","render","h","Host","onClick","onKeyDown","InteractiveContainer","toAriaBoolean","getLabelText","class","ref","role","tabIndex","HiddenFormInputSlot","component"],"sources":["src/components/switch/switch.scss?tag=calcite-switch&encapsulation=shadow","src/components/switch/switch.tsx"],"sourcesContent":["/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-switch-corner-radius: Specifies the corner radius of the component.\n * @prop --calcite-switch-handle-background-color: Specifies the background color of the component handle.\n * @prop --calcite-switch-handle-border-color: Specifies the border color of the component handle.\n * @prop --calcite-switch-track-background-color: Specifies the background color of the component track.\n * @prop --calcite-switch-track-border-color: Specifies the border color of the component track.\n */\n\n:host {\n  --calcite-internal-switch-border-radius: 9999px; // TODO: drop once --calcite-corner-radius is updated\n  --calcite-internal-switch-handle-border-color: var(\n    --calcite-switch-handle-border-color,\n    var(--calcite-color-border-input)\n  );\n\n  @apply relative\n  inline-block\n  w-auto\n  cursor-pointer\n  select-none\n  align-middle;\n}\n\n.container {\n  @apply outline-0;\n  display: flex;\n}\n\n.track {\n  @apply align-top\n    border\n    border-solid\n    box-border\n    focus-base\n    inline-block\n    pointer-events-none\n    relative;\n\n  border-color: var(--calcite-switch-track-border-color, var(--calcite-color-border-2));\n  background-color: var(--calcite-switch-track-background-color, var(--calcite-color-foreground-2));\n  border-radius: var(\n    --calcite-switch-corner-radius,\n    var(--calcite-internal-switch-border-radius, var(--calcite-corner-radius-pill))\n  );\n  block-size: var(--calcite-internal-switch-track-height);\n  inline-size: var(--calcite-internal-switch-track-width);\n}\n\n.handle {\n  @apply absolute\n    block\n    border-2\n    border-solid\n    duration-150\n    ease-in-out\n    pointer-events-none\n    transition-all;\n  inset-block-start: -1px;\n  inset-inline: -1px theme(\"inset.auto\");\n\n  border-color: var(--calcite-internal-switch-handle-border-color);\n  background-color: var(--calcite-switch-handle-background-color, var(--calcite-color-foreground-1));\n  border-radius: var(\n    --calcite-switch-corner-radius,\n    var(--calcite-internal-switch-border-radius, var(--calcite-corner-radius-pill))\n  );\n  box-shadow: var(--calcite-internal-switch-handle-box-shadow);\n  block-size: var(--calcite-internal-switch-handle-height);\n  inline-size: var(--calcite-internal-switch-handle-width);\n}\n\n:host([scale=\"s\"]) {\n  --calcite-internal-switch-handle-height: var(--calcite-size-sm);\n  --calcite-internal-switch-handle-width: var(--calcite-size-sm);\n  --calcite-internal-switch-track-height: var(--calcite-size-md);\n  --calcite-internal-switch-track-width: var(--calcite-size-xxl);\n}\n\n:host([scale=\"m\"]) {\n  --calcite-internal-switch-handle-height: var(--calcite-size-md);\n  --calcite-internal-switch-handle-width: var(--calcite-size-md);\n  --calcite-internal-switch-track-height: var(--calcite-size-lg);\n  --calcite-internal-switch-track-width: var(--calcite-size-xxxl);\n}\n\n:host([scale=\"l\"]) {\n  --calcite-internal-switch-handle-height: var(--calcite-size-xl);\n  --calcite-internal-switch-handle-width: var(--calcite-size-xl);\n  --calcite-internal-switch-track-height: var(--calcite-size-xxl);\n  --calcite-internal-switch-track-width: #{$calcite-size-48};\n}\n\n:host(:focus) .track {\n  @apply focus-outset;\n}\n\n:host([checked]),\n:host(:hover),\n:host(:focus) {\n  --calcite-internal-switch-handle-border-color: var(--calcite-switch-handle-border-color, var(--calcite-color-brand));\n}\n\n:host([checked]) {\n  .track {\n    background-color: var(--calcite-switch-track-background-color, var(--calcite-color-brand));\n    border-color: var(--calcite-switch-track-border-color, var(--calcite-color-brand));\n  }\n\n  .handle {\n    inset-inline: theme(\"inset.auto\") -1px;\n  }\n}\n\n:host(:hover),\n:host(:focus),\n:host([checked]:hover) {\n  --calcite-internal-switch-handle-box-shadow: inset 0 0 0 1px var(--calcite-internal-switch-handle-border-color);\n}\n\n:host([checked]:hover) {\n  --calcite-internal-switch-handle-border-color: var(\n    --calcite-switch-handle-border-color,\n    var(--calcite-color-brand-hover)\n  );\n}\n\n@media (forced-colors: active) {\n  :host([checked]) {\n    background-color: canvasText;\n  }\n}\n\n@include disabled();\n@include hidden-form-input();\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport { focusElement, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  CheckableFormComponent,\n  connectForm,\n  disconnectForm,\n  HiddenFormInputSlot,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Scale } from \"../interfaces\";\n\n@Component({\n  tag: \"calcite-switch\",\n  styleUrl: \"switch.scss\",\n  shadow: true,\n})\nexport class Switch\n  implements LabelableComponent, CheckableFormComponent, InteractiveComponent, LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true })\n  form: string;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** When `true`, the component is checked. */\n  @Prop({ reflect: true, mutable: true }) checked = false;\n\n  /** The component's value. */\n  @Prop() value: any;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSwitchElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  switchEl: HTMLDivElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Switch[\"checked\"];\n\n  defaultChecked: boolean;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusElement(this.switchEl);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    input.type = \"checkbox\";\n  }\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (!this.disabled && isActivationKey(event.key)) {\n      this.toggle();\n      event.preventDefault();\n    }\n  };\n\n  onLabelClick(): void {\n    if (!this.disabled) {\n      this.toggle();\n      this.setFocus();\n    }\n  }\n\n  private toggle(): void {\n    this.checked = !this.checked;\n    this.calciteSwitchChange.emit();\n  }\n\n  private clickHandler = (): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.toggle();\n  };\n\n  private setSwitchEl = (el: HTMLDivElement): void => {\n    this.switchEl = el;\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the `checked` value has changed.\n   */\n  @Event({ cancelable: false }) calciteSwitchChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLabel(this);\n    connectForm(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    return (\n      <Host onClick={this.clickHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            aria-checked={toAriaBoolean(this.checked)}\n            aria-label={getLabelText(this)}\n            class=\"container\"\n            ref={this.setSwitchEl}\n            role=\"switch\"\n            tabIndex={0}\n          >\n            <div class=\"track\">\n              <div class=\"handle\" />\n            </div>\n            <HiddenFormInputSlot component={this} />\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n"],"mappings":";;;;;8bAAA,MAAMA,EAAY,mrIAClB,MAAAC,EAAeD,E,MCuCFE,EAAM,M,kFAiFjBC,KAAAC,eAAkBC,IAChB,IAAKF,KAAKG,UAAYC,EAAgBF,EAAMG,KAAM,CAChDL,KAAKM,SACLJ,EAAMK,gB,GAgBFP,KAAAQ,aAAe,KACrB,GAAIR,KAAKG,SAAU,CACjB,M,CAGFH,KAAKM,QAAQ,EAGPN,KAAAS,YAAeC,IACrBV,KAAKW,SAAWD,CAAE,E,cAnGgB,M,wEAqBI,I,aAGU,M,qBA+BlD,cAAME,SACEC,EAAmBb,MAEzBc,EAAad,KAAKW,S,CASpB,mBAAAI,CAAoBC,GAClBA,EAAMC,KAAO,U,CAUf,YAAAC,GACE,IAAKlB,KAAKG,SAAU,CAClBH,KAAKM,SACLN,KAAKY,U,EAID,MAAAN,GACNN,KAAKmB,SAAWnB,KAAKmB,QACrBnB,KAAKoB,oBAAoBC,M,CAgC3B,iBAAAC,GACEC,EAAmBvB,MACnBwB,EAAaxB,MACbyB,EAAYzB,K,CAGd,iBAAA0B,GACEC,EAAuB3B,K,CAGzB,gBAAA4B,GACEC,EAAmB7B,K,CAGrB,oBAAA8B,GACEC,EAAsB/B,MACtBgC,EAAgBhC,MAChBiC,EAAejC,K,CAGjB,kBAAAkC,GACEC,EAAsBnC,K,CASxB,MAAAoC,GACE,OACEC,EAACC,EAAI,CAAAjC,IAAA,2CAACkC,QAASvC,KAAKQ,aAAcgC,UAAWxC,KAAKC,gBAChDoC,EAACI,EAAoB,CAAApC,IAAA,2CAACF,SAAUH,KAAKG,UACnCkC,EAAA,OAAAhC,IAAA,0DACgBqC,EAAc1C,KAAKmB,SAAQ,aAC7BwB,EAAa3C,MACzB4C,MAAM,YACNC,IAAK7C,KAAKS,YACVqC,KAAK,SACLC,SAAU,GAEVV,EAAA,OAAAhC,IAAA,2CAAKuC,MAAM,SACTP,EAAA,OAAAhC,IAAA,2CAAKuC,MAAM,YAEbP,EAACW,EAAmB,CAAA3C,IAAA,2CAAC4C,UAAWjD,S"}