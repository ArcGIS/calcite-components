:host([alignment="start"]),
:host([alignment="end"][dir="rtl"]) {
  @apply text-left;
}

:host([alignment="end"]),
:host([alignment="start"][dir="rtl"]) {
  @apply text-right;
}

:host([alignment="center"]) {
  @apply text-center;
}

:host([scale="s"]) {
  --calcite-label-margin-bottom: theme("spacing.3");
  label {
    @apply text--2;
  }
}
:host([scale="m"]) {
  --calcite-label-margin-bottom: theme("spacing[3.5]");
  label {
    @apply text--1;
  }
}
:host([scale="l"]) {
  --calcite-label-margin-bottom: theme("spacing.4");
  label {
    @apply text-1;
  }
}

:host label {
  @apply cursor-pointer 
    w-full 
    mt-0 
    mr-0 
    ml-0
    leading-snug;
  margin-bottom: var(--calcite-label-margin-bottom, $baseline);
}

:host([layout="default"]) {
  label {
    @apply flex flex-col gap-1;
  }
}

:host([layout="inline"]),
:host([layout="inline-space-between"]) {
  label {
    @apply flex items-center flex-row gap-2;
  }
}

:host([layout="inline-space-between"]) {
  label {
    @apply justify-between
  }
}

// disabled styles
:host([disabled]) {
  & > label {
    @apply pointer-events-none;
    opacity: var(--calcite-ui-opacity-disabled);
  }
  ::slotted(*) {
    @apply pointer-events-none;
  }
  // prevent opacity stacking with already disabled child elements
  ::slotted(*[disabled]),
  ::slotted(*[disabled] *) {
    @apply bg-opacity-100;
  }
  ::slotted(calcite-input-message:not([active])) {
    @apply bg-opacity-0;
  }
}

// status
$inputStatusColors: "invalid" var(--calcite-ui-danger), "valid" var(--calcite-ui-text-2),
  "idle" var(--calcite-ui-text-2);

@each $statusColor in $inputStatusColors {
  $name: nth($statusColor, 1);
  $color: nth($statusColor, 2);

  :host([status="#{$name}"]) label {
    color: $color;
  }
}

:host([disable-spacing]) {
  label {
    @apply gap-0 m-0;
  }
}
